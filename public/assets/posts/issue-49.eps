%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Pol_Apr22_024.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Admin
%%CreationDate: 5/3/2022
%%BoundingBox: 0 0 2742 1828
%%HiResBoundingBox: 0 0 2742 1828
%%CropBox: 0 0 2742 1828
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-05-18T09:11:40+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6FmwcB2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVA69qEmm6HqOoxoJZLK2muEjOwZooy4U9OtMEjQtMRZp&#xA;41a+b/Lb20k2pX82paossn1m8E/osrGRuAhZ5YFQcR8IhNB880GSeaUrunr8ENHDHwkCXf8AgkfY&#xA;z/8ALTznZ69ZXdot4bm5sJeKesyG4a3ZVZHfgSG4szR8h/Lvuc3GmySlH1fU81rccI5DwfQzTMhx&#xA;HYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWE6z+Z&#xA;/l+NprOxgfV3AKSlOKW29VKmV/tg77orDI3fJlwvIeekNo371WTzDC72ks0LqltPbiJlikPqQz/v&#xA;4SojZKozDgV5NVswDGUTtyc4SjIb82UeQ/Ot/oehQ28GnQ3MMjSTLJLKYpmSViyc2WOQEhab5mYw&#xA;acTJVsqg/NyNFZtQ0iWJVFS1tNFMo8amb6t0ydlhQZL5b87+W/MVU0y653Cp6j20imOQJXjyAbZ1&#xA;rtyQke+IkCgxIT3JIdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirBvzO8wtb2SaFaSFbvUVLXTqaNHaA0fcdDKfgX25EbjInfZkO95j6KpqULRqFRbd0cLQbBk9M&#xA;U8B8dMNbreyH1qzsHgM0sUZlLx/GyrUhZF2Neo9jkZgJiSjJ7mBLeQrKi8UJHxDagwmQQIli/me6&#xA;jhulsbq6F0La2hlBjUqvrSwpIanm/Jk9VVB23rtlJlfNuEe56p+XWhxRS6X5h1TVrFJEtg8FvFKG&#xA;kJuIgCZXf0+OzboFPxd9ssBuiWuQqwHpX6c0X/q4W3/I6P8Ark+IMOEqlvqenXEnp291DNJSvCOR&#xA;Wag70BONhaKJwodirsVdirsVdirsVdirsVdirsVdirsVY55183Dy/aQrBEtxqd4WW0hckIAgHOWQ&#xA;jfgnIbDckgbdQCUgMIl/NvzFp0Zub+3srq3BCmGFZbaRixoArvJcCvsV+kZEkhkAC9I8ua/YeYNF&#xA;ttXsOX1a6UlVkHF1ZWKujAE7qykHfJA2GJFFMsKHYq0SACSaAdTiqA/xBoP/AFcrX/kfH/zVgsJo&#xA;u/xBoP8A1crX/kfH/wA1Y2Fou/xBoP8A1crX/kfH/wA1Y2Fou/xBoP8A1crX/kfH/wA1Y2Fou/xB&#xA;oP8A1crX/kfH/wA1Y2FovDde1X9Ja/qN2+oxw3DXMqMoMbUiiYxwL8Vfh9Na7faJLd8gD5syPJKr&#xA;dpbWeaYXdpdPOF9RnkMRJUtTp6ooAwFAB08ScRt1U7vQPyC1W11L819Os57dH4xXisCySoSsR3Wo&#xA;qRt4ZVllYbMUaLNfN/5veYfL2h+X7hbPRNR1jzBax3cOmR6ZOgVXjVyC4u5WJLPxQcPioemYniOZ&#xA;4bGdWsrD8z9O1jWdZt9Jt9Z8q2kjXFrZWlzGssQrOimYXcbcqwPGQ0YZOTbbqcAy30TLDXV7jq6r&#xA;o90um6ZHb2thbRRx29uvlrU9RCIqAAC5tZEibp0A26HLWlBfpXUP9+Qf+Ebrf/VbFUF58uNPt7Dy&#xA;vfXTW9vJLcTiS4Nq+mBv3Eg/uLkmWP5M3vlmL6mvL9KQf4g0H/q5Wv8AyPj/AOasy7Di0Xf4g0H/&#xA;AKuVr/yPj/5qxsLRVrbVdLupPStryCeSleEciO1B3opONrSKwodirsVdirsVdirsVdirsVdirx/z&#xA;9LPJ50vRPUejBBHaqe8BUuXH+tKzr/sciObI8kssPJcnmWz1DUla1vLTQTS70iU3PrMJompcqtok&#xA;sp9IkFQEIajV6UOHqc9S4XM0+G48TKfyL0/T7Xy/qcloqMJL7ityqlGliW3heJmDEsK+oW4k7csy&#xA;MPJxs3N6VlzU7FWP+eBy0QQsAYp7m3jmQ7h0Mqkow7q1KMO42yMuTKPNlvlr8ldLvPL2m3l5rN81&#xA;1dW0U8xhi0+OINKgchEa1kKqK0ALE+5zF8WTleHF3mT8odB0by9qmrrqWo3DadaT3a25/R0YkMET&#xA;ScC/1F+PLjSvE08MfFkvhxSb/lTnnP8A5ZbT/uMw/wDjO4+LJfDi7/lTnnP/AJZbT/uMw/8AjO4+&#xA;LJfDiqQfk15rJPrw28Y7FNWgc1+ny+mPiyXw4q3/ACpfXq14x1Pf9JW3/eCx8WS+HF3/ACpjX/5Y&#xA;/wDuJW//AHgsfFkvhxRXlryDqflzz1oN1dBQkpuoxxu4rnf6s5+ymnaeR068z8sjKZPNIgByeC3P&#xA;my1bzfZXLmdJtG8vW2n6feWjhZreZLO3uEloWUcDNNJFIW24MfemLIdHLh3phaeabMefPML2Iuzp&#xA;/mfQ9Tii+vSGSf1LezadnkJaSvH0DHGeTDhTc1wQ5e5OTv730J5zk01NfmFxLp6SFUNLi+v4JKcR&#xA;1jgHpj6MyXFSP6xov+/9J/7ieq/0xVF+cNHTW9J8n2dskk8T3FywXTp4nrwt5d1l1BHqP9Za4QaQ&#xA;RaEsfyiWe7jiuYdYtIGrzuGl0VwuxIqqWxY77bZPxZMfDinH/Ki/L/8A1d9S/wCB07/sjx8WS+HF&#xA;gX5pfl7B5UfRr6y1Ge6hnukjMVzFbCSOZZEdJYpbeK3ZfhDIymoYN86yhMk7sJQAGyf5lOM7FUs8&#xA;x69aaFo9xqdyOSwgCOIGjSSMeKRrX+Zj17dTtgJpIFvGE8xeZvNN7eGzkvdXurSGS7ubbTZGitoI&#xA;owWIQB4leg2X7Tt2r0yieaMeZb4YZS5Bm35V+ar6/wCel3k73Segt3YTysXl9OoWSN3O78S6FWO+&#xA;+/TLYlqkHomTYOxV2KuxVD399bWFjcX103C2tY3mmelaJGpZjQddhgJUB4H5i1vW/Ml+utEcAqtH&#xA;a20bhWhj5bx0ZeMpJFWLECv2SBkKJ3bNhslsV1evcQG3vPQuzN+89NGikjpC4LFSxZWI+Gobi2xP&#xA;Ki0rljjI2ebZHIYihyTTyzqd3p0PraJfzWx5t6q8xLHIVPGskTco9wo6AEDYEZbECtmqRPVNtS/O&#xA;rzAlubaA2Ru6HlNDHI3TYsObmOPjUVqX+WAzSIMLufMXmzXdbsdMv7i9uhqTAoIfVl9VGJAMdqrQ&#xA;QuoZeqqB8J8MplNtEHqflb8h/wA4E82LpV5dLpmj28cd0bl2kurOfjIPgWNH4rKNvhJU9aMV+1E5&#xA;GXA+hrXRfNmm6XbWlz5msre2tI47eOaHT/RYpGvEVa4ubheRVfCntlbYhNc0y2uPLF9c6155uI/L&#xA;9zC8F3dRjS4bb0Zv3DAytbSU5FuNQ/XFU4HlvWWAI826qQdwRFpVCP8ApBxVCS/prQ9c0hZ9YvNW&#xA;stSe4tXt7mOyUiZLd7qMxm3t7Zq8bdxQmm+KpV5n896XZeX9Q1XVtd/QWg6tamy0uSW2uI9StdQ/&#xA;fRTcbdVEzlPhYBRUFWNeJBAJpaRejeetN1K1t/MGlaodY8tvFHYW0FlbSy3cuos59QzIU9SLhGqE&#xA;BuIAZmfbicQVZthVj+vf8pP5Z/4z3X/UJJirwm0/Kry7YaxaaxF+auhxa7YRLbRX/wBUsfUEcUYg&#xA;VGRrtoyVjHHkyl6ftZEwBFFIlIGwV8/5Z+XZ9UvNXl/NXQ31fUIpLe7vzaWPqNFNGYnVV+t+nFyR&#xA;jVo1Vj3JxEABQUykTZL3P/lYfkD/AKmbSv8ApOtv+a8kh3/Kw/IH/UzaV/0nW3/NeKpd5k16wGq+&#xA;VdSteepWks90YpLBTdBwbWQVX0uVR7jFWQ6TrMeperwtbu29LjX63A8HLlX7HMDlTjvTFUwxV5P/&#xA;AM5Cf8cvQP8Atop+rJ4+bDJySDWPMGjaNEsup3aWwevpI1TI5HURxrV3I/yQczCacQC2KXn5sacp&#xA;ZdO065uyPsSy8baJv+DLTD6YsFppgn5gedb/AM0+XkQabFDbQGSd1S4aVmb0niX4WhipwL1P9chK&#xA;yGcaBYxDZaDcWtlNbysFt4mM8dyYWi9TkW9NSnp3R5btGyq7MrKNgjFcIyINOYIgi2V/kVG6eY5I&#xA;1cTQxafOeaV4I001u3pqT2HE/jmZjcTI9yy5pdirsVdirFPzOnEflCeKtGuZ7aIDxBnRnH0orZGT&#xA;KLx2zuGtLGCKWCU+iDFI6IWoU2rxFXPLrUA4g0EkWV7LpuosrxSqbiH7EsTASxnuPH5qwp7Y7FG4&#xA;burSG5FjZXY+vPAoisLZYIjO4QbD9zGss23UMSO58ciYgc2Qkej3P8l/yWjnbS/OXmJLeSFYvX0b&#xA;SOCTBPUUcJrhmBQSKN1jUfA1CW5CgoyZLb4QplHnnWPMGn+eb260/S9AMmi6I2rRX2oQu17PbxOy&#xA;3EKXSmP6txI22kXepplTY1+a+peZtc03ylp3lRru1v8AWnfUlNvMtrMkdtaGSMSO9U4LcTwtIhry&#xA;AK4qqa7p15+Yf5LX8mu+X4F82RWWoxW9k8SztDqVr6sAa2aVKr6skQKlex2ZupVTHz35IvvMGi+X&#xA;PLuk2tvpejrepd6tGIYZLeGGCKSVIfqpMayB7ox7AUFKnFU1/LHQPMPl7yuuh63dm9OnTy22mXLc&#xA;OTafEQtpy4ftemBXlvXFUX50rFDo9+v2rLVrHj1r/pkv1Bun+TdnFXnv5i3pl/Nvy7qD6dNqOkeU&#xA;YLia+EbWyhbi8irH8NzLbg+mEjk5VoNu4zC1Gtx4pgSO/uLk4dNOcSYhM/yrTRbPzj5tjsYL3Tn1&#xA;t4dXGlXcdsscZIMMzxPbT3CsXk3YNxI2pXJ6bU48tmBtjmwTx0JB6hmU0Mf17/lJ/LP/ABnuv+oS&#xA;TFUsk1/VBIwHnHy6gBNFa0csBXoT+khv9GKrf0/qv/U5+W/+kR/+8nirv0/qv/U5+W/+kR/+8nir&#xA;v0/qv/U5+W/+kR/+8niqU+fka/TymZ/qGtM9xclpF0x9RtZCLaT4ktVuCRTx9U4qnn5fWMdoL/hp&#xA;9pYc/SqLTR5NH505/b5zT+tSu1Kcf9lirL8VfOPnDzT5m882tnKTZWunxXH1yxiEUxl4V/d+pIZe&#xA;L8koTSNc1c+1OCZHDyd9i7C8TGJcVWL5PKfM2o6nfahq+ozFG1BXa1tuAbgBbn0ljQOWIDSqxPux&#xA;ObvFm4sfiHaxbz2fT8GY4hvRpMZPJnnQt+7/AEaq/wCVNOxp9EK5rf5cx9x/Hxdx/oazfzo/b+pq&#xA;38l+aLaL0zDayMWd2ZJ24lpGLtTlED1Y5KPbWLukxl7OZ75x+39SRr+WeriaeSTTJfSkc8baC6RU&#xA;CEbinqJsWqaVA3xHaenJs2wPYmrA2A+YZV5Lh1ryndX08eg3H1Ga1PO3he1JaeE1iP8Afcvss4JF&#xA;T065aO1NPex+xql2Jqq3j9oZv+Xvnqz856G2pW9u9s8MvoXELnkBIEVzxYdV+Pbv7ZsYT4g6eceE&#xA;soybF2KuxVhP5sMf0Lpyg/C+oIG9wtvOw/FRkT0ZDq85yTFAX1rbXGoWizxJKOMuzqG6cfHIkAlm&#xA;Ds9m/L/R9Is/K+k3dpZwwXN1YWr3E6RqskhaJWPNwOTbmu5xiNkSO7138qJS3kq3hY/FaXN9bAHs&#xA;kV5KsQ6D/dXDpmHMbly4nYJV5m0/y/5tv7W7m8n6lrUlijwwvc8tOtSsjo7pPDdS2zzJyhU0aBxt&#xA;0yLJH6p5o12xKjU7vy75bGwSS9vXuXCtQ0MbLp4B9hIR74qgB5nuroBj5rkuUI3fy/olxOtNt1bj&#xA;qg/WN8VXfWr+YgR6l5svUqSB9Qs7P2qTJZ2j/QT9GKq1kmqrexXB0/zRdLG6FTPdadFF8JqeUQuY&#xA;GZd/i5Ia9sVTv8wlb/BOtTIKy2dq97CAKky2Y+sRgf7OIYqwT8yPI2sa7P5gtE0ufUtL8wQQiO6s&#xA;5bRTEyRCMFluZrfdWQOvGoOanV6PLPNHJCvT3ufp9RCOMwle6a/l55V1mw8xvqFzpkmlafbaZHpt&#xA;rBcSwSSMVl5gr9XlnXiqqB8TA17ZPs7SZMPFx1cjezHWaiGSuHkA9HzZuEx/Xv8AlJ/LP/Ge6/6h&#xA;JMVQz6b5o5tx0vQytTxLNNUj3/cnFVv6N81f9WrQv+Cm/wCqGKu/Rvmr/q1aF/wU3/VDFXfo3zV/&#xA;1atC/wCCm/6oYqkP5h21w3+FIroJbTrc3PNbO1v76Nf9Gk2SKxe3np71piqdfl9bCEX9JZJOXpf3&#xA;mn6pp9Kc+n6SmuPU6/7rpT9rqMVZfir5W0dbifQ/LlrHcPam7S1ikmhEZcL9XLnj6qyJuV7rmi0u&#xA;COXUmMuVl67WameHRxlA1Ko/cwrS9OF/5sj0BLom8/Ss7XDn0zKv1e4kuHdkAC7mP+Xia++dKMMe&#xA;Dw+nL4PG+PPxfFP1Xfxei6PcTXGmW80zB5XT42ApUg0rQeOcZqICOSURyBfRdJkM8UZS5kBGZS5D&#xA;sVaIBBBFQdiDiqE/LPy9pOiWWrQabEYYWv3+AuzgBY46Acielc7Ps6ZniEjzL5z2tijjzyjH6QzL&#xA;M51rsVdirDvzUtnk8tRXK7iyu4Zn8eL1tyfo9ap9siWUXl0F5aT1EMySEGjKrAkHwI6g4QQUEFSu&#xA;dtQsz3IlFPbiDX8MTzCRyexflwzHyXpvI1CiVI/aNJnVB9CADBHksub0/wDKaULF5gtCd49RWeNP&#xA;COa0g38d5UkzFyj1OTiPpa1XSXvNTuYjo2sa4RKf3t7fi00wVNeAgSZOaLWgP1Z/mcrbEAl9Z6Dd&#xA;GGC58neU7kne0hX65OxOzALG2luSa/yHFUSus3lx8Q8w69O5+yNN0P04G61pJdWVwp/5G9cVbFrq&#xA;EwHqaf5tvU2Bc31lZkgb04x3do/0ha++KufQ55h8Pl/zHGisCBJ5juI3JG/+6dSkFP8AZfRirOZb&#xA;Zb7SntrmNoluoDHPCxDMokTiylgSCRWla4qlvkS7mu/JWg3E5rcyafbG467SiFRIPi32euKp5irs&#xA;VY15rnNnq2gag8FzNa21xP8AWGtbee6dPUtpFUmO3SV6Ftq8aYqkCP8AlBcz3ATysJpoJPTuv+da&#xA;vGZZGRZaP/oX2ikitv2OKqn1X8pv+pQ/8Nm8/wCyLFXfVfym/wCpQ/8ADZvP+yLFXfVfym/6lD/w&#xA;2bz/ALIsVXXNr5f1zU/L+l6fpd5baXp8lxLJF9RvtLhiUwOq8XaK2Xd3+yp+jFWX6ToOmaSJRYpI&#xA;gm4+oJJppvs1pT1XenXtiqrq0/1fS7y45iL0YJJPUJAC8UJ5VPhTFXzNYafbT6Bp0MkXL0IIWhBZ&#xA;lKOsQUEMvxKaGlRnLeNKGQyiaNl778vDJijGQsUPueNeR73V7/W7e5sY7iaSNvV1N7e4khlaGeQJ&#xA;MwaNo3O786cu2dLqs/Bj2PDLofN4vQaY5cv08URzHl+x7ta2sFpbRW1uvCCFBHGlSaKooNzUn5nO&#xA;UlIyJJ5l7yEBGIiOQVcizdirsVRHkwV0q4elFe9vKe/G4dD+KHO07OFYI+5847WN6mfvT7M11zsV&#xA;dirH/PsCXHlW7tnqBcvbwKymhVpbiNFYf6rMDkMhoMoc3n91+Wxnb4r6GWMfZ+sWglf6WWSNf+Fy&#xA;jxT1bKCD038s4W1SeW4mWGO0YRQvbWqQM/JEkZlaQzdC3GoHjkTMpej+Qo47XR59LStNNu54QWJY&#xA;lZW+tISTufguACfHMjEbDXPmzbyLrOmaP5m1p9SvIbK1ubC0lEtxIsUQNvLOshLPRakTp37ZTnG7&#xA;dhOyN1rzL+VV/fyXFw1z5ikkAAtoRe32nkKoHwpU6cK0rXvlYiS2GQCXXn5qW/l+wT9B+ThZ2rSx&#xA;wiGaa2slq54qQloLwUHvTJeEWPihl2lv5+1fTbXUP0hpunQ3kMc6wR2c1zIqyKHA9Z7iFa0ND+6y&#xA;tsREvlnzE8bsfNeomUqQIo4tOhiJptu1nNIvz5HFUi/w35/ZqzOZaCgH6fuIgP8AkTpkVfpxVx8t&#xA;eeqVRTG4oQ48xXrUp/kvpzqfpGKqFh+Xz2lqsD+SfLl7ICzSXV3dmaeRnYuzSSHS6satiqI/wT/3&#xA;4HlT/kf/AN6vFXf4J/78Dyp/yP8A+9Xirv8ABP8A34HlT/kf/wB6vFU00u080aTbm20ryxoWn2zM&#xA;ZGhtdQmhQuQAWKx6aorRRviqM+u+f/8AqzaV/wBxW5/7x2Ku+u+f/wDqzaV/3Fbn/vHYq7675/8A&#xA;+rNpX/cVuf8AvHYq7675/wD+rNpX/cVuf+8diqY6TNr0ol/S9na2hFPRFpdSXQYb8uXqW9rxptSl&#xA;a+2KoLz3OLfyP5hnI5CLTLxyo6kLbucB5JjzfNus6P5iuISmmagtoRYSWyCrAC5Z4ikuwOyqjDpX&#xA;fOXx5IA+oX6vs3e8zYcpHolXpr47bqA8uala+YrnUNN+rWtrdTWjTCOONJHijEpuAzBKsZGdO/bq&#xA;Ml40TACVki/0Uw/LSjkMo0ATHp776ddkZoEPmpJY/wBMzRSILOISCMLQ3fqSGUghVNPT9MZDKcf8&#xA;Pf8AY26cZgfWR9I/01m/spA2T+fx9TF0kLf7wi8Yen39U3pWh6j92B+GTl4O9ef6K/S0wOo2uv4b&#xA;+3i/QjdZvvM8OoiPTbJJ7IxwEytSvqPdIkoPxqaLb8m6dchjjAj1Hff7v1tuaeUSqIuO3+63+xrQ&#xA;tS8y3F40Oq2C2sQheT1F6ep9aljRK8mB/cIjn5/RjlhAC4m/7B+lcGTLKVTjW3++P6KLJ/JYI0I1&#xA;Nf8ATdQ/6jp86/Q/3MPc8B2n/jOT+sU9zLcF2KuxVI/Of/HC/wCjyw/6jocry/SyhzQEsqRRPLIe&#xA;McalnY9goqTmI2JJ5Okn/RPo3sXo6mrGa/j61kuf9IDgnqGWQfL7P7OEiklPfL0no+Zb+A7Ld2sM&#xA;8Y8Xhd45T/wMkQy7CebCfJkctpaSzRzywxyTQ19GVlBZOVK8WIqK0HTL6a7VsKpB51/45UH/ADF2&#xA;3/JwZGfJlDm9x8pf8oro3/MDbf8AJlcwXNTOQSGNhGQJKHgWBKhqbVAIqPpxVB6Emtpo9ouuyW8u&#xA;riMfXpLNXS3Mnf01kLPx+ZxV5nfXAF7cAzzA+o+w1LzMo+0egjHAf7HbwxVPvIUofWJh6sj/AOjs&#xA;aPea1cj7afsaiBCPmvxfRXFWeYqpXbMtrMy8uQRivp8A9QD9n1Pgr4ctvHFXnP6X1/8A5bfMn/I3&#xA;yl/XFXfpfX/+W3zJ/wAjfKX9cVd+l9f/AOW3zJ/yN8pf1xV36X1//lt8yf8AI3yl/XFXfpfX/wDl&#xA;t8yf8jfKX9cVd+l9f/5bfMn/ACN8pf1xVk/k26v7hLtrufUZuJQINSbSWI+1X0/0Xtv39T2p3xVk&#xA;NxbwXEElvcRrNBMrRyxOAyOjCjKynYgg0IxV4T+cHkTQfLNlpE2hNeWP1q7S3mjF5cyoY6dFE0kn&#xA;H/Y0ykaPFI7xDlHtHPEbTKAPk6ICkeqX8dPsn1Inp/yMiev01y09lYD0YDtzUj+Jh2nfpm4s4p5N&#xA;ZuuTqagR2YHX/mHycextORdH5lhL2h1YNcQ+QUIdR1s63cab+lX4xwq8DyQwEs4NZVPFEB4LJF0p&#xA;1yH8jacyI3+bYPaLVCINj5Iy5vfMVt6Mn163aJ54YZTJbMQqzSrGX+GZPscuR36ZXk7CxAWDJux+&#xA;0+cncR+39bJ/8O+Zd/8AcrZe3+gy/wDZXlP8h4/5xb/9E2X+bH7U40TTP0XpcNl6nrNHyaSULwDS&#xA;SOZHYLVqVZjtU/M5t8WMQiIjo6DNlOSZkeZKOyxqdirsVY/51kH6MtbXrJd39osYrTeGYXTf8k7d&#xA;sryn0s4c0l8wI0+mPYp9vUXjsVpWoFy4idhT+RGZvozFAstiY+Zrf6rrWm6hEKJdhtPugNh8KtPA&#xA;x/1CjqP9fL8w6sIFRgYw+ZtJmH+7hc2Z+Ukfr/8AYrkMR9SZcmX5lNTsVSDzr/xyoP8AmLtv+Tgy&#xA;M+TKHN7j5S/5RXRv+YG2/wCTK5guamckixxtI1eKAs1AWNAK7AVJ+jFUHoWtafrmj2mr6czvY3sY&#xA;mt3kjeFijdCUkCOPpGKsZf8AMmNXZRZwEAkV/SenitPnNiqa+XPNa61cSwiCOExIHrHd2tyTvTdY&#xA;JHYfM4qn+KqdzE0ttLEpVWkRlVmXmoLClSppyHtirDv+Ve3P+/8ASv8AuDQf9VMVd/yr25/3/pX/&#xA;AHBoP+qmKu/5V7c/7/0r/uDQf9VMVd/yr25/3/pX/cGg/wCqmKu/5V7c/wC/9K/7g0H/AFUxV3/K&#xA;vbn/AH/pX/cGg/6qYqnfl7Qv0LDcGV7QiQhmktbSOyAVAft8GblSvU9MVfJPmX88fOt5521bzBom&#xA;v3dhpDTtFpNsJK2otYaRxyG2mDRcpePM8krv4ZbGArdqlM3snZ80eZ/Oei6a2u+ZJbyaIrciKCKx&#xA;jEctK0olvy+HoanMrHgiRduLkzyBqkf9b8ydteuq+BisqfT/AKOMu8LzLV4x7gl+gJcRaYlvccjN&#xA;bvJEzMvHkFkbiw2Aoy0IpkoChTCZs2iE01pPJ11rsYJuYL+bUk23aG3/ANEkUeIe2hLL78TlBlvf&#xA;m5AjtSzVIDd6VdwRn4p4HWNh4sp4kU99xmRIWC40TRegaXerf6ZaXyii3cMc6j2kQN/HMYFyiisK&#xA;HYq7FXYqw26uG1PzFcXNa2emcrO0HZpjQ3Mn+xNIh4cX8cxcsrNNsRQVNEt21TXfrn/HhpDPHE3+&#xA;/Lxk4OV/yYY3ZPdmI/YyWGPVEjtSN84VJ0ZK0V7/AOL/AGFrO4/FBk83JEEBbr63mnSou0Md1eAe&#xA;8apB4/8AL1lWIeplLkzDMpqdiqQedf8AjlQf8xdt/wAnBkZ8mUOb3Hyl/wAoro3/ADA23/JlcwXN&#xA;TXFXYqxZ/IkrOzfp++FSTQW2kUFfnYE4qmGh+XH0qeSVtTuL4SLx9OeKxiVd61Btba2Yn5kjFU5x&#xA;VSu5WitJpV+1HGzLRHkNVBP93HV3/wBVdz2xVgn+NPMv+ega9/1TxV3+NPMv+ega9/1TxV3+NPMv&#xA;+ega9/1TxV3+NPMv+ega9/1TxV3+NPMv+ega9/1TxV3+NPMv+ega9/1TxVXvrjzH5j8ieaLKJeep&#xA;XGn3VtpyCzvNNJnmt5FQVvxHWrlfiGw74qwL8g/yHuPLg/TvnGyi/TMQWLS7BzHcC1VAOUxZC8fr&#xA;OfslSeK96sQJSlbGMaTH/nIjRNFksdEnksLZ55tQVZpWhjLupHRmIqRv3w4+aJ8mNT+Q9CO9kZ9M&#xA;bt9UlIjHygk9SAf8i8zRY5OGaPNCN5H1E/uxrbiE7M/1eP16f5L19MH3MZw8cu9jwR7k/axtbHQm&#xA;sbdONtb2xhiQ7/AicQCT12yNbM+rzxLn6r5YW6G3oWQlH+wi5fwzIuo35ONVyrzejaPZfUdIsbH/&#xA;AJZbeKH/AJFoF8T4eOY4ckozCh2KuxVBa1qQ0zSLzUCvqG1heVY60Lsq1VB7s1AMBNC0gWWGeldW&#xA;Gl2el2rh9VvCLeKVt6zyAyTXDDuF+OVvHp3zDAstzNtM06103T4LC1BEFugRORqx8WY92Y7se5zM&#xA;AppJtKfOa/6FYTbUgv4Dv/xYTD17f3v8Mry/SyhzQekUfzam5rDYTbdh600XX/kVtleHmynyZZmS&#xA;1OxVIPOv/HKg/wCYu2/5ODIz5Moc3uPlL/lFdG/5gbb/AJMrmC5qaOHKMEID0PEkVAPaoBFfvxVB&#xA;aFb6xb6Raw61dx32qRxgXd3BF6Ecj/zLHyfj9+KvI21GYsSL6xpXb/nZ/MX8ExVl/wCXFzJNd3oe&#xA;4t5qRpQQatqepkbnqt+oVPmu5xVneKqN6kslnPHCAZnjdYwXeMcipAq8fxrv+0u47YqwX/BfmX/P&#xA;X9e/6qYq7/BfmX/PX9e/6qYq7/BfmX/PX9e/6qYq7/BfmX/PX9e/6qYq7/BfmX/PX9e/6qYq7/Bf&#xA;mX/PX9e/6qYqyPyro1/pkFwt7X1JWUr/AKffX44geN6zFOv7PXFU9xV5P/zkJ/xy9A/7aKfqyePm&#xA;wyckBma4bsVaZVZSrAMrChB3BBxV5IEJ8lrbv9oWa203iCFEUg3r3rln+T+DV/lPi9cyttdirsVd&#xA;irCPzd1ldP8AKyW619fULmGKPiwVlETfWHYbH9mHjWmxIyvJuKZ4+dpd+VWrJrV3qF3fTl9Vs/3N&#xA;tbsU+C0lCN6g4JFyZ5UIY024jYd44o1z5ssh7uT0jLmpjv5hO0fk7UrhG4S2qx3MJ7erbypLGD7F&#xA;0AyGQWGUObz/AMg/mEP8S3MnmOWG0W8gjhs5UHC3jaNmZlkZySC/PZiabU7jK8Y4ebZMWNnsIIIB&#xA;BqD0OXtLeKsV86albukWmwRyXl9HNBcT20FKpCr1LSO5SOOoB48mFe3Q5GTKKC0j859b0zTLXT7f&#xA;WJJLe0iWGBpZdEd/TQUQM/r/ABUWgqdz3zH8OP4pv4z+LRf/ACvjzF/1dD/weif9V8fDH4peM/i3&#xA;f8r48xf9XQ/8Hon/AFXx8Mfil4z+Ld/yvjzF/wBXQ/8AB6J/1Xx8Mfil4z+Ld/yvjzF/1dD/AMHo&#xA;n/VfHwx+KXjP4t3/ACvjzF/1dD/weif9V8fDH4peM/i3f8r48xf9XQ/8Hon/AFXx8Mfil4z+Ld/y&#xA;vjzF/wBXQ/8AB6J/1Xx8Mfil4z+Ld/yvjzF/1dD/AMHon/VfHwx+KXjP4t3/ACvjzF/1dD/weif9&#xA;V8fDH4peM/i1n/K9/NH/AFdx9+i/9lOHw4/il45fi3f8r380f9Xcffov/ZTj4cfxS8cvxbv+V7+a&#xA;P+ruPv0X/spx8OP4peOX4t3/ACvfzR/1dx9+i/8AZTj4cfxS8cvxbv8Ale/mj/q7j79F/wCynHw4&#xA;/il45fi0l17zzq/m25tvrd3canNZ0e1sYZdLWMUlRpZjHbzl3cInEdaVNBvhjADkxlInmz7TNVsd&#xA;TtRc2cnOPkUdWBR0dftJIjAMjDuGFcvBtpIpF4UOxV4f5r1+40fVtV0H6os0SXbSG5WTi3pXTi74&#xA;pEVC1RZuA+MDbI+IQOGk+GCeK3o+m/md5Jv5YYY9R9GechUiuIpYfjbYLykVUrXbZseMJ4CynJMX&#xA;Yq7FWO+d/Jen+a9KFpcSNb3UDGWxvY92ilpStP2lPRl7jw65GUbZRlTyKP8ALr81dL1GObT7KM3d&#xA;s37nUra6ijX3PGTixU/tKy0PcZXUmy4veLA3psbc3yxrfGJDdLDX0xLxHMJXfjyrSuWhpKH1zRbH&#xA;W9JudKvgzWt0vCTgeLChDAqexBAIxItINPMdU/Im4Rq6JrRMRABt9RQSmvc+rFwP0cfpyHAehZ8Y&#xA;6hmn5eeVNV8s6NJYahqC33KX1II0UrHApUAxx8iTxqK9h7ZKMaYyNonWtdu2un0nR6fXU4/XL115&#xA;RWquOQ2/bmZSCqdACGbagZJ6BQO9j2o+X74RQ2djHDPp7sZdUW6mdJruTYD1ZBFNyVqfH/Nsuy1B&#xA;TFRJHifzKAANPsgBsALyX/slw7o2b+seZv8Algsv+k2X/slx3XZ31jzN/wAsFl/0my/9kuO67O+s&#xA;eZv+WCy/6TZf+yXHddnfWPM3/LBZf9Jsv/ZLjuuzvrHmb/lgsv8ApNl/7Jcd12d9Y8zf8sFl/wBJ&#xA;sv8A2S47rs76x5m/5YLL/pNl/wCyXHddnfWPM3/LBZf9Jsv/AGS47rs76x5m/wCWCy/6TZf+yXHd&#xA;dnfWPM3/ACwWX/SbL/2S47rs76x5m/5YLL/pNl/7Jcd12d9Y8zf8sFl/0my/9kuO67O+seZv+WCy&#xA;/wCk2X/slx3XZ31jzN/ywWX/AEmy/wDZLjuuyE1S08wahbCKSxs45EYSW9wl5J6kUq/ZkQm0IqPu&#xA;I2OxwEEpFBWgsNZgWHU4Xgh14Rqt8kZYWl1x/ZkqOQ2HwPTkn+UtQWj8VsfBk2i6zb6rbNKiPBPC&#xA;3pXdrKKSQygAlWpsdmBVhswNRhBtBFJhhQ8681/lHLr3mS51hdceziuhH6lqLdJCGjjWOqyMw2IQ&#xA;bccgYG+bMTAHJT0r8jPL8E6TarfXOqiNuS278IYDTcc0jHJqH/Kp7YPD70+J3PScsa3Yq7FXYq7F&#xA;XYq7FXYq7FWPaz+X/k/Wb99Q1HTlmvJFVZJleWMsEFF5em6AkDap3pkTAFkJkIH/AJVN+X//AFav&#xA;+ni5/wCqmDwwnxC7/lU35f8A/Vq/6eLn/qpj4YXxC7/lU35f/wDVq/6eLn/qpj4YXxC7/lU35f8A&#xA;/Vq/6eLn/qpj4YXxC7/lU35f/wDVq/6eLn/qpj4YXxC7/lU35f8A/Vq/6eLn/qpj4YXxC7/lU35f&#xA;/wDVq/6eLn/qpj4YXxC7/lU35f8A/Vq/6eLn/qpj4YXxC7/lU35f/wDVq/6eLn/qpj4YXxC7/lU3&#xA;5f8A/Vq/6eLn/qpj4YXxC7/lU35f/wDVq/6eLn/qpj4YXxC7/lU35f8A/Vq/6eLn/qpj4YXxC7/l&#xA;U35f/wDVq/6eLn/qpj4YXxC7/lU35f8A/Vq/6eLn/qpj4YXxC7/lU35f/wDVq/6eLn/qpj4YXxC7&#xA;/lU35f8A/Vq/6eLn/qpj4YXxC7/lU35f/wDVq/6eLn/qpj4YXxC7/lU35f8A/Vq/6eLn/qpj4YXx&#xA;CnmgeWtD8v20ltpFqLWGVzLKAzuWcgCpZyzdB45IRA5MTInmmeFDsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirIP+dH/AOX3&#xA;/hMq9fk2+jzd/wA6P/y+/wDCY+vyX0ebv+dH/wCX3/hMfX5L6PN3/Oj/APL7/wAJj6/JfR5u/wCd&#xA;H/5ff+Ex9fkvo83f86P/AMvv/CY+vyX0ebv+dH/5ff8AhMfX5L6PN3/Oj/8AL7/wmPr8l9Hm7/nR&#xA;/wDl9/4TH1+S+jzd/wA6P/y+/wDCY+vyX0ebv+dH/wCX3/hMfX5L6PN3/Oj/APL7/wAJj6/JfR5u&#xA;/wCdH/5ff+Ex9fkvo83f86P/AMvv/CY+vyX0ebv+dH/5ff8AhMfX5L6PN3/Oj/8AL7/wmPr8l9Hm&#xA;7/nR/wDl9/4TH1+S+jzd/wA6P/y+/wDCY+vyX0ebv+dH/wCX3/hMfX5L6PN3/Oj/APL7/wAJj6/J&#xA;fR5u/wCdH/5ff+Ex9fkvo83f86P/AMvv/CY+vyX0ebv+dH/5ff8AhMfX5L6PN3/Oj/8AL7/wmPr8&#xA;l9Hm7/nR/wDl9/4TH1+S+jzd/wA6P/y+/wDCY+vyX0ebv+dH/wCX3/hMfX5L6PN3/Oj/APL7/wAJ&#xA;j6/JfR5u/wCdH/5ff+Ex9fkvo83f86P/AMvv/CY+vyX0ebv+dH/5ff8AhMfX5L6PN3/Oj/8AL7/w&#xA;mPr8l9Hm/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2742.000000</stDim:w>
            <stDim:h>1828.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1828 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1828 li
2742 1828 li
2742 0 li
cp
clp
0 0 mo
2742 0 li
2742 1828 li
0 1828 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.627451 .717647 .796078 rgb
ef
761.389 607.558 mo
768.78 599.922 781.606 598.286 781.606 598.286 cv
2100.92 598.295 li
2100.92 598.295 2113.3 599.538 2120.88 607.06 cv
2128.47 614.583 2131.26 628.379 2131.26 628.379 cv
2130.84 1507.31 li
2130.95 1516.97 li
2143.95 1521.14 li
2258.2 1621.01 li
2258.2 1621.01 2260.95 1632.31 2256.98 1638.13 cv
2253 1643.96 2242.29 1644.31 2242.29 1644.31 cv
639.329 1644.22 li
639.329 1644.22 628.828 1643.73 626.849 1633.93 cv
625.501 1627.24 625.378 1622.19 625.378 1622.19 cv
732.686 1525.88 li
741.884 1520.27 li
752.026 1517.62 li
752.04 628.819 li
752.04 628.819 753.994 615.191 761.389 607.558 cv
cp
.541176 .631373 .713726 rgb
ef
777.436 628.991 mo
781.885 624.733 788.678 624.171 788.678 624.171 cv
2093.93 624.171 li
2093.93 624.171 2100.99 625.204 2105.04 629.915 cv
2109.09 634.632 2110.14 643.031 2110.14 643.031 cv
2110.14 1470.51 li
2110.14 1470.51 2109.13 1479.14 2105 1483.71 cv
2100.87 1488.27 2093.61 1488.74 2093.61 1488.74 cv
788.887 1488.96 li
788.887 1488.96 780.995 1488.25 776.489 1484.02 cv
771.982 1479.79 770.869 1472.04 770.869 1472.04 cv
770.869 641.221 li
770.869 641.221 772.979 633.255 777.436 628.991 cv
cp
1 1 1 rgb
ef
1315.18 527.172 mo
1316.53 527.342 1322.81 554.854 1322.64 556.197 cv
1322.6 556.467 1293.85 549.277 1293.89 549.007 cv
1294.06 547.664 1313.83 527.002 1315.18 527.172 cv
cp
1427.51 362.998 mo
1381.39 367.265 li
1374.6 391.063 li
1374.6 391.063 1311.49 408.285 1292.55 424.805 cv
1280.43 435.373 1266.48 463.069 1250.83 488.45 cv
1232.84 517.63 1213.86 550.1 1211.72 571.114 cv
1210.87 579.54 1214.32 584.288 1219.24 589.055 cv
1231.84 601.283 1273.68 597.797 1273.68 597.797 cv
1424.75 597.646 li
1567.53 601.481 li
1542.22 512.219 li
1544.68 470.047 li
1581.02 464.527 li
1581.02 464.527 1602.95 477.016 1632.09 476.793 cv
1655.65 476.614 1687.89 466.341 1686.38 448.114 cv
1686.11 444.778 1686.53 437.85 1680.25 430.017 cv
1674.08 422.321 1661.25 413.732 1644.37 408.854 cv
1581.08 390.581 1472.29 384.929 1472.29 384.929 cv
1427.51 362.998 li
cp
.266667 .352941 .435294 rgb
ef
1426.14 513.174 mo
1853.75 513.174 li
1853.75 1010.05 li
1426.14 1010.05 li
1426.14 513.174 li
cp
1 1 1 rgb
ef
1374.12 333.782 mo
1375.62 333.32 1385.21 332.543 1388 334.873 cv
1393.33 339.322 1404.26 352.898 1420.09 346.608 cv
1428.04 343.448 1437.72 335.342 1449.39 332.936 cv
1461.06 330.531 1471.96 335.002 1472.77 335.482 cv
1476.84 337.892 1472.74 376.597 1472.74 376.597 cv
1472.74 376.597 1470.83 386.234 1465.04 398.092 cv
1460.76 406.833 1454.3 418.345 1445.29 420.065 cv
1424.07 424.117 1387.82 392.81 1387.82 392.81 cv
1387.82 392.81 1391.56 375.521 1389.07 368.98 cv
1386.82 363.083 1378.13 367.12 1373.25 359.39 cv
1369.77 353.874 1367.55 335.794 1374.12 333.782 cv
cp
1 .866667 .752941 rgb
ef
1392.23 571.022 mo
1409.64 569.701 li
1425.53 566.423 li
1424.4 599.063 li
1391.44 599.063 li
1392.23 571.022 li
cp
.164706 .223529 .282353 rgb
ef
1577.19 473.305 mo
1584.04 464.87 1596.3 435.712 1611.79 436.792 cv
1613.89 436.939 1626.46 442.069 1629.71 449.761 cv
1636.28 465.281 1629.18 473.064 1629.18 473.064 cv
1629.18 473.064 1630.04 489.95 1632.65 501.334 cv
1635.25 512.717 1629.13 521.556 1629.13 521.556 cv
1629.13 521.556 1628.99 530.156 1626.67 532.679 cv
1624.35 535.206 1619.85 531.66 1619.85 531.66 cv
1619.85 531.66 1618.51 544.615 1611.07 537.743 cv
1603.63 530.87 1589.13 499.295 1589.13 499.295 cv
1589.13 499.295 1590.15 510.715 1591.96 517.256 cv
1594.86 527.683 1599.47 539.94 1594.64 539.579 cv
1586.78 538.995 1575.55 513.502 1575.55 513.502 cv
1566.63 512.607 li
1566.63 512.607 1573.88 477.373 1577.19 473.305 cv
cp
ef
1475.69 353.452 mo
1476.56 361.932 1471.68 369.177 1467.34 369.659 cv
1462.99 370.143 1459.76 370.882 1458.04 362.414 cv
1456.83 356.496 1474.78 344.403 1475.69 353.452 cv
cp
1431.84 349.404 mo
1440.46 351.403 1449.46 356.737 1438.96 367.485 cv
1431.57 375.035 1416.37 366.278 1415.04 356.978 cv
1413.71 347.679 1425.21 347.867 1431.84 349.404 cv
cp
1394.07 328.337 mo
1386.87 331.713 li
1386.87 331.713 1406.42 366.399 1421.22 376.34 cv
1427.61 380.638 1434.56 376.804 1440.08 373.58 cv
1447.33 369.344 1452.35 364.531 1452.35 364.531 cv
1452.35 364.531 1465.19 384.554 1471.98 377.721 cv
1475 374.682 1476.15 372.189 1476.89 359.778 cv
1477.63 347.367 1479.5 337.234 1479.5 337.234 cv
1432.42 338.461 li
1394.07 328.337 li
cp
ef
1376.4 286.216 mo
1382.34 280.56 1395.16 270.752 1411.28 267.329 cv
1424.41 264.538 1440.26 266.751 1452.05 272.705 cv
1460.15 276.791 1472.66 284.284 1477.67 293.163 cv
1485.65 307.292 1483.75 323.412 1483.75 323.412 cv
1483.75 323.412 1505.18 340.637 1500.6 341.721 cv
1494.7 343.123 1461.47 328.752 1450.43 332.008 cv
1440.62 334.906 1427.1 341.724 1417.56 342.929 cv
1411.85 343.649 1392.38 328.078 1392.38 328.078 cv
1369.47 337.836 li
1369.47 337.836 1357.02 304.688 1376.4 286.216 cv
cp
.882353 .423529 .341176 rgb
ef
1460.5 550.458 mo
1621.49 550.458 li
1621.49 725.255 li
1460.5 725.255 li
1460.5 550.458 li
cp
.952941 .882353 .827451 rgb
ef
1538.19 560.999 mo
1538.19 560.999 1566.64 553.943 1578.61 583.307 cv
1582.38 592.551 1588.07 613.203 1593.27 631.117 cv
1598.88 650.466 1603.77 667.289 1601.45 681.872 cv
1599.09 696.673 1572.32 699.804 1572.32 699.804 cv
1572.32 699.804 1540.8 701.943 1508.84 699.219 cv
1500.38 698.496 1492.31 694.339 1486.9 689.32 cv
1483.22 685.902 1479.22 682.693 1478.84 676.871 cv
1478.1 665.475 1484.77 648.387 1489.5 630.432 cv
1494.43 611.699 1497.05 587.473 1505.63 574.454 cv
1514.09 561.608 1538.19 560.999 1538.19 560.999 cv
cp
.694118 .454902 .345098 rgb
ef
1504.82 620.107 mo
1504.82 620.107 1516.3 596.979 1524.97 591.271 cv
1530.16 587.856 1535.99 588.907 1542 589.407 cv
1548.93 589.983 1554.51 589.494 1560.13 594.602 cv
1567.54 601.339 1574.04 614.002 1574.04 614.002 cv
1574.04 614.002 1578.36 617.015 1579.56 619.532 cv
1587.96 637.075 1571.9 643.584 1571.9 643.584 cv
1569.21 655.543 li
1561.37 667.133 li
1561.37 667.133 1558.14 682.387 1562.78 691.797 cv
1567.43 701.203 1579.94 704.762 1579.94 704.762 cv
1579.94 704.762 1562.45 712.864 1542.19 713.152 cv
1521.94 713.436 1498.91 705.904 1498.91 705.904 cv
1498.91 705.904 1512.34 702.506 1517.6 692.752 cv
1522.85 682.996 1519.95 666.892 1519.95 666.892 cv
1512.36 655.529 li
1508.93 643.848 li
1508.93 643.848 1501.85 637.044 1499.87 631.354 cv
1495.67 619.344 1504.82 620.107 1504.82 620.107 cv
cp
1 .866667 .752941 rgb
ef
1461.61 718.305 mo
1498.97 704.786 li
1498.97 704.786 1520.07 713.286 1540.25 713.172 cv
1560.43 713.056 1579.69 704.338 1579.69 704.338 cv
1621.59 717.765 li
1621.85 725.601 li
1459.16 726.195 li
1461.61 718.305 li
cp
.529412 .694118 .678431 rgb
ef
1538.83 639.727 mo
1538.83 635.953 1539.09 630.852 1541.34 630.852 cv
1543.6 630.852 1547 635.953 1547 639.727 cv
1547 643.502 1545.17 646.563 1542.92 646.563 cv
1540.66 646.563 1538.83 643.502 1538.83 639.727 cv
cp
.988235 .717647 .556863 rgb
ef
1529.12 657.761 mo
1529.12 654.42 1534.78 652.49 1540.73 652.49 cv
1546.69 652.49 1552.35 653.82 1552.35 657.161 cv
1552.35 660.497 1547.16 665.183 1541.21 665.183 cv
1535.26 665.183 1529.12 661.097 1529.12 657.761 cv
cp
.972549 .603922 .517647 rgb
ef
1390.45 380.865 mo
1390.45 380.865 1394.65 385.542 1397.72 391.947 cv
1400.79 398.351 1406.9 409.106 1406.9 409.106 cv
1387.35 393.256 li
1390.45 380.865 li
cp
.988235 .717647 .556863 rgb
ef
1520.45 668.057 mo
1520.45 668.057 1530.7 679.386 1540.62 679.343 cv
1550.53 679.308 1560.13 667.896 1560.13 667.896 cv
1560.13 667.896 1549.44 684.306 1539.32 689.023 cv
1529.21 693.741 1519.65 686.765 1519.65 686.765 cv
1520.45 668.057 li
cp
ef
1445.61 374.653 mo
1445.61 370.214 1447.69 366.618 1450.25 366.618 cv
1452.82 366.618 1454.91 370.214 1454.91 374.653 cv
1454.91 379.091 1452.82 382.688 1450.25 382.688 cv
1447.69 382.688 1445.61 379.091 1445.61 374.653 cv
cp
ef
1593.71 542.036 mo
1593.2 542.036 1592.68 541.969 1592.15 541.831 cv
1584.76 539.912 1575.95 523.31 1574.23 517.916 cv
1569.91 504.304 1570.41 484.471 1571.88 478.096 cv
1573.25 472.151 1584.98 452.477 1594.66 441.252 cv
1604.06 430.361 1630.75 418.561 1646.01 416.542 cv
1647.52 416.343 1648.89 417.396 1649.09 418.9 cv
1649.29 420.402 1648.23 421.779 1646.73 421.978 cv
1631.26 424.026 1606.63 435.774 1598.81 444.836 cv
1588.81 456.436 1578.2 475.079 1577.23 479.326 cv
1576.03 484.507 1575.36 503.32 1579.46 516.256 cv
1581.92 524.013 1590.76 536.578 1593.71 536.553 cv
1594.89 535.393 1594.18 533.269 1591.85 527.496 cv
1590.42 523.972 1588.65 519.587 1587.12 514 cv
1584.68 505.105 1586.74 494.341 1586.83 493.886 cv
1587.12 492.399 1588.55 491.44 1590.05 491.724 cv
1591.53 492.016 1592.5 493.455 1592.21 494.941 cv
1592.19 495.04 1590.31 504.914 1592.41 512.55 cv
1593.85 517.829 1595.56 522.049 1596.93 525.438 cv
1599.48 531.74 1601.49 536.716 1597.39 540.561 cv
1596.36 541.534 1595.09 542.036 1593.71 542.036 cv
cp
0 0 0 rgb
f
1614.82 542.511 mo
1611.64 542.511 1608.25 539.972 1605.34 535.359 cv
1591.75 513.824 1585.91 491.897 1585.67 490.976 cv
1585.28 489.512 1586.16 488.013 1587.62 487.629 cv
1589.09 487.238 1590.59 488.12 1590.97 489.583 cv
1591.03 489.802 1596.86 511.642 1609.98 532.432 cv
1612.38 536.245 1614.45 537.138 1614.9 537.02 cv
1614.97 536.975 1615.31 536.569 1615.49 535.458 cv
1616.05 532.008 1611.93 519.079 1608.83 510.999 cv
1608.29 509.586 1609 508 1610.41 507.458 cv
1611.82 506.899 1613.41 507.62 1613.96 509.035 cv
1615.29 512.514 1621.9 530.183 1620.9 536.337 cv
1620.13 541.056 1617.21 542.145 1615.99 542.393 cv
1615.61 542.471 1615.21 542.511 1614.82 542.511 cv
cp
f
1623.98 537.548 mo
1622.18 537.548 1619.34 536.738 1616.78 532.51 cv
1612.84 525.985 1603.29 492.915 1602.22 489.166 cv
1601.8 487.709 1602.64 486.192 1604.1 485.774 cv
1605.54 485.339 1607.07 486.196 1607.49 487.653 cv
1610.36 497.648 1618.46 524.68 1621.48 529.676 cv
1622.62 531.563 1623.63 532.133 1624.02 532.063 cv
1624.51 531.957 1625.35 530.865 1625.59 528.864 cv
1626.47 521.172 1620.38 496.322 1617.95 487.396 cv
1617.56 485.935 1618.42 484.429 1619.88 484.032 cv
1621.35 483.63 1622.85 484.498 1623.25 485.959 cv
1623.61 487.312 1632.23 519.188 1631.03 529.493 cv
1630.55 533.641 1628.26 536.754 1625.19 537.421 cv
1624.88 537.488 1624.47 537.548 1623.98 537.548 cv
cp
f
1629 524.499 mo
1628.37 524.499 1627.74 524.285 1627.23 523.85 cv
1626.07 522.87 1625.93 521.141 1626.91 519.985 cv
1631.79 514.223 1629.89 500.462 1628.21 488.318 cv
1626.89 478.683 1625.74 470.362 1627.46 464.911 cv
1627.91 463.467 1629.45 462.659 1630.89 463.119 cv
1632.34 463.574 1633.14 465.111 1632.69 466.557 cv
1631.34 470.833 1632.46 478.962 1633.65 487.568 cv
1635.57 501.497 1637.55 515.901 1631.09 523.528 cv
1630.55 524.169 1629.78 524.499 1629 524.499 cv
cp
f
1567.12 513.728 mo
1567.09 513.728 1567.05 513.728 1567.02 513.726 cv
1565.51 513.672 1564.32 512.402 1564.38 510.887 cv
1564.78 499.609 1570.75 484.067 1571.01 483.411 cv
1571.55 481.997 1573.14 481.298 1574.56 481.845 cv
1575.97 482.392 1576.67 483.98 1576.12 485.393 cv
1576.07 485.544 1570.22 500.734 1569.86 511.083 cv
1569.8 512.563 1568.59 513.728 1567.12 513.728 cv
cp
f
1629.86 479.522 mo
1629.05 479.522 1628.25 479.165 1627.71 478.48 cv
1626.77 477.291 1626.97 475.568 1628.16 474.628 cv
1633.09 470.73 1632.73 459.153 1627.39 450.341 cv
1624.56 445.667 1616.34 435.531 1601.07 442.344 cv
1599.69 442.962 1598.06 442.344 1597.45 440.956 cv
1596.83 439.575 1597.45 437.952 1598.83 437.336 cv
1612.2 431.37 1624.63 435.179 1632.08 447.5 cv
1638.22 457.634 1639.46 472.68 1631.56 478.931 cv
1631.05 479.328 1630.46 479.522 1629.86 479.522 cv
cp
f
1632.18 480.162 mo
1630.71 480.162 1629.49 478.995 1629.44 477.514 cv
1629.39 476 1630.58 474.731 1632.09 474.68 cv
1632.45 474.667 1667.92 473.258 1680.52 457.355 cv
1684.32 452.557 1683.94 446.762 1682.94 442.746 cv
1680.45 432.646 1671.59 422.687 1660.91 417.965 cv
1612.58 396.61 1480.45 387.642 1479.12 387.553 cv
1477.61 387.453 1476.47 386.147 1476.57 384.636 cv
1476.66 383.121 1477.98 381.957 1479.49 382.082 cv
1484.95 382.443 1613.91 391.201 1663.12 412.949 cv
1675.28 418.322 1685.38 429.768 1688.27 441.431 cv
1690.09 448.792 1688.87 455.657 1684.82 460.76 cv
1670.65 478.656 1633.83 480.106 1632.28 480.16 cv
1632.24 480.162 1632.21 480.162 1632.18 480.162 cv
cp
f
1240.05 600.513 mo
1239.93 600.513 1239.81 600.506 1239.69 600.491 cv
1219.81 597.927 1207.4 585.674 1208.81 570 cv
1210.33 553.073 1225.57 526.61 1242.4 498.69 cv
1246.67 491.61 1250.73 484.48 1254.65 477.585 cv
1264.72 459.896 1274.22 443.189 1286.58 428.143 cv
1304.76 406.011 1355.3 392.074 1370.68 389.762 cv
1373.54 389.332 1374.08 387.339 1374.43 380.709 cv
1374.75 374.61 1375.16 367.023 1382.61 363.601 cv
1383.98 362.976 1385.62 363.574 1386.25 364.948 cv
1386.88 366.325 1386.28 367.952 1384.9 368.585 cv
1380.77 370.482 1380.24 374.733 1379.91 380.999 cv
1379.6 386.803 1379.21 394.026 1371.49 395.185 cv
1354.45 397.749 1307.04 411.874 1290.82 431.624 cv
1278.76 446.309 1269.36 462.817 1259.42 480.296 cv
1255.48 487.22 1251.4 494.383 1247.1 501.52 cv
1230.61 528.87 1215.69 554.726 1214.27 570.491 cv
1213.15 583.021 1223.64 592.891 1240.39 595.051 cv
1241.89 595.245 1242.96 596.619 1242.76 598.121 cv
1242.58 599.504 1241.4 600.513 1240.05 600.513 cv
cp
f
1334.75 494.147 mo
1334.59 494.147 1334.43 494.133 1334.26 494.104 cv
1332.77 493.836 1331.78 492.413 1332.05 490.922 cv
1338.14 456.81 1319.91 428.652 1319.72 428.371 cv
1318.89 427.107 1319.23 425.407 1320.5 424.573 cv
1321.77 423.736 1323.46 424.086 1324.3 425.347 cv
1325.1 426.563 1343.94 455.554 1337.45 491.886 cv
1337.21 493.214 1336.05 494.147 1334.75 494.147 cv
cp
f
1294.41 551.046 mo
1293.83 551.046 1293.26 550.868 1292.76 550.498 cv
1291.55 549.589 1291.31 547.871 1292.21 546.66 cv
1297.4 539.74 1304.01 532.612 1310.4 525.72 cv
1315.62 520.087 1321.02 514.263 1325.39 508.796 cv
1326.33 507.614 1328.06 507.419 1329.24 508.368 cv
1330.43 509.314 1330.62 511.041 1329.67 512.224 cv
1325.18 517.845 1319.71 523.743 1314.42 529.446 cv
1308.13 536.236 1301.62 543.259 1296.6 549.949 cv
1296.06 550.667 1295.24 551.046 1294.41 551.046 cv
cp
f
1392.38 599.315 mo
1392.27 599.315 1392.15 599.308 1392.03 599.292 cv
1390.53 599.103 1389.47 597.733 1389.65 596.231 cv
1390.71 587.823 1391.01 572.792 1387.32 568.255 cv
1386.6 567.367 1385.96 567.209 1385.48 567.171 cv
1334.47 563.092 1295.65 552.878 1279.07 548.516 cv
1275.94 547.692 1273.54 547.061 1271.93 546.697 cv
1261.67 544.383 1250.56 547.179 1245.95 549.482 cv
1244.61 550.158 1242.96 549.612 1242.27 548.257 cv
1241.6 546.903 1242.15 545.256 1243.5 544.578 cv
1248.98 541.831 1261.41 538.707 1273.14 541.346 cv
1274.8 541.721 1277.26 542.368 1280.47 543.214 cv
1296.9 547.539 1335.4 557.665 1385.92 561.704 cv
1388.12 561.88 1390.07 562.949 1391.57 564.796 cv
1397.94 572.629 1395.41 594.453 1395.1 596.916 cv
1394.92 598.302 1393.74 599.315 1392.38 599.315 cv
cp
f
1322.43 558.263 mo
1321.15 558.263 1320.01 557.361 1319.75 556.058 cv
1317.93 546.979 1313.79 525.465 1313.79 525.465 cv
1319.18 524.43 li
1319.18 524.432 1323.31 545.914 1325.12 554.983 cv
1325.42 556.467 1324.46 557.913 1322.97 558.209 cv
1322.79 558.245 1322.61 558.263 1322.43 558.263 cv
cp
f
1398.49 573.406 mo
1396.5 573.406 1394.42 573.301 1392.23 573.064 cv
1390.72 572.899 1389.63 571.547 1389.79 570.043 cv
1389.95 568.537 1391.36 567.438 1392.81 567.61 cv
1401.37 568.534 1408.21 567.171 1414.83 565.845 cv
1417.58 565.294 1420.32 564.748 1423.14 564.357 cv
1424.61 564.149 1426.03 565.194 1426.24 566.696 cv
1426.44 568.195 1425.4 569.581 1423.89 569.789 cv
1421.18 570.166 1418.55 570.692 1415.9 571.223 cv
1410.52 572.301 1405 573.406 1398.49 573.406 cv
cp
f
1596.59 516.104 mo
1590.86 516.104 li
1589.35 516.104 1588.12 514.877 1588.12 513.362 cv
1588.12 511.847 1589.35 510.619 1590.86 510.619 cv
1596.59 510.619 li
1598.1 510.619 1599.33 511.847 1599.33 513.362 cv
1599.33 514.877 1598.1 516.104 1596.59 516.104 cv
cp
f
1853.7 1012.71 mo
1425.36 1012.71 li
1423.85 1012.71 1422.62 1011.49 1422.62 1009.97 cv
1422.62 513.362 li
1422.62 511.847 1423.85 510.619 1425.36 510.619 cv
1574.21 510.619 li
1575.73 510.619 1577 511.847 1577 513.362 cv
1577 514.877 1575.82 516.104 1574.3 516.104 cv
1428.1 516.104 li
1428.1 1007.23 li
1850.96 1007.23 li
1850.96 516.104 li
1633.15 516.104 li
1631.64 516.104 1630.26 514.877 1630.26 513.362 cv
1630.26 511.847 1631.35 510.619 1632.86 510.619 cv
1853.7 510.619 li
1855.21 510.619 1856.44 511.847 1856.44 513.362 cv
1856.44 1009.97 li
1856.44 1011.49 1855.21 1012.71 1853.7 1012.71 cv
cp
f
2131.12 1518.54 mo
2131.12 1518.54 li
2129.61 1518.54 2128.38 1517.32 2128.38 1515.8 cv
2128.51 631.488 li
2128.51 614.451 2114.74 600.591 2097.82 600.591 cv
1854.21 600.591 li
1852.7 600.591 1851.47 599.364 1851.47 597.849 cv
1851.47 596.333 1852.7 595.106 1854.21 595.106 cv
2097.82 595.106 li
2117.77 595.106 2133.99 611.427 2133.99 631.488 cv
2133.86 1515.8 li
2133.86 1517.32 2132.63 1518.54 2131.12 1518.54 cv
cp
f
751.888 1518.78 mo
750.375 1518.78 749.146 1517.55 749.146 1516.04 cv
749.049 1055.27 li
749.049 1053.76 750.277 1052.53 751.792 1052.53 cv
753.305 1052.53 754.534 1053.76 754.534 1055.27 cv
754.63 1516.04 li
754.63 1517.55 753.403 1518.78 751.888 1518.78 cv
cp
f
751.801 1058.03 mo
750.286 1058.03 749.058 1056.8 749.058 1055.29 cv
749.049 631.488 li
749.049 611.427 765.276 595.106 785.221 595.106 cv
1424.73 595.106 li
1426.25 595.106 1427.58 596.333 1427.58 597.849 cv
1427.58 599.364 1426.46 600.591 1424.95 600.591 cv
785.221 600.591 li
768.3 600.591 754.534 614.451 754.534 631.488 cv
754.543 1055.29 li
754.543 1056.8 753.316 1058.03 751.801 1058.03 cv
cp
f
2091.36 1491.31 mo
790.601 1491.31 li
778.556 1491.31 768.755 1481.49 768.755 1469.41 cv
768.755 1041.04 li
768.755 1039.52 769.982 1038.3 771.498 1038.3 cv
773.013 1038.3 774.24 1039.52 774.24 1041.04 cv
774.24 1469.41 li
774.24 1478.46 781.58 1485.83 790.601 1485.83 cv
2091.36 1485.83 li
2100.38 1485.83 2107.72 1478.46 2107.72 1469.41 cv
2107.72 643.645 li
2107.72 634.592 2100.38 627.228 2091.36 627.228 cv
1854 627.228 li
1852.49 627.228 1851.26 626 1851.26 624.485 cv
1851.26 622.97 1852.49 621.743 1854 621.743 cv
2091.36 621.743 li
2103.41 621.743 2113.21 631.568 2113.21 643.645 cv
2113.21 1469.41 li
2113.21 1481.49 2103.41 1491.31 2091.36 1491.31 cv
cp
f
771.489 1043.99 mo
769.974 1043.99 768.746 1042.76 768.746 1041.25 cv
768.755 643.645 li
768.755 631.568 778.556 621.743 790.601 621.743 cv
1423.52 621.743 li
1425.03 621.743 1426.32 622.97 1426.32 624.485 cv
1426.32 626 1425.15 627.228 1423.64 627.228 cv
790.601 627.228 li
781.58 627.228 774.24 634.592 774.24 643.645 cv
774.231 1041.25 li
774.231 1042.76 773.004 1043.99 771.489 1043.99 cv
cp
f
1541.61 514.556 mo
1541.52 514.556 1541.42 514.551 1541.33 514.542 cv
1539.83 514.395 1538.72 513.052 1538.88 511.545 cv
1538.91 511.204 1542.21 477.063 1541.88 444.524 cv
1541.86 443.009 1543.07 441.768 1544.59 441.752 cv
1544.6 441.752 1544.61 441.752 1544.62 441.752 cv
1546.11 441.752 1547.34 442.962 1547.36 444.466 cv
1547.7 477.308 1544.37 511.737 1544.33 512.081 cv
1544.19 513.498 1543 514.556 1541.61 514.556 cv
cp
f
1544.62 473 mo
1543.47 473 1542.4 472.272 1542.01 471.123 cv
1541.54 469.688 1542.31 468.135 1543.75 467.655 cv
1551.29 465.143 1569.9 462.239 1580.22 462.641 cv
1581.74 462.695 1582.92 463.964 1582.87 465.479 cv
1582.81 466.99 1581.74 468.233 1580.03 468.122 cv
1570.63 467.809 1552.55 470.505 1545.48 472.859 cv
1545.2 472.955 1544.9 473 1544.62 473 cv
cp
f
1444.85 512.92 mo
1444.82 512.92 1444.78 512.92 1444.75 512.918 cv
1443.24 512.864 1442.05 511.592 1442.11 510.079 cv
1442.96 486.451 1440.27 442.507 1437.97 421.402 cv
1437.81 419.897 1438.89 418.543 1440.4 418.378 cv
1441.89 418.258 1443.25 419.297 1443.42 420.808 cv
1445.74 442.076 1448.45 486.401 1447.59 510.276 cv
1447.53 511.755 1446.32 512.92 1444.85 512.92 cv
cp
f
1387.05 369.229 mo
1386.93 369.229 1386.81 369.219 1386.69 369.204 cv
1386.29 369.152 1376.7 367.813 1372.15 360.229 cv
1369.41 355.65 1366.67 347.449 1367.97 339.4 cv
1368.63 335.27 1371.21 331.961 1375.03 330.325 cv
1379.59 328.375 1385.11 329.022 1389.44 332.001 cv
1390.69 332.86 1391 334.567 1390.14 335.814 cv
1389.29 337.06 1387.58 337.381 1386.33 336.518 cv
1383.58 334.623 1379.98 334.177 1377.19 335.366 cv
1375.71 336 1373.85 337.363 1373.38 340.271 cv
1372.39 346.443 1374.41 353.327 1376.85 357.411 cv
1380 362.661 1387.33 363.757 1387.41 363.768 cv
1388.91 363.964 1389.96 365.341 1389.77 366.843 cv
1389.59 368.222 1388.41 369.229 1387.05 369.229 cv
cp
f
1450.46 385.482 mo
1449.54 385.482 1448.64 385.018 1448.12 384.177 cv
1447.32 382.889 1447.73 381.2 1449.02 380.406 cv
1451.15 379.083 1453.35 377.054 1453.54 376.23 cv
1453.52 375.934 1453.06 374.657 1452.7 373.631 cv
1452.03 371.759 1451.2 369.431 1450.73 366.624 cv
1450.47 365.131 1451.48 363.714 1452.97 363.462 cv
1454.49 363.221 1455.88 364.216 1456.13 365.705 cv
1456.53 368.041 1457.24 370.034 1457.87 371.79 cv
1458.62 373.932 1459.23 375.622 1458.93 377.235 cv
1458.25 380.915 1453.37 384.166 1451.89 385.076 cv
1451.44 385.351 1450.94 385.482 1450.46 385.482 cv
cp
f
1427.57 359.542 mo
1428.56 356.201 1431.15 354.025 1433.35 354.679 cv
1435.55 355.335 1436.53 358.571 1435.54 361.911 cv
1434.54 365.25 1431.95 367.428 1429.75 366.771 cv
1427.55 366.118 1426.57 362.88 1427.57 359.542 cv
cp
ef
1461.73 359.972 mo
1462.71 356.821 1465.06 354.757 1466.97 355.364 cv
1468.88 355.969 1469.65 359.015 1468.67 362.166 cv
1467.69 365.316 1465.35 367.378 1463.43 366.771 cv
1461.51 366.167 1460.75 363.121 1461.73 359.972 cv
cp
ef
1384.29 355.516 mo
1382.95 355.516 1381.78 354.541 1381.58 353.18 cv
1381.04 349.574 1378.77 346.963 1377.65 346.515 cv
1376.24 345.95 1375.56 344.354 1376.12 342.949 cv
1376.69 341.545 1378.27 340.862 1379.69 341.422 cv
1383.13 342.801 1386.27 347.505 1387 352.368 cv
1387.23 353.865 1386.2 355.262 1384.7 355.485 cv
1384.56 355.505 1384.42 355.516 1384.29 355.516 cv
cp
f
1443.56 422.852 mo
1441.67 422.852 1439.66 422.627 1437.52 422.256 cv
1423.97 419.92 1406.78 408.009 1400.08 400.669 cv
1393.02 392.946 1389.27 379.308 1389.11 378.73 cv
1388.72 377.268 1389.58 375.764 1391.04 375.367 cv
1392.51 374.963 1394.02 375.835 1394.41 377.295 cv
1394.44 377.424 1397.97 390.237 1404.13 396.97 cv
1410.45 403.892 1426.56 414.803 1438.44 416.852 cv
1446.37 418.217 1450.46 417.428 1455.43 409.051 cv
1461.55 398.744 1465.68 390.257 1469.23 380.669 cv
1469.46 380.051 1469.66 379.584 1469.84 379.171 cv
1470.2 378.317 1470.37 377.926 1470.55 376.398 cv
1470.72 374.894 1472.11 373.814 1473.59 373.995 cv
1475.09 374.169 1476.17 375.532 1475.99 377.036 cv
1475.74 379.203 1475.4 380.109 1474.87 381.341 cv
1474.73 381.68 1474.56 382.059 1474.37 382.57 cv
1470.75 392.357 1466.36 401.386 1460.15 411.849 cv
1455.17 420.241 1450.01 422.852 1443.56 422.852 cv
cp
f
1397.73 356.271 mo
1396.57 356.271 1395.51 355.529 1395.14 354.405 cv
1395.1 354.298 1391.45 343.549 1388.59 339.195 cv
1386.27 335.667 1383.59 335.098 1383.47 335.076 cv
1382.01 334.784 1381.01 333.369 1381.28 331.898 cv
1381.54 330.428 1382.92 329.439 1384.38 329.667 cv
1384.9 329.75 1389.53 330.626 1393.17 336.185 cv
1395.08 339.086 1397.16 344.1 1398.58 347.838 cv
1400.06 348.085 1401.07 349.473 1400.84 350.959 cv
1400.58 352.682 1400.46 353.78 1400.46 353.813 cv
1400.33 355.094 1399.32 356.109 1398.04 356.252 cv
1397.93 356.264 1397.83 356.271 1397.73 356.271 cv
cp
f
1383.68 334.67 mo
1382.65 334.67 1381.66 334.085 1381.2 333.092 cv
1380.56 331.72 1381.14 330.086 1382.51 329.444 cv
1408.29 317.365 1448.94 309.747 1481.64 319.962 cv
1483.09 320.416 1483.9 321.953 1483.44 323.399 cv
1482.99 324.843 1481.46 325.644 1480.01 325.197 cv
1448.88 315.464 1408.85 323.151 1384.84 334.411 cv
1384.46 334.587 1384.07 334.67 1383.68 334.67 cv
cp
f
1416.67 345.385 mo
1416.47 345.385 1416.29 345.372 1416.12 345.347 cv
1409.61 344.437 1402.34 339.878 1393.87 331.412 cv
1392.81 330.341 1392.81 328.605 1393.88 327.534 cv
1394.95 326.463 1396.68 326.463 1397.75 327.534 cv
1405.34 335.127 1411.6 339.177 1416.87 339.916 cv
1417.54 339.842 1421.15 338.535 1424.34 337.383 cv
1434.65 333.65 1451.9 327.413 1463.74 329.435 cv
1468.34 330.223 1475.16 332.262 1481.76 334.232 cv
1486.62 335.688 1493.25 337.667 1497.47 338.542 cv
1494.76 336.183 1489.24 331.994 1478.07 324.664 cv
1476.8 323.834 1476.45 322.134 1477.28 320.868 cv
1478.1 319.607 1479.8 319.244 1481.08 320.081 cv
1505.65 336.198 1506.56 339.207 1505.15 342.243 cv
1503.32 346.175 1497.31 344.602 1480.18 339.488 cv
1473.74 337.562 1467.08 335.571 1462.81 334.839 cv
1452.43 333.079 1436.01 338.995 1426.21 342.54 cv
1420.64 344.553 1418.25 345.385 1416.67 345.385 cv
cp
f
1369.85 348.284 mo
1368.63 348.284 1367.53 347.474 1367.2 346.247 cv
1363.57 332.63 1361.35 313.835 1364.12 304.26 cv
1368.17 290.275 1382.52 271.395 1409.63 264.199 cv
1433.55 257.866 1465.67 272.691 1476.44 285.286 cv
1487.52 298.237 1486.96 324.162 1486.93 325.258 cv
1486.89 326.769 1485.59 327.886 1484.12 327.926 cv
1482.61 327.886 1481.41 326.628 1481.45 325.115 cv
1481.46 324.867 1481.97 300.194 1472.28 288.852 cv
1462.28 277.163 1432.16 263.886 1411.04 269.5 cv
1384.41 276.567 1372.33 295.633 1369.38 305.784 cv
1367.01 313.996 1369.1 332.088 1372.5 344.836 cv
1372.89 346.298 1372.02 347.802 1370.55 348.19 cv
1370.32 348.255 1370.08 348.284 1369.85 348.284 cv
cp
f
1383.43 324.164 mo
1382.09 324.164 1380.92 323.173 1380.72 321.803 cv
1377.43 298.416 1381.38 285.806 1388.33 274.07 cv
1389.1 272.768 1390.77 272.33 1392.08 273.109 cv
1393.39 273.878 1393.82 275.561 1393.05 276.864 cv
1387.92 285.524 1382.74 296.793 1386.15 321.04 cv
1386.37 322.54 1385.32 323.925 1383.82 324.138 cv
1383.69 324.155 1383.56 324.164 1383.43 324.164 cv
cp
f
1468.45 380.993 mo
1465.98 380.993 1463.46 380.185 1461.3 378.616 cv
1458.25 376.411 1456.68 373.055 1455.42 370.357 cv
1454.84 369.112 1453.95 367.231 1453.44 366.941 cv
1451.98 367.22 1448.7 370.264 1446.3 372.484 cv
1443.45 375.13 1440.75 377.63 1438.18 378.761 cv
1428.3 383.128 1419.38 380.709 1410.13 371.154 cv
1399.44 360.122 1388.02 338.678 1387.54 337.771 cv
1386.83 336.433 1387.34 334.772 1388.68 334.063 cv
1390.02 333.347 1391.67 333.864 1392.39 335.201 cv
1392.5 335.417 1403.93 356.871 1414.06 367.338 cv
1423.67 377.255 1430.53 376.144 1435.97 373.745 cv
1437.7 372.984 1440.17 370.686 1442.58 368.463 cv
1446.12 365.174 1449.48 362.065 1452.67 361.557 cv
1457 360.872 1458.89 364.841 1460.38 368.032 cv
1461.48 370.377 1462.62 372.801 1464.51 374.175 cv
1466.45 375.575 1468.81 375.896 1470.67 375.035 cv
1472.29 374.287 1473.25 372.745 1473.41 370.688 cv
1473.86 364.881 1474.05 362.61 1474.68 355.958 cv
1475.1 351.589 1476 348.085 1476.66 345.528 cv
1477 344.209 1477.29 343.158 1477.36 342.377 cv
1477.4 341.987 1477.35 341.849 1477.35 341.846 cv
1476.44 340.931 1470.58 341.275 1465.88 341.554 cv
1457.62 342.034 1446.32 342.699 1433.34 340.287 cv
1431.85 340.01 1430.87 338.58 1431.15 337.089 cv
1431.42 335.598 1432.89 334.616 1434.34 334.896 cv
1446.67 337.191 1457.6 336.551 1465.56 336.078 cv
1473.74 335.605 1478.65 335.311 1481.32 338.08 cv
1482.14 338.925 1483.06 340.447 1482.83 342.902 cv
1482.72 344.002 1482.39 345.28 1481.97 346.898 cv
1481.32 349.411 1480.52 352.542 1480.14 356.478 cv
1479.51 363.083 1479.32 365.341 1478.88 371.107 cv
1478.57 375.168 1476.42 378.413 1472.98 380.008 cv
1471.56 380.669 1470.01 380.993 1468.45 380.993 cv
cp
f
1432.59 420.953 mo
1432.37 420.953 1432.15 420.926 1431.93 420.873 cv
1407.47 414.826 1378.31 400.917 1378.31 368.99 cv
1378.31 367.475 1379.54 366.247 1381.05 366.247 cv
1382.57 366.247 1383.79 367.475 1383.79 368.99 cv
1383.79 397.367 1410.69 409.972 1433.24 415.549 cv
1434.72 415.912 1435.61 417.398 1435.25 418.869 cv
1434.94 420.119 1433.82 420.953 1432.59 420.953 cv
cp
f
1428.63 440.23 mo
1415.95 440.23 1398.15 435.975 1379.96 417.782 cv
1378.89 416.711 1378.89 414.975 1379.96 413.904 cv
1381.03 412.833 1382.76 412.833 1383.84 413.904 cv
1406.04 436.104 1427.29 435.938 1437.97 433.864 cv
1449.53 431.624 1457.82 425.601 1459.74 421.071 cv
1464.9 408.964 1467.04 392.761 1467.04 386.779 cv
1467.04 385.264 1468.27 384.036 1469.78 384.036 cv
1471.29 384.036 1472.52 385.264 1472.52 386.779 cv
1472.52 394.441 1469.84 411.369 1464.79 423.218 cv
1462.32 429.009 1453.21 436.495 1439.02 439.249 cv
1436.18 439.8 1432.66 440.23 1428.63 440.23 cv
cp
f
1389.11 393.5 mo
1388.98 393.5 1388.85 393.491 1388.72 393.471 cv
1387.22 393.256 1386.18 391.869 1386.39 390.369 cv
1386.66 388.512 1386.95 387.028 1387.25 385.516 cv
1387.8 382.715 1388.37 379.816 1388.8 373.979 cv
1388.91 372.471 1390.24 371.379 1391.74 371.444 cv
1393.25 371.556 1394.39 372.87 1394.27 374.381 cv
1393.82 380.553 1393.22 383.617 1392.63 386.58 cv
1392.35 388.001 1392.07 389.398 1391.82 391.146 cv
1391.62 392.514 1390.45 393.5 1389.11 393.5 cv
cp
f
1813.73 949.814 mo
1463.16 949.814 li
1461.65 949.814 1460.42 948.587 1460.42 947.074 cv
1460.42 945.562 1461.65 944.334 1463.16 944.334 cv
1813.73 944.334 li
1815.24 944.334 1816.47 945.562 1816.47 947.074 cv
1816.47 948.587 1815.24 949.814 1813.73 949.814 cv
cp
f
1813.73 902.918 mo
1463.16 902.918 li
1461.65 902.918 1460.42 901.691 1460.42 900.176 cv
1460.42 898.661 1461.65 897.434 1463.16 897.434 cv
1813.73 897.434 li
1815.24 897.434 1816.47 898.661 1816.47 900.176 cv
1816.47 901.691 1815.24 902.918 1813.73 902.918 cv
cp
f
1813.73 858.143 mo
1463.16 858.143 li
1461.65 858.143 1460.42 856.915 1460.42 855.4 cv
1460.42 853.885 1461.65 852.658 1463.16 852.658 cv
1813.73 852.658 li
1815.24 852.658 1816.47 853.885 1816.47 855.4 cv
1816.47 856.915 1815.24 858.143 1813.73 858.143 cv
cp
f
1813.73 811.24 mo
1463.16 811.24 li
1461.65 811.24 1460.42 810.012 1460.42 808.497 cv
1460.42 806.982 1461.65 805.755 1463.16 805.755 cv
1813.73 805.755 li
1815.24 805.755 1816.47 806.982 1816.47 808.497 cv
1816.47 810.012 1815.24 811.24 1813.73 811.24 cv
cp
f
1813.11 766.533 mo
1462.55 766.533 li
1461.04 766.533 1459.81 765.305 1459.81 763.79 cv
1459.81 762.275 1461.04 761.048 1462.55 761.048 cv
1813.11 761.048 li
1814.63 761.048 1815.85 762.275 1815.85 763.79 cv
1815.85 765.305 1814.63 766.533 1813.11 766.533 cv
cp
f
1815.09 678.924 mo
1656.5 678.924 li
1654.99 678.924 1653.76 677.697 1653.76 676.182 cv
1653.76 674.667 1654.99 673.439 1656.5 673.439 cv
1815.09 673.439 li
1816.6 673.439 1817.83 674.667 1817.83 676.182 cv
1817.83 677.697 1816.6 678.924 1815.09 678.924 cv
cp
f
1813.92 647.273 mo
1655.33 647.273 li
1653.82 647.273 1652.59 646.046 1652.59 644.531 cv
1652.59 643.016 1653.82 641.788 1655.33 641.788 cv
1813.92 641.788 li
1815.43 641.788 1816.66 643.016 1816.66 644.531 cv
1816.66 646.046 1815.43 647.273 1813.92 647.273 cv
cp
f
1814.42 614.205 mo
1655.84 614.205 li
1654.33 614.205 1653.1 612.978 1653.1 611.463 cv
1653.1 609.948 1654.33 608.72 1655.84 608.72 cv
1814.42 608.72 li
1815.94 608.72 1817.16 609.948 1817.16 611.463 cv
1817.16 612.978 1815.94 614.205 1814.42 614.205 cv
cp
f
1423.36 388.492 mo
1423.36 388.492 1432.39 391.592 1440.64 392.036 cv
1448.89 392.478 1456.81 390.485 1456.81 390.485 cv
1456.81 390.485 1449.94 408.647 1438.86 403.997 cv
1427.48 399.21 1423.36 388.492 1423.36 388.492 cv
cp
1 1 1 rgb
ef
1429.2 392.998 mo
1431.43 395.93 1434.91 399.362 1439.92 401.468 cv
1441.63 402.187 1443.26 402.198 1444.9 401.493 cv
1447.76 400.259 1450.23 397.079 1451.94 394.183 cv
1448.82 394.626 1444.71 395.001 1440.49 394.774 cv
1436.54 394.562 1432.47 393.783 1429.2 392.998 cv
cp
1442.47 407.506 mo
1440.92 407.506 1439.36 407.179 1437.8 406.524 cv
1425.48 401.346 1420.99 389.956 1420.8 389.474 cv
1420.42 388.481 1420.65 387.356 1421.39 386.589 cv
1422.13 385.824 1423.26 385.556 1424.25 385.899 cv
1424.34 385.928 1433.03 388.881 1440.79 389.298 cv
1448.53 389.727 1456.06 387.845 1456.14 387.825 cv
1457.14 387.578 1458.18 387.901 1458.86 388.662 cv
1459.53 389.425 1459.74 390.5 1459.37 391.454 cv
1459.19 391.931 1454.87 403.173 1447.06 406.531 cv
1445.55 407.181 1444.01 407.506 1442.47 407.506 cv
cp
0 0 0 rgb
f
1540.42 682.115 mo
1539.28 682.115 1536.17 681.918 1532.27 680.053 cv
1528.97 678.473 1525.13 675.619 1522.01 672.419 cv
1514.91 665.149 1510.62 660.762 1508.24 650.121 cv
1505.44 637.656 1502.81 623.711 1504.47 614.796 cv
1505.89 607.25 1516.15 591.558 1526.89 586.176 cv
1531.67 583.784 1536.27 583.541 1540.19 585.469 cv
1541.55 586.136 1542.11 587.78 1541.44 589.14 cv
1540.78 590.5 1539.13 591.061 1537.77 590.391 cv
1535.41 589.231 1532.57 589.463 1529.35 591.079 cv
1519.88 595.825 1510.92 610.153 1509.86 615.805 cv
1508.37 623.79 1511.07 637.696 1513.59 648.92 cv
1515.63 658.044 1519.07 661.568 1525.92 668.583 cv
1529.11 671.841 1532.52 674.091 1534.64 675.108 cv
1537.98 676.708 1540.51 676.63 1540.52 676.63 cv
1542.04 676.536 1543.32 677.723 1543.39 679.223 cv
1543.47 680.725 1542.34 682.008 1540.84 682.104 cv
1540.78 682.108 1540.63 682.115 1540.42 682.115 cv
cp
f
1540.3 649.382 mo
1539.63 649.382 1538.97 649.143 1538.44 648.654 cv
1537.6 647.88 1534.85 645.128 1534.53 642.237 cv
1534.38 640.791 1534.99 639.427 1535.7 637.85 cv
1537.31 634.275 1539.51 629.379 1534.01 622.415 cv
1533.07 621.228 1533.28 619.503 1534.46 618.563 cv
1535.65 617.63 1537.37 617.822 1538.31 619.019 cv
1545.87 628.594 1542.51 636.076 1540.71 640.097 cv
1540.42 640.726 1540.04 641.585 1539.99 641.875 cv
1540.05 642.19 1541.14 643.669 1542.17 644.633 cv
1543.28 645.664 1543.34 647.398 1542.31 648.505 cv
1541.77 649.087 1541.04 649.382 1540.3 649.382 cv
cp
f
1521.48 626.19 mo
1521.48 623.526 1522.9 621.368 1524.66 621.368 cv
1526.41 621.368 1527.83 623.526 1527.83 626.19 cv
1527.83 628.854 1526.41 631.017 1524.66 631.017 cv
1522.9 631.017 1521.48 628.854 1521.48 626.19 cv
cp
ef
1509.05 646.4 mo
1508.81 646.4 1508.57 646.369 1508.34 646.305 cv
1504.98 645.398 1502.53 643.573 1500.6 640.563 cv
1498.45 637.203 1496.31 630.83 1496.38 625.146 cv
1496.42 621.216 1498.15 619.229 1499.59 618.255 cv
1501.67 616.845 1504.46 616.667 1507.21 617.74 cv
1508.62 618.291 1509.32 619.88 1508.77 621.292 cv
1508.22 622.698 1506.62 623.396 1505.22 622.85 cv
1504.2 622.453 1503.21 622.441 1502.66 622.799 cv
1501.99 623.258 1501.87 624.506 1501.86 625.208 cv
1501.81 630.051 1503.79 635.375 1505.22 637.609 cv
1506.41 639.474 1507.73 640.46 1509.76 641.012 cv
1511.23 641.407 1512.09 642.913 1511.7 644.375 cv
1511.37 645.595 1510.26 646.4 1509.05 646.4 cv
cp
f
1572.07 646.387 mo
1570.86 646.387 1569.75 645.584 1569.42 644.361 cv
1569.03 642.899 1569.89 641.393 1571.36 640.998 cv
1573.39 640.447 1574.71 639.461 1575.91 637.591 cv
1577.33 635.362 1579.31 630.038 1579.26 625.195 cv
1579.25 624.492 1579.14 623.245 1578.46 622.785 cv
1577.92 622.428 1576.93 622.437 1575.9 622.836 cv
1574.49 623.379 1572.9 622.687 1572.36 621.279 cv
1571.8 619.867 1572.5 618.278 1573.91 617.727 cv
1576.65 616.651 1579.44 616.834 1581.53 618.242 cv
1582.97 619.215 1584.7 621.203 1584.74 625.133 cv
1584.81 630.816 1582.67 637.189 1580.53 640.545 cv
1578.6 643.56 1576.14 645.385 1572.79 646.291 cv
1572.55 646.356 1572.31 646.387 1572.07 646.387 cv
cp
f
1515.41 618.463 mo
1514.44 618.463 1513.5 617.947 1513 617.037 cv
1512.28 615.707 1512.76 614.042 1514.09 613.315 cv
1514.47 613.112 1523.29 608.399 1533.01 612.817 cv
1534.39 613.444 1535 615.069 1534.37 616.448 cv
1533.74 617.829 1532.11 618.44 1530.74 617.812 cv
1523.48 614.516 1516.79 618.09 1516.73 618.126 cv
1516.31 618.354 1515.86 618.463 1515.41 618.463 cv
cp
f
1540.98 660.771 mo
1535.94 660.771 1530.83 660.202 1527.5 658.933 cv
1526.09 658.393 1525.38 656.808 1525.92 655.393 cv
1526.46 653.979 1528.05 653.269 1529.46 653.809 cv
1534.99 655.917 1548.07 655.637 1552.77 653.849 cv
1554.18 653.32 1555.77 654.021 1556.31 655.438 cv
1556.85 656.855 1556.14 658.437 1554.72 658.977 cv
1551.72 660.117 1546.38 660.771 1540.98 660.771 cv
cp
f
1540.98 669.104 mo
1538.89 669.104 1536.64 668.775 1534.5 667.93 cv
1533.1 667.372 1532.4 665.778 1532.96 664.371 cv
1533.52 662.964 1535.11 662.271 1536.52 662.829 cv
1540.06 664.228 1544.04 663.451 1545.66 662.846 cv
1547.07 662.322 1548.65 663.034 1549.19 664.453 cv
1549.72 665.87 1549 667.45 1547.58 667.983 cv
1545.9 668.615 1543.54 669.104 1540.98 669.104 cv
cp
f
1620.81 720.542 mo
1620.47 720.542 1620.12 720.478 1619.79 720.342 cv
1614.4 718.168 1605.88 715.248 1596.86 712.155 cv
1588.2 709.185 1579.25 706.116 1572.59 703.532 cv
1564.81 700.518 1560.82 696.905 1559.24 691.451 cv
1556.41 681.693 1558.31 666.885 1558.4 666.258 cv
1558.6 664.756 1560 663.714 1561.47 663.899 cv
1562.98 664.096 1564.03 665.475 1563.83 666.975 cv
1563.81 667.117 1562 681.276 1564.5 689.925 cv
1565.28 692.612 1567.04 695.499 1574.58 698.418 cv
1581.13 700.964 1590.03 704.014 1598.64 706.966 cv
1607.73 710.084 1616.32 713.027 1621.84 715.258 cv
1623.25 715.825 1623.93 717.423 1623.36 718.827 cv
1622.93 719.896 1621.9 720.542 1620.81 720.542 cv
cp
f
1461.18 721.257 mo
1460.24 721.257 1459.33 720.781 1458.82 719.922 cv
1458.04 718.624 1458.46 716.939 1459.76 716.162 cv
1466.4 712.186 1481.41 707.024 1493.46 702.878 cv
1498.62 701.104 1503.21 699.524 1506.3 698.326 cv
1513.84 695.403 1515.59 692.516 1516.37 689.831 cv
1518.87 681.187 1516.97 666.773 1516.95 666.628 cv
1516.74 665.129 1517.79 663.748 1519.29 663.542 cv
1520.77 663.351 1522.18 664.386 1522.38 665.892 cv
1522.47 666.528 1524.47 681.593 1521.64 691.355 cv
1520.06 696.805 1516.07 700.419 1508.28 703.441 cv
1505.15 704.657 1500.48 706.261 1495.25 708.062 cv
1483.43 712.128 1468.73 717.187 1462.58 720.866 cv
1462.14 721.132 1461.65 721.257 1461.18 721.257 cv
cp
f
1486.33 698.025 mo
1485.92 698.025 1485.51 697.934 1485.13 697.746 cv
1484.98 697.672 1484.84 697.583 1484.7 697.479 cv
1484.29 697.175 1474.74 689.831 1475.13 674.008 cv
1475.32 665.946 1478.15 657.209 1481.43 647.092 cv
1483.24 641.498 1485.12 635.712 1486.7 629.546 cv
1487.87 624.957 1488.98 620.212 1490.07 615.535 cv
1492.55 604.98 1494.88 595.01 1497.71 587.573 cv
1508.1 560.282 1527.23 558.058 1535.05 558.336 cv
1536.34 558.383 1539.78 558.511 1541.44 561.849 cv
1542.79 564.549 1544.47 579.566 1542.46 588.45 cv
1542.13 589.929 1540.65 590.864 1539.18 590.519 cv
1537.7 590.186 1536.77 588.718 1537.11 587.241 cv
1538.95 579.107 1537.13 565.848 1536.5 564.226 cv
1536.43 564.085 1536.32 563.871 1534.84 563.817 cv
1526.71 563.534 1511.63 566.419 1502.84 589.523 cv
1500.13 596.619 1497.84 606.416 1495.41 616.787 cv
1494.31 621.498 1493.19 626.28 1492.01 630.908 cv
1490.39 637.238 1488.49 643.107 1486.65 648.784 cv
1484.82 654.429 1483.13 659.626 1482.01 664.417 cv
1483.38 660.755 1485.01 657.027 1486.71 653.26 cv
1487.33 651.876 1488.96 651.265 1490.34 651.888 cv
1491.72 652.51 1492.33 654.135 1491.71 655.514 cv
1487.29 665.314 1483.04 675.57 1483.83 683.806 cv
1484.4 689.778 1487.3 692.509 1487.88 693.004 cv
1487.94 693.056 1487.99 693.087 1488 693.1 cv
1489.19 694.015 1489.43 695.72 1488.53 696.92 cv
1487.99 697.641 1487.17 698.025 1486.33 698.025 cv
cp
f
1497.71 700.313 mo
1493.78 700.313 1486.94 697.925 1484.39 688.501 cv
1482.22 680.475 1483.37 666.896 1487.82 648.144 cv
1488.17 646.67 1489.65 645.778 1491.12 646.108 cv
1492.6 646.458 1493.51 647.936 1493.16 649.411 cv
1488.92 667.262 1487.75 679.933 1489.69 687.069 cv
1490.44 689.872 1491.63 691.666 1492.87 692.813 cv
1492.06 689.811 1491.73 685.79 1492.87 680.723 cv
1493.2 679.243 1494.68 678.31 1496.15 678.654 cv
1497.63 678.989 1498.55 680.457 1498.22 681.932 cv
1496.13 691.174 1500.07 695.443 1500.24 695.622 cv
1500.96 696.38 1501.21 697.5 1500.84 698.482 cv
1500.48 699.467 1499.6 700.169 1498.55 700.272 cv
1498.29 700.297 1498.01 700.313 1497.71 700.313 cv
cp
f
1509.14 702.903 mo
1509.07 702.903 1509 702.901 1508.93 702.894 cv
1501.54 702.352 1493.53 696.59 1492.29 684.947 cv
1492.13 683.442 1493.23 682.093 1494.73 681.932 cv
1496.19 681.765 1497.59 682.862 1497.75 684.371 cv
1498.71 693.448 1504.59 697.077 1509.34 697.427 cv
1510.84 697.537 1511.98 698.851 1511.87 700.361 cv
1511.76 701.803 1510.56 702.903 1509.14 702.903 cv
cp
f
1594.79 698.137 mo
1593.95 698.137 1593.12 697.75 1592.58 697.021 cv
1591.69 695.809 1591.94 694.104 1593.14 693.201 cv
1593.17 693.185 1593.23 693.141 1593.31 693.067 cv
1593.95 692.507 1596.74 689.767 1597.3 683.916 cv
1598.1 675.682 1593.85 665.424 1589.43 655.621 cv
1588.8 654.242 1589.42 652.617 1590.8 651.995 cv
1592.17 651.375 1593.8 651.984 1594.43 653.367 cv
1596.13 657.136 1597.76 660.867 1599.13 664.529 cv
1598 659.745 1596.32 654.55 1594.5 648.909 cv
1592.65 643.228 1590.75 637.354 1589.13 631.017 cv
1587.95 626.378 1586.82 621.584 1585.71 616.861 cv
1583.29 606.502 1580.99 596.72 1578.3 589.633 cv
1566.44 558.526 1542.9 564.101 1541.91 564.35 cv
1540.43 564.736 1538.95 563.842 1538.57 562.375 cv
1538.2 560.914 1539.07 559.423 1540.53 559.042 cv
1540.8 558.957 1569.78 551.865 1583.42 587.682 cv
1586.25 595.113 1588.58 605.067 1591.05 615.609 cv
1592.15 620.297 1593.27 625.055 1594.44 629.656 cv
1596.02 635.828 1597.9 641.619 1599.71 647.22 cv
1602.99 657.328 1605.82 666.058 1606.01 674.113 cv
1606.39 689.943 1596.84 697.284 1596.44 697.588 cv
1596.42 697.601 1596.41 697.61 1596.4 697.614 cv
1595.92 697.967 1595.35 698.137 1594.79 698.137 cv
cp
f
1583.43 700.417 mo
1583.13 700.417 1582.84 700.404 1582.58 700.377 cv
1581.52 700.272 1580.62 699.565 1580.26 698.563 cv
1579.91 697.561 1580.17 696.445 1580.92 695.698 cv
1581.06 695.548 1585.01 691.282 1582.92 682.046 cv
1582.58 680.568 1583.5 679.1 1584.98 678.766 cv
1586.47 678.419 1587.93 679.354 1588.26 680.832 cv
1589.41 685.902 1589.08 689.923 1588.27 692.922 cv
1589.51 691.775 1590.69 689.98 1591.45 687.178 cv
1593.38 680.042 1592.21 667.372 1587.98 649.52 cv
1587.63 648.045 1588.54 646.568 1590.01 646.218 cv
1591.51 645.887 1592.97 646.78 1593.31 648.252 cv
1597.76 667.006 1598.92 680.584 1596.74 688.611 cv
1594.19 698.029 1587.36 700.417 1583.43 700.417 cv
cp
f
1572 703.012 mo
1570.57 703.012 1569.37 701.912 1569.26 700.471 cv
1569.15 698.96 1570.29 697.646 1571.8 697.537 cv
1575.93 697.23 1580.02 695.836 1581.93 687.751 cv
1583.88 679.488 1582.77 663.547 1578.89 644.013 cv
1578.6 642.529 1579.56 641.085 1581.05 640.791 cv
1582.54 640.499 1583.98 641.46 1584.27 642.946 cv
1586.64 654.86 1590.17 676.688 1587.27 689.01 cv
1585.18 697.835 1580.26 702.412 1572.2 703.003 cv
1572.13 703.01 1572.06 703.012 1572 703.012 cv
cp
f
1540.88 682.106 mo
1540.66 682.106 1540.51 682.099 1540.45 682.095 cv
1538.93 681.999 1537.79 680.696 1537.89 679.185 cv
1537.98 677.67 1539.43 676.527 1540.8 676.623 cv
1540.8 676.623 li
1540.77 676.605 1543.31 676.697 1546.65 675.099 cv
1548.77 674.08 1552.18 671.833 1555.37 668.572 cv
1562.21 661.561 1565.64 658.042 1567.7 648.904 cv
1571.28 632.952 1572.73 620.362 1571.49 616.048 cv
1566.91 600.196 1557.73 591.027 1546.9 591.697 cv
1545.56 591.777 1544.1 590.628 1544.01 589.113 cv
1543.93 587.6 1545.08 586.306 1546.6 586.221 cv
1560.11 585.511 1571.42 596.043 1576.76 614.526 cv
1578.85 621.788 1575.33 639.936 1573.05 650.107 cv
1570.66 660.762 1566.38 665.145 1559.29 672.404 cv
1556.16 675.608 1552.32 678.464 1549.02 680.044 cv
1545.13 681.91 1542.01 682.106 1540.88 682.106 cv
cp
f
1565.19 617.983 mo
1564.76 617.983 1564.31 617.876 1563.9 617.653 cv
1563.9 617.653 li
1563.61 617.508 1557.06 614.076 1549.86 617.332 cv
1548.49 617.957 1546.86 617.35 1546.24 615.968 cv
1545.61 614.589 1546.22 612.965 1547.6 612.337 cv
1557.33 607.921 1566.14 612.634 1566.51 612.835 cv
1567.84 613.563 1568.33 615.229 1567.6 616.557 cv
1567.1 617.468 1566.17 617.983 1565.19 617.983 cv
cp
f
1552.83 625.963 mo
1552.83 623.298 1554.25 621.136 1556.01 621.136 cv
1557.76 621.136 1559.19 623.298 1559.19 625.963 cv
1559.19 628.627 1557.76 630.783 1556.01 630.783 cv
1554.25 630.783 1552.83 628.627 1552.83 625.963 cv
cp
ef
1504.21 621.924 mo
1502.74 621.924 1501.52 620.752 1501.47 619.269 cv
1500.96 603.113 1508.05 576.364 1529.23 573.37 cv
1530.68 573.156 1532.12 574.2 1532.33 575.702 cv
1532.54 577.201 1531.5 578.589 1530 578.801 cv
1510.24 581.593 1506.65 609.528 1506.95 619.094 cv
1507 620.609 1505.81 621.875 1504.3 621.921 cv
1504.27 621.924 1504.24 621.924 1504.21 621.924 cv
cp
f
1576.11 622.339 mo
1576 622.339 1575.9 622.332 1575.79 622.321 cv
1574.29 622.145 1573.21 620.784 1573.38 619.28 cv
1574.23 612 1573.22 598.164 1566.93 592.029 cv
1565.84 590.974 1565.82 589.238 1566.88 588.153 cv
1567.93 587.062 1569.67 587.042 1570.75 588.102 cv
1578.51 595.66 1579.83 611.267 1578.83 619.913 cv
1578.67 621.31 1577.48 622.339 1576.11 622.339 cv
cp
f
1511.1 694.669 mo
1510.42 694.669 1509.74 694.419 1509.21 693.917 cv
1497.73 683.03 1500.81 654.106 1502.67 642.176 cv
1502.9 640.675 1504.33 639.657 1505.8 639.889 cv
1507.3 640.121 1508.32 641.525 1508.09 643.02 cv
1505.32 660.827 1505.15 682.503 1512.99 689.936 cv
1514.08 690.978 1514.13 692.714 1513.09 693.812 cv
1512.55 694.381 1511.83 694.669 1511.1 694.669 cv
cp
f
1463.06 722.5 mo
1619.19 722.5 li
1619.19 552.506 li
1463.06 552.506 li
1463.06 722.5 li
cp
1621.93 727.984 mo
1460.32 727.984 li
1458.8 727.984 1457.58 726.757 1457.58 725.242 cv
1457.58 549.763 li
1457.58 548.248 1458.8 547.021 1460.32 547.021 cv
1621.93 547.021 li
1623.44 547.021 1624.67 548.248 1624.67 549.763 cv
1624.67 725.242 li
1624.67 726.757 1623.44 727.984 1621.93 727.984 cv
cp
f
1539.65 716.173 mo
1517.01 716.173 1500.79 707.957 1499.76 707.426 cv
1498.42 706.728 1497.89 705.077 1498.59 703.731 cv
1499.28 702.385 1500.94 701.863 1502.28 702.557 cv
1502.65 702.742 1539.06 721.089 1578.07 701.589 cv
1579.41 700.91 1581.07 701.455 1581.76 702.814 cv
1582.43 704.168 1581.88 705.817 1580.53 706.493 cv
1565.96 713.779 1551.87 716.173 1539.65 716.173 cv
cp
f
1814.7 585.73 mo
1656.12 585.73 li
1654.6 585.73 1653.38 584.502 1653.38 582.987 cv
1653.38 581.472 1654.6 580.245 1656.12 580.245 cv
1814.7 580.245 li
1816.21 580.245 1817.44 581.472 1817.44 582.987 cv
1817.44 584.502 1816.21 585.73 1814.7 585.73 cv
cp
f
1813.53 554.077 mo
1654.95 554.077 li
1653.43 554.077 1652.21 552.85 1652.21 551.334 cv
1652.21 549.819 1653.43 548.592 1654.95 548.592 cv
1813.53 548.592 li
1815.04 548.592 1816.27 549.819 1816.27 551.334 cv
1816.27 552.85 1815.04 554.077 1813.53 554.077 cv
cp
f
2246.15 1631.42 mo
2248.94 1631.48 2254.8 1630.94 2256.14 1628.46 cv
2257.58 1625.79 2253.78 1621.22 2252.68 1620.14 cv
2150.85 1529.62 li
2150.83 1529.6 2145.04 1524.66 2139.29 1522.35 cv
2133.69 1520.1 2127.77 1520.25 2127.74 1520.25 cv
761.307 1520.25 li
761.273 1520.25 761.47 1520.25 760.76 1520.25 cv
758.825 1520.25 751.522 1520.38 745.769 1522.18 cv
739.231 1524.22 734.451 1528.49 734.402 1528.54 cv
631.437 1620.97 li
631.32 1621.06 626.706 1625.03 628.953 1627.79 cv
631.517 1630.94 639.062 1631.39 641.532 1631.42 cv
2246.15 1631.42 li
cp
2246.87 1636.91 mo
2246.47 1636.91 2246.18 1636.9 2246.03 1636.9 cv
641.601 1636.9 li
640.423 1636.93 629.428 1637.06 624.7 1631.25 cv
620.172 1625.69 624.78 1619.38 627.849 1616.82 cv
730.733 1524.46 li
730.959 1524.26 736.459 1519.35 744.131 1516.95 cv
751.522 1514.63 760.644 1514.74 761.336 1514.77 cv
2127.65 1514.77 li
2127.85 1514.74 2134.63 1514.58 2141.33 1517.27 cv
2147.93 1519.92 2154.2 1525.26 2154.46 1525.49 cv
2256.42 1616.13 li
2257.36 1617.04 2264.55 1624.4 2260.97 1631.06 cv
2258.06 1636.44 2249.69 1636.91 2246.87 1636.91 cv
cp
f
2256.64 1627.08 mo
2256.64 1627.08 li
2256.64 1627.08 2256.64 1627.08 2256.64 1627.08 cv
cp
2257.23 1628 mo
2257.26 1628.03 2257.29 1628.05 2257.33 1628.08 cv
2257.29 1628.05 2257.26 1628.03 2257.23 1628 cv
cp
2257.33 1628.08 mo
2257.33 1628.08 2257.34 1628.09 2257.34 1628.09 cv
2257.34 1628.09 2257.33 1628.08 2257.33 1628.08 cv
cp
2257.35 1628.1 mo
2257.4 1628.1 li
2257.35 1628.1 li
cp
641.989 1647.17 mo
640.351 1647.17 631.066 1646.72 625.648 1637.07 cv
621.248 1629.22 623.028 1623.66 623.247 1623.05 cv
623.754 1621.63 625.333 1620.89 626.75 1621.39 cv
628.179 1621.9 628.922 1623.47 628.411 1624.9 cv
628.377 1625.01 627.255 1628.72 630.433 1634.38 cv
634.605 1641.82 641.866 1641.71 642.132 1641.68 cv
2241.69 1641.62 li
2241.87 1641.62 2253.59 1641.87 2255.34 1635.13 cv
2256.75 1629.71 2256.71 1627.71 2256.66 1627.21 cv
2256.2 1626.26 2256.31 1625.09 2257.04 1624.24 cv
2258.02 1623.08 2259.74 1622.95 2260.91 1623.93 cv
2262.18 1625.01 2263.04 1627.29 2260.65 1636.5 cv
2257.82 1647.47 2242.29 1647.11 2241.6 1647.1 cv
642.232 1647.16 li
642.208 1647.17 642.125 1647.17 641.989 1647.17 cv
cp
f
732.032 1587.69 mo
2150.48 1587.69 li
2106.36 1539.32 li
779.08 1538.62 li
732.032 1587.69 li
cp
2156.7 1593.17 mo
725.606 1593.17 li
724.508 1593.17 723.515 1592.52 723.084 1591.51 cv
722.654 1590.5 722.866 1589.33 723.626 1588.54 cv
775.932 1533.98 li
776.449 1533.44 777.163 1533.13 777.911 1533.13 cv
777.911 1533.13 777.911 1533.13 777.913 1533.13 cv
2107.57 1533.84 li
2108.34 1533.84 2109.08 1534.16 2109.59 1534.73 cv
2158.72 1588.58 li
2159.45 1589.39 2159.64 1590.54 2159.21 1591.54 cv
2158.77 1592.53 2157.78 1593.17 2156.7 1593.17 cv
cp
f
1481.11 1038.22 mo
936.406 1038.22 li
934.891 1038.22 933.664 1036.99 933.664 1035.48 cv
933.664 647.994 li
933.664 647.267 933.954 646.568 934.467 646.055 cv
934.982 645.542 935.679 645.251 936.406 645.251 cv
936.406 645.251 li
1423.02 645.43 li
1424.54 645.43 1425.76 646.659 1425.76 648.172 cv
1425.76 649.688 1424.53 650.915 1423.02 650.915 cv
1423.02 650.915 li
939.148 650.736 li
939.148 1032.74 li
1478.37 1032.74 li
1478.37 1010.99 li
1478.37 1009.47 1479.6 1008.25 1481.11 1008.25 cv
1482.62 1008.25 1483.85 1009.47 1483.85 1010.99 cv
1483.85 1035.48 li
1483.85 1036.99 1482.62 1038.22 1481.11 1038.22 cv
cp
f
938.7 1154.32 mo
938.7 1148.3 943.286 1143.43 948.933 1143.43 cv
954.585 1143.43 959.165 1148.3 959.165 1154.32 cv
959.165 1160.33 954.585 1165.21 948.933 1165.21 cv
943.286 1165.21 938.7 1160.33 938.7 1154.32 cv
cp
ef
938.66 1272.33 mo
938.66 1266.32 943.239 1261.45 948.891 1261.45 cv
954.541 1261.45 959.12 1266.32 959.12 1272.33 cv
959.12 1278.35 954.541 1283.22 948.891 1283.22 cv
943.239 1283.22 938.66 1278.35 938.66 1272.33 cv
cp
ef
939.684 1406.85 mo
939.684 1400.84 944.263 1395.97 949.911 1395.97 cv
955.565 1395.97 960.144 1400.84 960.144 1406.85 cv
960.144 1412.87 955.565 1417.74 949.911 1417.74 cv
944.263 1417.74 939.684 1412.87 939.684 1406.85 cv
cp
ef
1164.17 1132.1 mo
1037.48 1132.1 li
1035.97 1132.1 1034.74 1130.87 1034.74 1129.36 cv
1034.74 1127.84 1035.97 1126.62 1037.48 1126.62 cv
1164.17 1126.62 li
1165.68 1126.62 1166.91 1127.84 1166.91 1129.36 cv
1166.91 1130.87 1165.68 1132.1 1164.17 1132.1 cv
cp
f
1163.87 1161.31 mo
1037.19 1161.31 li
1035.67 1161.31 1034.45 1160.08 1034.45 1158.57 cv
1034.45 1157.05 1035.67 1155.83 1037.19 1155.83 cv
1163.87 1155.83 li
1165.39 1155.83 1166.62 1157.05 1166.62 1158.57 cv
1166.62 1160.08 1165.39 1161.31 1163.87 1161.31 cv
cp
f
1164.17 1190.66 mo
1037.48 1190.66 li
1035.97 1190.66 1034.74 1189.43 1034.74 1187.92 cv
1034.74 1186.41 1035.97 1185.18 1037.48 1185.18 cv
1164.17 1185.18 li
1165.68 1185.18 1166.91 1186.41 1166.91 1187.92 cv
1166.91 1189.43 1165.68 1190.66 1164.17 1190.66 cv
cp
f
1160.55 1257.3 mo
1033.86 1257.3 li
1032.34 1257.3 1031.12 1256.07 1031.12 1254.56 cv
1031.12 1253.05 1032.34 1251.82 1033.86 1251.82 cv
1160.55 1251.82 li
1162.06 1251.82 1163.29 1253.05 1163.29 1254.56 cv
1163.29 1256.07 1162.06 1257.3 1160.55 1257.3 cv
cp
f
1160.25 1286.52 mo
1033.57 1286.52 li
1032.05 1286.52 1030.83 1285.29 1030.83 1283.78 cv
1030.83 1282.26 1032.05 1281.04 1033.57 1281.04 cv
1160.25 1281.04 li
1161.77 1281.04 1163 1282.26 1163 1283.78 cv
1163 1285.29 1161.77 1286.52 1160.25 1286.52 cv
cp
f
1160.55 1315.87 mo
1033.86 1315.87 li
1032.34 1315.87 1031.12 1314.64 1031.12 1313.13 cv
1031.12 1311.62 1032.34 1310.39 1033.86 1310.39 cv
1160.55 1310.39 li
1162.06 1310.39 1163.29 1311.62 1163.29 1313.13 cv
1163.29 1314.64 1162.06 1315.87 1160.55 1315.87 cv
cp
f
1158.55 1390.04 mo
1031.86 1390.04 li
1030.35 1390.04 1029.12 1388.81 1029.12 1387.3 cv
1029.12 1385.79 1030.35 1384.56 1031.86 1384.56 cv
1158.55 1384.56 li
1160.06 1384.56 1161.29 1385.79 1161.29 1387.3 cv
1161.29 1388.81 1160.06 1390.04 1158.55 1390.04 cv
cp
f
1158.25 1419.25 mo
1031.57 1419.25 li
1030.05 1419.25 1028.83 1418.03 1028.83 1416.51 cv
1028.83 1415 1030.05 1413.77 1031.57 1413.77 cv
1158.25 1413.77 li
1159.77 1413.77 1160.99 1415 1160.99 1416.51 cv
1160.99 1418.03 1159.77 1419.25 1158.25 1419.25 cv
cp
f
1923.55 1145.44 mo
1368.98 1145.44 li
1367.47 1145.44 1366.24 1144.21 1366.24 1142.7 cv
1366.24 1141.18 1367.47 1139.96 1368.98 1139.96 cv
1923.55 1139.96 li
1925.07 1139.96 1926.29 1141.18 1926.29 1142.7 cv
1926.29 1144.21 1925.07 1145.44 1923.55 1145.44 cv
cp
f
1922.28 1174.65 mo
1367.7 1174.65 li
1366.19 1174.65 1364.96 1173.42 1364.96 1171.91 cv
1364.96 1170.39 1366.19 1169.17 1367.7 1169.17 cv
1922.28 1169.17 li
1923.79 1169.17 1925.02 1170.39 1925.02 1171.91 cv
1925.02 1173.42 1923.79 1174.65 1922.28 1174.65 cv
cp
f
1923.55 1204 mo
1368.98 1204 li
1367.47 1204 1366.24 1202.77 1366.24 1201.26 cv
1366.24 1199.75 1367.47 1198.52 1368.98 1198.52 cv
1923.55 1198.52 li
1925.07 1198.52 1926.29 1199.75 1926.29 1201.26 cv
1926.29 1202.77 1925.07 1204 1923.55 1204 cv
cp
f
1920.33 1234.95 mo
1365.75 1234.95 li
1364.24 1234.95 1363.01 1233.73 1363.01 1232.21 cv
1363.01 1230.7 1364.24 1229.47 1365.75 1229.47 cv
1920.33 1229.47 li
1921.84 1229.47 1923.07 1230.7 1923.07 1232.21 cv
1923.07 1233.73 1921.84 1234.95 1920.33 1234.95 cv
cp
f
1922.08 1329.67 mo
1367.51 1329.67 li
1365.99 1329.67 1364.77 1328.44 1364.77 1326.93 cv
1364.77 1325.42 1365.99 1324.19 1367.51 1324.19 cv
1922.08 1324.19 li
1923.6 1324.19 1924.82 1325.42 1924.82 1326.93 cv
1924.82 1328.44 1923.6 1329.67 1922.08 1329.67 cv
cp
f
1920.81 1358.89 mo
1366.23 1358.89 li
1364.71 1358.89 1363.49 1357.66 1363.49 1356.15 cv
1363.49 1354.63 1364.71 1353.41 1366.23 1353.41 cv
1920.81 1353.41 li
1922.32 1353.41 1923.55 1354.63 1923.55 1356.15 cv
1923.55 1357.66 1922.32 1358.89 1920.81 1358.89 cv
cp
f
1922.08 1388.24 mo
1367.51 1388.24 li
1365.99 1388.24 1364.77 1387.01 1364.77 1385.5 cv
1364.77 1383.99 1365.99 1382.76 1367.51 1382.76 cv
1922.08 1382.76 li
1923.6 1382.76 1924.82 1383.99 1924.82 1385.5 cv
1924.82 1387.01 1923.6 1388.24 1922.08 1388.24 cv
cp
f
1918.86 1419.19 mo
1364.28 1419.19 li
1362.77 1419.19 1361.54 1417.96 1361.54 1416.45 cv
1361.54 1414.94 1362.77 1413.71 1364.28 1413.71 cv
1918.86 1413.71 li
1920.37 1413.71 1921.6 1414.94 1921.6 1416.45 cv
1921.6 1417.96 1920.37 1419.19 1918.86 1419.19 cv
cp
f
1947.59 658.14 mo
1854.11 658.14 li
1852.6 658.14 1851.37 656.913 1851.37 655.398 cv
1851.37 653.883 1852.6 652.655 1854.11 652.655 cv
1947.59 652.655 li
1949.1 652.655 1950.33 653.883 1950.33 655.398 cv
1950.33 656.913 1949.1 658.14 1947.59 658.14 cv
cp
f
1924.48 754.028 mo
1854.05 754.028 li
1852.54 754.028 1851.31 752.8 1851.31 751.285 cv
1851.31 749.77 1852.54 748.543 1854.05 748.543 cv
1924.48 748.543 li
1925.99 748.543 1927.22 749.77 1927.22 751.285 cv
1927.22 752.8 1925.99 754.028 1924.48 754.028 cv
cp
f
1924.48 781.787 mo
1853.95 781.787 li
1852.44 781.787 1851.21 780.56 1851.21 779.044 cv
1851.21 777.529 1852.44 776.302 1853.95 776.302 cv
1924.48 776.302 li
1925.99 776.302 1927.22 777.529 1927.22 779.044 cv
1927.22 780.56 1925.99 781.787 1924.48 781.787 cv
cp
f
1924.17 812.909 mo
1853.65 812.909 li
1852.14 812.909 1850.91 811.682 1850.91 810.167 cv
1850.91 808.651 1852.14 807.424 1853.65 807.424 cv
1924.17 807.424 li
1925.68 807.424 1926.91 808.651 1926.91 810.167 cv
1926.91 811.682 1925.68 812.909 1924.17 812.909 cv
cp
f
1924.17 840.661 mo
1853.65 840.661 li
1852.14 840.661 1850.91 839.434 1850.91 837.919 cv
1850.91 836.404 1852.14 835.176 1853.65 835.176 cv
1924.17 835.176 li
1925.68 835.176 1926.91 836.404 1926.91 837.919 cv
1926.91 839.434 1925.68 840.661 1924.17 840.661 cv
cp
f
1924.32 871.783 mo
1853.8 871.783 li
1852.29 871.783 1851.06 870.556 1851.06 869.041 cv
1851.06 867.526 1852.29 866.298 1853.8 866.298 cv
1924.32 866.298 li
1925.84 866.298 1927.06 867.526 1927.06 869.041 cv
1927.06 870.556 1925.84 871.783 1924.32 871.783 cv
cp
f
1924.32 899.542 mo
1853.8 899.542 li
1852.29 899.542 1851.06 898.315 1851.06 896.8 cv
1851.06 895.285 1852.29 894.058 1853.8 894.058 cv
1924.32 894.058 li
1925.84 894.058 1927.06 895.285 1927.06 896.8 cv
1927.06 898.315 1925.84 899.542 1924.32 899.542 cv
cp
f
1924.32 929.812 mo
1853.8 929.812 li
1852.29 929.812 1851.06 928.584 1851.06 927.072 cv
1851.06 925.559 1852.29 924.332 1853.8 924.332 cv
1924.32 924.332 li
1925.84 924.332 1927.06 925.559 1927.06 927.072 cv
1927.06 928.584 1925.84 929.812 1924.32 929.812 cv
cp
f
1923.75 957.571 mo
1856.34 957.571 li
1854.83 957.571 1853.6 956.344 1853.6 954.831 cv
1853.6 953.318 1854.83 952.091 1856.34 952.091 cv
1923.75 952.091 li
1925.26 952.091 1926.49 953.318 1926.49 954.831 cv
1926.49 956.344 1925.26 957.571 1923.75 957.571 cv
cp
f
1922.84 1080.29 mo
940.095 1080.29 li
938.58 1080.29 937.352 1079.06 937.352 1077.55 cv
937.352 1076.03 938.58 1074.81 940.095 1074.81 cv
1922.84 1074.81 li
1924.35 1074.81 1925.58 1076.03 1925.58 1077.55 cv
1925.58 1079.06 1924.35 1080.29 1922.84 1080.29 cv
cp
f
1158.25 1449.38 mo
1031.57 1449.38 li
1030.05 1449.38 1028.83 1448.15 1028.83 1446.64 cv
1028.83 1445.13 1030.05 1443.9 1031.57 1443.9 cv
1158.25 1443.9 li
1159.77 1443.9 1160.99 1445.13 1160.99 1446.64 cv
1160.99 1448.15 1159.77 1449.38 1158.25 1449.38 cv
cp
f
1144.9 833.793 mo
1155.19 828.134 li
1155.19 828.134 1157.62 787.318 1166.82 771.698 cv
1171.35 763.993 1188.64 747.61 1213.73 758.346 cv
1230.31 765.444 1237.35 797.063 1236.78 804.434 cv
1236.58 807.098 1226.73 811.838 1225.78 804.581 cv
1224.83 797.322 1218.01 776.795 1208.8 770.067 cv
1202.5 765.461 1189.35 766.653 1183.16 770.581 cv
1167.44 780.555 1168.91 828.444 1168.91 828.444 cv
1235.73 828.719 li
1243.27 836.288 li
1244.43 908.415 li
1236.37 914.479 li
1152.6 915.758 li
1144.9 909.765 li
1144.9 833.793 li
cp
1 .72549 .32549 rgb
ef
1154.08 832.224 mo
1150.7 832.224 1147.95 834.971 1147.95 838.35 cv
1147.95 905.248 li
1147.95 908.626 1150.7 911.374 1154.08 911.374 cv
1233.57 911.374 li
1236.94 911.374 1239.69 908.626 1239.69 905.248 cv
1239.69 838.35 li
1239.69 834.971 1236.94 832.224 1233.57 832.224 cv
1154.08 832.224 li
cp
1233.57 918.229 mo
1154.08 918.229 li
1146.92 918.229 1141.1 912.407 1141.1 905.248 cv
1141.1 838.35 li
1141.1 831.191 1146.92 825.369 1154.08 825.369 cv
1233.57 825.369 li
1240.72 825.369 1246.55 831.191 1246.55 838.35 cv
1246.55 905.248 li
1246.55 912.407 1240.72 918.229 1233.57 918.229 cv
cp
0 0 0 rgb
f
1168.67 830.136 mo
1168.64 830.136 1168.6 830.136 1168.57 830.133 cv
1166.68 830.08 1165.19 828.502 1165.24 826.61 cv
1165.27 825.787 1165.86 806.275 1168.94 791.916 cv
1171.89 778.114 1177.52 763.942 1196.83 763.487 cv
1209.91 763.353 1218.82 770.167 1223.9 784.842 cv
1225.49 789.477 1226.83 794.952 1227.86 801.118 cv
1228.33 803.885 1228.72 804.724 1228.86 804.949 cv
1228.88 804.931 1229.11 804.972 1229.56 805.025 cv
1231.11 805.21 1232.21 804.905 1232.47 804.637 cv
1232.54 804.568 1232.61 804.222 1232.53 803.597 cv
1228.43 772.948 1216.74 758.214 1197.45 758.479 cv
1164.84 758.953 1162.71 789.235 1160.83 815.953 cv
1160.58 819.498 1160.34 822.903 1160.03 826.07 cv
1159.84 827.951 1158.15 829.308 1156.28 829.147 cv
1154.4 828.962 1153.02 827.286 1153.2 825.4 cv
1153.51 822.294 1153.74 818.952 1153.99 815.471 cv
1155.87 788.765 1158.45 752.189 1197.35 751.625 cv
1220.67 751.263 1234.75 768.463 1239.32 802.689 cv
1239.79 806.146 1238.51 808.272 1237.35 809.446 cv
1234.65 812.197 1230.43 812.043 1228.75 811.831 cv
1223.54 811.215 1222.08 808.123 1221.1 802.251 cv
1220.13 796.458 1218.89 791.353 1217.42 787.08 cv
1213.33 775.269 1207.01 770.022 1196.99 770.342 cv
1185.11 770.621 1179.13 777.072 1175.64 793.353 cv
1172.69 807.105 1172.1 826.612 1172.09 826.806 cv
1172.04 828.665 1170.52 830.136 1168.67 830.136 cv
cp
f
1185.09 865.196 mo
1185.09 860.258 1189.2 856.248 1194.25 856.248 cv
1199.31 856.248 1203.41 860.258 1203.41 865.196 cv
1203.41 868.519 1201.56 871.417 1198.81 872.961 cv
1197.47 873.716 1199.2 891.451 1194.52 891.291 cv
1189.17 891.105 1191.27 873.774 1190 873.122 cv
1187.08 871.627 1185.09 868.639 1185.09 865.196 cv
cp
ef
1188.43 876.17 mo
1188.47 876.17 li
1188.43 876.17 li
cp
1194.25 859.678 mo
1191.09 859.678 1188.52 862.155 1188.52 865.198 cv
1188.52 867.242 1189.68 869.11 1191.56 870.072 cv
1193.78 871.214 1193.84 873.283 1193.97 877.815 cv
1194 879.181 1194.08 881.793 1194.33 884.079 cv
1194.55 881.97 1194.64 879.629 1194.7 878.252 cv
1194.91 873.243 1195 871.169 1197.13 869.974 cv
1198.89 868.987 1199.98 867.157 1199.98 865.198 cv
1199.98 862.155 1197.41 859.678 1194.25 859.678 cv
cp
1195.36 888.158 mo
1195.4 888.158 li
1195.36 888.158 li
cp
1194.63 894.723 mo
1194.55 894.723 1194.48 894.72 1194.4 894.718 cv
1187.58 894.479 1187.31 884.96 1187.11 878.009 cv
1187.09 877.154 1187.06 876.092 1187.01 875.325 cv
1183.68 873.028 1181.66 869.277 1181.66 865.198 cv
1181.66 858.375 1187.31 852.823 1194.25 852.823 cv
1201.19 852.823 1206.84 858.375 1206.84 865.198 cv
1206.84 869.139 1204.92 872.832 1201.74 875.148 cv
1201.66 876.047 1201.6 877.442 1201.55 878.542 cv
1201.25 885.759 1200.87 894.723 1194.63 894.723 cv
cp
f
1133.03 763.904 mo
1132.41 763.904 1131.79 763.739 1131.23 763.391 cv
1111.73 751.334 li
1110.12 750.339 1109.62 748.228 1110.62 746.617 cv
1111.61 745.004 1113.73 744.511 1115.34 745.506 cv
1134.83 757.563 li
1136.44 758.558 1136.94 760.668 1135.95 762.279 cv
1135.3 763.328 1134.18 763.904 1133.03 763.904 cv
cp
f
1156.49 736.58 mo
1155.31 736.58 1154.16 735.971 1153.52 734.877 cv
1142.45 715.879 li
1141.5 714.243 1142.05 712.146 1143.69 711.193 cv
1145.32 710.24 1147.42 710.789 1148.37 712.429 cv
1159.45 731.428 li
1160.4 733.063 1159.85 735.161 1158.21 736.114 cv
1157.67 736.431 1157.07 736.58 1156.49 736.58 cv
cp
f
1259.95 763.547 mo
1258.8 763.547 1257.68 762.971 1257.03 761.922 cv
1256.03 760.312 1256.53 758.201 1258.14 757.205 cv
1277.64 745.153 li
1279.24 744.16 1281.36 744.653 1282.35 746.265 cv
1283.35 747.875 1282.85 749.986 1281.24 750.982 cv
1261.75 763.034 li
1261.19 763.382 1260.56 763.547 1259.95 763.547 cv
cp
f
1236.34 735.368 mo
1235.82 735.368 1235.28 735.248 1234.78 734.991 cv
1233.1 734.127 1232.43 732.062 1233.3 730.376 cv
1243.22 711.019 li
1244.08 709.336 1246.14 708.669 1247.83 709.533 cv
1249.51 710.396 1250.18 712.462 1249.32 714.147 cv
1239.4 733.505 li
1238.79 734.688 1237.59 735.368 1236.34 735.368 cv
cp
f
1196.89 726.9 mo
1195.04 726.9 1193.51 725.414 1193.47 723.546 cv
1192.99 701.524 li
1192.95 699.632 1194.45 698.065 1196.34 698.023 cv
1198.11 698.092 1199.8 699.482 1199.84 701.376 cv
1200.32 723.399 li
1200.36 725.291 1198.86 726.857 1196.97 726.9 cv
1196.95 726.9 1196.92 726.9 1196.89 726.9 cv
cp
f
519.777 830.89 mo
582.61 767.062 li
671.763 744.22 li
756.754 726.003 li
756.754 726.003 819.762 717.512 900.464 714.391 cv
981.16 711.267 1079.55 713.509 1079.55 713.509 cv
1127.24 1051.37 li
1127.24 1051.37 1092.02 1048.94 1044.75 1048.89 cv
994.678 1048.85 930.479 1051.44 857.556 1060 cv
791.784 1067.72 717.979 1082.89 663.172 1094.64 cv
599.839 1108.21 560.178 1117.91 560.178 1117.91 cv
519.777 830.89 li
cp
1 1 1 rgb
ef
439.3 767.637 mo
440.608 767.8 501.113 780.2 499.866 779.778 cv
499.328 779.6 488.62 787.31 478.79 792.219 cv
465.756 798.73 452.814 802.876 453.05 802.162 cv
453.117 801.966 442.384 797.277 442.373 797.338 cv
442.364 797.374 434.764 797.045 434.764 797.045 cv
434.764 797.045 437.99 767.477 439.3 767.637 cv
cp
371.308 551.033 mo
358.404 549.996 344.089 550.716 334.146 556.855 cv
305.579 574.477 293.444 618.394 287.283 637.441 cv
285.125 644.113 283.38 656.719 288.03 668.485 cv
294.196 684.096 307.58 698.482 307.58 698.482 cv
307.58 698.482 262.485 724.981 249.674 764.598 cv
240.331 793.493 234.275 853.028 233.108 882.65 cv
232.208 905.48 231.108 942.241 232.659 968.769 cv
233.483 982.818 233.809 990.128 238.033 999.357 cv
241.117 1006.1 245.919 1019.16 245.345 1026.37 cv
244.774 1033.59 242.661 1044.58 242.661 1044.58 cv
242.661 1044.58 248.224 1052.06 264.449 1057.26 cv
285.167 1063.92 320.096 1068.61 348.324 1067.71 cv
378.098 1066.76 405.456 1059.74 423.395 1051.6 cv
435.777 1045.97 443.988 1038.16 443.988 1038.16 cv
439.063 1007.56 li
439.063 1007.56 444.406 988.803 438.617 959.209 cv
431.854 924.653 432.2 866.084 432.2 866.084 cv
432.2 866.084 438.008 867.015 445.631 866.385 cv
452.439 865.818 460.039 864.328 476.074 856.386 cv
510.07 839.545 567.713 799.522 567.713 799.522 cv
569.204 782.059 li
663.081 732.958 li
663.081 732.958 660.941 719.291 657.257 710.575 cv
653.575 701.856 648.304 698.186 648.304 698.186 cv
648.304 698.186 635.627 700.959 613.98 708.633 cv
590.045 717.115 556.384 730.564 544.131 729.526 cv
520.574 727.534 500.364 715.214 483.539 707.29 cv
465.332 698.717 451.45 694.457 451.45 694.457 cv
451.45 694.457 456.163 682.42 456.079 664.455 cv
455.954 637.995 450.306 600.274 443.839 582.077 cv
440.374 572.314 408.915 557.553 399.663 555.657 cv
395.628 554.831 384.212 552.068 371.308 551.033 cv
cp
.266667 .352941 .435294 rgb
ef
366.763 670.808 mo
372.984 655.652 391.065 620.442 391.065 620.442 cv
399.002 610.744 li
430.008 610.936 li
436.154 638.465 li
445.876 649.538 li
442.801 655.128 li
437.731 657.843 li
441.394 663.866 li
433.648 669.157 li
431.475 677.835 li
435.27 680.917 li
431.452 685.331 li
431.452 685.331 434.837 695.555 427.667 697.894 cv
420.498 700.234 402.776 694.685 402.776 694.685 cv
395.751 714.583 li
395.751 714.583 360.539 685.962 366.763 670.808 cv
cp
1 .866667 .752941 rgb
ef
416.283 666.37 mo
432.802 668.637 li
431.793 677.717 li
431.793 677.717 424.7 677.781 420.822 674.943 cv
416.943 672.104 416.283 666.37 416.283 666.37 cv
cp
1 1 1 rgb
ef
434.114 631.542 mo
433.706 644.731 406.239 646.088 405.561 628.955 cv
404.891 612.083 434.521 618.354 434.114 631.542 cv
cp
399.962 608.642 mo
384.59 636.399 li
384.59 636.399 387.836 638.178 391.902 641.326 cv
397.271 645.477 404.534 651.356 412.199 651.174 cv
425.673 650.854 438.468 635.208 438.468 635.208 cv
435.333 624.76 li
436.526 611.626 li
399.962 608.642 li
cp
.164706 .223529 .282353 rgb
ef
653.209 700.776 mo
653.209 700.776 671.589 693.127 687.816 694.113 cv
704.247 695.115 733.956 701.455 733.956 701.455 cv
756.815 726.146 li
756.815 726.146 722.134 730.323 724.642 733.621 cv
731.423 742.529 740.867 753.977 730.885 753.265 cv
724.615 752.82 714.185 743.219 703.854 733.896 cv
697.414 728.087 691.396 722.165 685.281 719.327 cv
679.792 716.776 663.353 726.369 663.353 726.369 cv
653.209 700.776 li
cp
ef
607.194 728.379 mo
624.385 721.873 653.048 728.379 653.048 728.379 cv
653.048 728.379 683.86 753.47 678.522 760.338 cv
676.684 762.701 667.106 757.609 667.106 757.609 cv
667.106 757.609 666.118 769.954 663.382 772.252 cv
660.648 774.546 656.17 766.8 656.17 766.8 cv
656.17 766.8 653.287 776.735 649.982 777.585 cv
646.677 778.435 642.953 770.197 642.953 770.197 cv
642.953 770.197 636.044 778.317 633.233 774.733 cv
631.03 771.928 636.299 761.349 636.538 757.138 cv
636.604 755.96 631.702 755.855 631.702 755.855 cv
612.48 764.502 li
588.584 770.364 li
570.034 782.338 li
558.373 759.758 li
558.373 759.758 590.001 734.889 607.194 728.379 cv
cp
ef
154.318 1492.05 mo
196.765 1499.33 li
196.765 1499.33 194.044 1507.62 209.756 1532.14 cv
212.206 1535.96 217.985 1544.15 223.1 1548.42 cv
234.561 1557.99 248.55 1564.22 255.86 1573.44 cv
266.198 1586.48 259.606 1597.42 259.606 1597.42 cv
259.606 1597.42 243.317 1602.67 220.147 1601.04 cv
208.504 1600.23 190.999 1598.53 181.265 1591.84 cv
170.947 1584.75 156.92 1570.2 151.89 1566.7 cv
144.334 1561.44 136.522 1556.63 137.501 1550.83 cv
142.143 1523.41 154.318 1492.05 154.318 1492.05 cv
cp
ef
418.706 1502.37 mo
464.042 1493.95 li
464.042 1493.95 467.593 1505.99 485.105 1524.96 cv
496.795 1537.62 525.729 1546.55 539.488 1559.17 cv
546.333 1565.46 550.357 1578.37 544.794 1581.77 cv
534.424 1588.1 508.002 1589.97 479.348 1583.11 cv
470.632 1581.02 460.126 1573.84 451.808 1571.17 cv
443.29 1568.42 423.417 1569.51 418.122 1565.85 cv
412.779 1562.15 418.706 1502.37 418.706 1502.37 cv
cp
ef
159.738 1476.9 mo
159.738 1476.9 170.717 1483.67 180.584 1486.91 cv
190.452 1490.14 199.206 1489.82 199.206 1489.82 cv
197.122 1500.38 li
197.122 1500.38 193.785 1497.88 186.422 1497.75 cv
179.056 1497.6 178.442 1500.84 169.327 1500.66 cv
162.101 1500.52 155.429 1490.52 155.429 1490.52 cv
159.738 1476.9 li
cp
1 .866667 .752941 rgb
ef
420.177 1491.14 mo
454.487 1492.72 li
454.487 1492.72 453.981 1498.29 443.576 1502.18 cv
433.17 1506.07 420.045 1501.65 420.045 1501.65 cv
420.177 1491.14 li
cp
ef
247.374 1051.72 mo
247.374 1051.72 295.207 1069.93 349.096 1067.57 cv
402.004 1065.25 438.89 1042.7 438.89 1042.7 cv
438.89 1042.7 497.358 1259.57 484.844 1305.63 cv
483.809 1309.46 476.619 1364.96 472.576 1415.64 cv
470.271 1444.5 473.051 1477.15 468.385 1484.4 cv
459.18 1498.7 417.961 1491.47 415.56 1488.22 cv
412.722 1484.38 410.99 1468.96 409.113 1446.4 cv
406.679 1417.11 402.372 1378.56 402.783 1342.37 cv
403.113 1313.39 406.817 1278.86 404.537 1270.86 cv
384.942 1202.12 350.819 1150.18 350.819 1150.18 cv
350.819 1150.18 337.542 1249.69 307.433 1316.21 cv
301.201 1329.99 293.658 1339.13 285.757 1351.45 cv
275.039 1368.16 263.659 1387.67 253.99 1404.01 cv
228.206 1447.59 209.645 1485.99 209.645 1485.99 cv
209.645 1485.99 197.987 1493.85 179.172 1486.45 cv
157.823 1478.05 157.399 1467.84 157.399 1467.84 cv
157.399 1467.84 169.476 1414.75 190.309 1362.49 cv
204.521 1326.86 227.998 1294.47 234.103 1268.38 cv
245.968 1217.66 241.746 1163.71 241.998 1121.05 cv
242.228 1081.83 247.374 1051.72 247.374 1051.72 cv
cp
.537255 .6 .588235 rgb
ef
434.42 649.092 mo
434.041 645.155 433.465 638.941 436.196 638.941 cv
438.93 638.941 444.95 645.631 444.95 649.027 cv
444.95 652.428 442.737 655.184 440.003 655.184 cv
437.27 655.184 434.802 653.026 434.42 649.092 cv
cp
.988235 .717647 .556863 rgb
ef
375.677 674.974 mo
381.26 683.347 li
403.336 696.289 li
397.119 713.541 li
397.119 713.541 386.748 708.977 381.388 699.333 cv
376.025 689.69 375.677 674.974 375.677 674.974 cv
cp
ef
422.558 571.277 mo
422.558 571.277 435.868 578.297 438.907 587.459 cv
440.737 592.975 441.087 600.37 441.087 600.37 cv
441.087 600.37 456.451 603.327 463.549 606.337 cv
467.543 608.029 467.832 609.968 463.978 610.849 cv
453.267 613.304 398.244 610.182 398.244 610.182 cv
422.558 571.277 li
cp
.164706 .223529 .282353 rgb
ef
196.845 1492.91 mo
194.024 1492.91 190.947 1492.61 187.658 1492 cv
171.081 1488.93 154.008 1478.93 155.014 1466.46 cv
156.007 1454.19 169.744 1403.9 192.469 1351.47 cv
202.834 1327.56 210.383 1313.49 216.45 1302.18 cv
222.424 1291.05 226.742 1283.01 230.225 1271.6 cv
240.574 1237.73 240.065 1167.53 239.693 1116.26 cv
239.655 1111.07 li
239.517 1091.51 242.629 1071.04 244.903 1056.1 cv
245.687 1050.92 li
245.91 1049.43 247.338 1048.42 248.802 1048.61 cv
250.299 1048.84 251.332 1050.23 251.109 1051.73 cv
250.324 1056.93 li
248.079 1071.69 245.004 1091.9 245.14 1111.03 cv
245.176 1116.23 li
245.573 1170.71 246.063 1238.53 235.469 1273.21 cv
231.827 1285.13 227.404 1293.37 221.284 1304.78 cv
215.263 1316 207.774 1329.96 197.499 1353.65 cv
175.338 1404.78 161.42 1455.28 160.481 1466.9 cv
159.792 1475.44 174.492 1483.98 188.658 1486.61 cv
197.771 1488.29 207.703 1487.51 209.338 1481.96 cv
212.331 1471.79 264.33 1374.06 297.273 1327.69 cv
320.777 1294.6 338.992 1196.06 344.979 1163.68 cv
345.771 1159.39 346.374 1156.13 346.773 1154.17 cv
350.339 1136.61 361.73 1114.73 362.213 1113.81 cv
362.918 1112.46 364.569 1111.95 365.915 1112.65 cv
367.256 1113.35 367.773 1115.01 367.073 1116.35 cv
366.957 1116.57 355.556 1138.47 352.146 1155.26 cv
351.751 1157.21 351.156 1160.43 350.373 1164.67 cv
343.692 1200.81 325.949 1296.8 301.745 1330.87 cv
269.043 1376.9 217.542 1473.51 214.601 1483.5 cv
212.813 1489.58 206.281 1492.91 196.845 1492.91 cv
cp
0 0 0 rgb
f
370.344 1102.73 mo
370.217 1102.73 370.092 1102.72 369.962 1102.7 cv
368.463 1102.49 367.417 1101.11 367.624 1099.61 cv
369.487 1086.16 370.621 1077.05 371.266 1067.42 cv
371.366 1065.9 372.623 1064.75 374.185 1064.86 cv
375.695 1064.97 376.837 1066.27 376.737 1067.78 cv
376.085 1077.53 374.894 1087.11 373.055 1100.36 cv
372.866 1101.74 371.689 1102.73 370.344 1102.73 cv
cp
f
442.692 1496.15 mo
428.817 1496.15 413.143 1492.62 411.775 1485.09 cv
407.766 1463.01 405.686 1433.23 403.675 1404.43 cv
402.82 1392.18 401.968 1379.97 400.975 1368.35 cv
398.94 1344.56 400.551 1326.09 401.845 1311.24 cv
402.847 1299.77 403.711 1289.86 402.722 1280.52 cv
398.152 1237.29 349.866 1153.32 349.38 1152.47 cv
348.623 1151.17 349.072 1149.49 350.381 1148.73 cv
351.696 1147.98 353.37 1148.42 354.128 1149.73 cv
356.141 1153.22 403.483 1235.55 408.176 1279.94 cv
409.22 1289.82 408.334 1299.96 407.31 1311.72 cv
405.967 1327.12 404.443 1344.57 406.438 1367.89 cv
407.435 1379.52 408.29 1391.77 409.146 1404.05 cv
411.146 1432.7 413.215 1462.33 417.171 1484.11 cv
417.753 1487.32 432.876 1492.11 449.761 1490.32 cv
453.997 1489.87 467.798 1487.8 467.555 1479.97 cv
467.122 1466.25 470.701 1373.27 481.523 1303.62 cv
486.522 1271.46 478.611 1230.63 467.664 1174.12 cv
466.122 1166.16 464.522 1157.9 462.889 1149.31 cv
456.326 1114.76 447.655 1081.86 440.686 1055.42 cv
437.595 1043.67 li
437.214 1042.2 438.091 1040.7 439.557 1040.32 cv
441.029 1039.96 442.52 1040.82 442.902 1042.28 cv
445.988 1054.03 li
452.979 1080.54 461.679 1113.54 468.275 1148.28 cv
469.909 1156.87 471.509 1165.13 473.049 1173.08 cv
484.101 1230.13 492.087 1271.36 486.941 1304.46 cv
476.21 1373.52 472.656 1467.75 473.035 1479.81 cv
473.303 1488.4 465.029 1494.22 450.337 1495.77 cv
447.929 1496.02 445.343 1496.15 442.692 1496.15 cv
cp
f
336.665 1070.73 mo
297.949 1070.73 259.348 1062.79 246.008 1051.96 cv
242.402 1049.03 240.599 1045.88 240.646 1042.58 cv
240.73 1036.88 241.192 1032.62 241.565 1029.2 cv
241.924 1025.89 242.21 1023.28 242.018 1020.68 cv
241.572 1014.63 239.628 1010.52 237.573 1006.18 cv
235.75 1002.33 233.864 998.349 233.175 993.109 cv
221.919 907.812 236.308 814.044 240.987 787.336 cv
252.033 724.26 304.746 698.728 305.277 698.478 cv
306.645 697.837 308.279 698.42 308.923 699.786 cv
309.571 701.153 308.986 702.789 307.618 703.437 cv
307.114 703.675 256.931 728.085 246.387 788.283 cv
241.744 814.794 227.458 907.87 238.611 992.395 cv
239.191 996.778 240.811 1000.21 242.529 1003.83 cv
244.709 1008.44 246.965 1013.21 247.485 1020.28 cv
247.715 1023.38 247.392 1026.35 247.017 1029.79 cv
246.64 1033.27 246.209 1037.21 246.131 1042.66 cv
246.102 1044.57 247.927 1046.45 249.464 1047.7 cv
267.222 1062.12 336.6 1071.13 383.215 1060.63 cv
423.87 1051.45 441.065 1042.03 440.072 1036.77 cv
439.644 1034.51 439.318 1030.76 438.867 1025.58 cv
438.501 1021.37 438.053 1016.2 437.401 1010.11 cv
437.163 1007.86 437.649 1005.23 438.265 1001.89 cv
439.8 993.587 442.119 981.042 436.683 960.468 cv
431.731 941.719 428.984 906.549 429.334 866.388 cv
429.348 864.881 430.573 863.67 432.077 863.67 cv
432.083 863.67 432.093 863.67 432.102 863.67 cv
433.614 863.683 434.833 864.921 434.819 866.437 cv
434.471 906.136 437.151 940.764 441.984 959.066 cv
447.735 980.827 445.182 994.636 443.658 1002.89 cv
443.123 1005.78 442.701 1008.07 442.855 1009.53 cv
443.509 1015.66 443.964 1020.87 444.332 1025.1 cv
444.77 1030.13 445.084 1033.76 445.459 1035.75 cv
447.436 1046.22 426.9 1056.38 384.422 1065.97 cv
369.797 1069.27 353.218 1070.73 336.665 1070.73 cv
cp
f
435.362 798.869 mo
435.288 798.869 435.212 798.866 435.136 798.859 cv
433.628 798.737 432.503 797.414 432.626 795.903 cv
433.755 782.019 436.125 763.859 438.216 747.835 cv
439.613 737.062 li
439.805 735.558 441.21 734.496 442.681 734.69 cv
444.183 734.882 445.245 736.256 445.053 737.758 cv
443.654 748.545 li
441.572 764.506 439.211 782.597 438.093 796.349 cv
437.977 797.782 436.776 798.869 435.362 798.869 cv
cp
f
370.509 1037.33 mo
331.49 1037.33 279.604 1031.26 260.93 1017.92 cv
259.698 1017.04 259.412 1015.33 260.292 1014.1 cv
261.173 1012.87 262.887 1012.59 264.116 1013.46 cv
287.609 1030.25 377.659 1036.15 407.938 1028.93 cv
409.428 1028.6 410.892 1029.49 411.24 1030.96 cv
411.592 1032.44 410.682 1033.91 409.209 1034.27 cv
400.752 1036.28 386.741 1037.33 370.509 1037.33 cv
cp
f
440.547 869.152 mo
423.198 869.152 396.182 863.484 359.952 852.231 cv
340.969 846.333 297.954 831.477 296.64 829.475 cv
298.931 827.971 li
300.051 825.47 li
301.123 825.927 413.884 870.085 449.828 862.889 cv
476.307 857.571 533.217 819.331 554.644 804.936 cv
560.122 801.254 562.804 799.458 563.895 798.857 cv
568.24 796.461 566.995 782.358 561.427 770.913 cv
558.395 764.681 553.738 759.06 550.226 760.559 cv
536.853 766.234 517.932 775.673 499.636 784.799 cv
488.053 790.579 477.112 796.037 468.295 800.176 cv
454.476 806.674 451.518 805.739 442.379 801.131 cv
440.994 800.435 li
437.618 798.752 436.417 799.375 434.427 800.415 cv
431.952 801.709 428.567 803.485 422.417 799.841 cv
410.947 793.042 399.092 785.105 386.538 776.701 cv
351.823 753.463 315.93 729.441 291.099 732.392 cv
289.613 732.568 288.231 731.497 288.053 729.993 cv
287.872 728.491 288.948 727.125 290.452 726.947 cv
317.28 723.747 354.041 748.351 389.588 772.145 cv
402.078 780.504 413.873 788.401 425.215 795.124 cv
428.723 797.204 429.848 796.619 431.887 795.555 cv
434.282 794.303 437.564 792.594 443.446 795.53 cv
444.848 796.235 li
452.767 800.221 453.983 800.841 465.964 795.213 cv
474.722 791.101 485.634 785.656 497.188 779.893 cv
515.558 770.728 534.554 761.251 548.083 755.512 cv
554.269 752.87 561.115 757.739 566.359 768.514 cv
571.81 779.723 575.639 798.641 566.544 803.66 cv
565.613 804.173 562.121 806.518 557.701 809.488 cv
533.989 825.42 478.458 862.732 450.908 868.267 cv
447.963 868.858 444.506 869.152 440.547 869.152 cv
cp
f
281.062 847.42 mo
280.774 847.42 280.481 847.375 280.196 847.28 cv
275.994 845.881 272.116 841.511 268.974 834.646 cv
260.477 816.068 257.806 780.903 269.59 752.325 cv
270.168 750.919 271.783 750.27 273.169 750.834 cv
274.57 751.413 275.238 753.015 274.66 754.414 cv
263.464 781.562 265.944 814.839 273.961 832.365 cv
276.382 837.656 279.286 841.197 281.928 842.076 cv
283.365 842.556 284.141 844.109 283.664 845.543 cv
283.28 846.693 282.211 847.42 281.062 847.42 cv
cp
f
661.894 736.044 mo
661.706 736.044 661.517 736.024 661.327 735.984 cv
659.845 735.674 658.896 734.219 659.209 732.737 cv
660.642 725.922 655.949 711.579 651.104 704.246 cv
649.221 701.395 647.954 700.598 647.624 700.533 cv
639.135 702.769 625.985 707.623 612.065 712.759 cv
583.007 723.486 552.955 734.587 540.887 731.499 cv
517.749 725.619 497.855 716.426 481.87 709.04 cv
469.833 703.479 459.439 698.674 452.024 697.427 cv
450.531 697.175 449.524 695.76 449.774 694.267 cv
450.027 692.777 451.437 691.792 452.935 692.018 cv
461.072 693.39 471.266 698.099 484.17 704.061 cv
499.951 711.354 519.59 720.429 542.239 726.184 cv
552.644 728.834 584.547 717.07 610.167 707.616 cv
624.22 702.428 637.495 697.53 646.457 695.207 cv
647.835 694.856 650.02 694.946 652.604 697.414 cv
659.211 703.724 666.649 724.01 664.574 733.867 cv
664.304 735.159 663.163 736.044 661.894 736.044 cv
cp
f
501.343 782.987 mo
501.205 782.987 501.064 782.976 500.924 782.956 cv
469.967 778.208 438.999 769.351 438.689 769.262 cv
437.234 768.842 436.395 767.325 436.812 765.868 cv
437.229 764.413 438.742 763.565 440.206 763.991 cv
440.512 764.078 471.156 772.843 501.754 777.534 cv
503.251 777.764 504.278 779.163 504.05 780.66 cv
503.84 782.017 502.673 782.987 501.343 782.987 cv
cp
f
756.922 729.486 mo
756.047 729.486 755.188 729.069 754.657 728.29 cv
754.51 728.078 739.967 706.964 728.295 703.327 cv
711.858 698.212 685.574 695.198 677.819 696.001 cv
667.617 697.065 655.697 703.258 655.576 703.32 cv
654.237 704.03 652.58 703.505 651.876 702.165 cv
651.174 700.823 651.689 699.167 653.03 698.465 cv
653.555 698.19 665.988 691.721 677.25 690.547 cv
685.658 689.69 712.603 692.701 729.926 698.092 cv
743.415 702.294 758.546 724.265 759.185 725.197 cv
760.037 726.447 759.718 728.152 758.466 729.006 cv
757.993 729.33 757.455 729.486 756.922 729.486 cv
cp
f
729.745 755.728 mo
727.099 755.728 724.088 754.527 721.781 752.372 cv
717.445 748.324 708.736 741.71 703.93 738.128 cv
699.993 735.196 696.405 731.941 693.239 729.071 cv
689.646 725.813 685.931 722.446 684.105 721.964 cv
680.341 720.967 667.662 727.007 665.491 728.623 cv
664.591 729.549 663.125 729.736 662.012 728.993 cv
660.749 728.156 660.405 726.454 661.242 725.193 cv
662.509 723.278 678.871 714.897 685.507 716.662 cv
688.624 717.485 692.105 720.641 696.92 725.008 cv
699.998 727.797 703.483 730.957 707.205 733.732 cv
712.104 737.381 720.996 744.136 725.523 748.364 cv
727.507 750.221 729.796 750.417 730.354 750.172 cv
730.336 750.134 730.345 749.978 730.301 749.712 cv
729.286 743.665 726.864 740.978 723.801 737.58 cv
721.435 734.953 718.753 731.977 716.553 727.141 cv
715.417 724.648 716.064 721.426 718.202 718.934 cv
720.855 715.836 725.059 714.645 729.156 715.796 cv
736.843 717.965 746.34 725.479 746.74 725.798 cv
747.925 726.739 748.121 728.464 747.179 729.649 cv
746.233 730.832 744.508 731.023 743.326 730.089 cv
743.236 730.017 734.289 722.944 727.667 721.076 cv
724.702 720.235 722.973 721.799 722.366 722.504 cv
721.509 723.501 721.368 724.488 721.542 724.869 cv
723.392 728.935 725.67 731.463 727.875 733.909 cv
731.097 737.484 734.429 741.179 735.71 748.802 cv
736.165 751.511 735.15 753.82 732.994 754.978 cv
732.05 755.485 730.935 755.728 729.745 755.728 cv
cp
f
675.65 763.364 mo
671.226 763.364 665.926 759.45 664.248 758.116 cv
663.063 757.172 662.867 755.449 663.808 754.264 cv
664.748 753.075 666.47 752.883 667.66 753.822 cv
671.047 756.509 674.943 758.229 675.88 757.859 cv
676.219 753.57 657.536 733.047 652.908 731.434 cv
643.165 729.658 624.807 727.119 612.57 730.399 cv
604.818 732.472 590.351 742.014 577.585 750.435 cv
570.938 754.82 564.658 758.961 559.396 762.041 cv
558.091 762.811 556.406 762.364 555.646 761.061 cv
554.88 759.753 555.32 758.073 556.625 757.31 cv
561.762 754.302 567.981 750.201 574.566 745.856 cv
588.321 736.785 602.542 727.404 611.153 725.102 cv
623.758 721.729 641.422 723.763 654.012 726.068 cv
658.859 726.951 674.182 743.049 679.109 751.5 cv
681.14 754.98 681.76 757.533 681.066 759.535 cv
680.435 761.351 679.131 762.627 677.397 763.13 cv
676.84 763.291 676.253 763.364 675.65 763.364 cv
cp
f
568.867 786.676 mo
568.09 786.676 567.318 786.348 566.776 785.71 cv
565.794 784.556 565.935 782.824 567.088 781.845 cv
567.713 781.314 582.51 768.807 592.384 766.555 cv
595.334 765.892 li
603.648 764.047 611.501 762.302 624.698 755.719 cv
625.028 755.485 li
626.896 754.21 631.283 751.223 635.143 752.725 cv
636.571 753.278 638.443 754.664 639.255 758.109 cv
639.735 760.135 638.713 762.434 637.419 765.343 cv
636.538 767.329 634.699 771.464 635.422 772.531 cv
635.424 772.533 635.429 772.533 635.433 772.533 cv
636.337 772.533 639.958 769.652 642.938 764.29 cv
645.803 759.133 645.548 757.31 644.011 750.417 cv
643.234 746.914 634.697 744.838 629.169 744.537 cv
627.659 744.455 626.499 743.165 626.579 741.652 cv
626.661 740.144 627.96 739.035 629.462 739.062 cv
631.289 739.157 647.376 740.264 649.364 749.226 cv
651.038 756.732 651.564 760.055 647.73 766.955 cv
647.117 768.057 641.567 777.741 635.522 778.007 cv
633.646 778.029 631.983 777.235 630.879 775.606 cv
628.453 772.018 630.646 767.082 632.41 763.116 cv
632.994 761.8 633.878 759.81 633.891 759.18 cv
633.697 758.428 633.375 757.921 633.157 757.834 cv
632.807 757.709 631.615 757.629 628.118 760.015 cv
627.67 760.32 627.331 760.535 627.154 760.624 cv
613.346 767.51 604.795 769.409 596.523 771.248 cv
593.604 771.901 li
586.484 773.526 574.613 782.646 570.641 786.022 cv
570.125 786.462 569.494 786.676 568.867 786.676 cv
cp
f
649.484 780.665 mo
649.266 780.665 649.081 780.653 648.936 780.638 cv
644.919 780.203 641.817 775.86 641.034 769.572 cv
640.847 768.07 641.911 766.7 643.415 766.513 cv
644.903 766.318 646.289 767.39 646.474 768.894 cv
647.001 773.111 648.748 775.102 649.524 775.184 cv
649.71 775.177 650.62 774.604 651.325 772.606 cv
653.936 765.216 655.309 753.867 652.975 748.418 cv
650.77 743.281 633.648 735.629 630.211 735.629 cv
628.696 735.629 627.469 734.402 627.469 732.887 cv
627.469 731.372 628.696 730.145 630.211 730.145 cv
635.299 730.145 654.775 738.709 658.013 746.258 cv
661.019 753.267 659.475 766.004 656.498 774.432 cv
654.548 779.959 651.107 780.665 649.484 780.665 cv
cp
f
661.735 775.13 mo
661.249 775.13 660.807 775.066 660.417 774.97 cv
656.123 773.921 654.126 768.039 653.771 766.872 cv
653.329 765.424 654.144 763.897 655.587 763.453 cv
657.042 763.014 658.569 763.824 659.015 765.265 cv
659.644 767.296 660.983 769.465 661.717 769.643 cv
661.762 769.654 662.125 769.572 662.789 768.894 cv
663.98 766.263 661.851 748.309 660.209 745.526 cv
656.384 739.807 646.287 731.557 639.499 729.913 cv
638.026 729.558 637.122 728.074 637.479 726.603 cv
637.836 725.13 639.333 724.227 640.789 724.583 cv
648.994 726.57 660.22 735.679 664.779 742.496 cv
666.785 745.495 670.683 768.668 666.707 772.731 cv
664.877 774.599 663.13 775.13 661.735 775.13 cv
cp
f
671.5 746.749 mo
670.266 746.749 669.146 745.912 668.84 744.66 cv
668.479 743.189 669.378 741.704 670.848 741.344 cv
682.28 738.539 693.799 735.904 705.081 733.514 cv
706.583 733.213 708.02 734.146 708.332 735.627 cv
708.647 737.109 707.701 738.564 706.219 738.878 cv
694.99 741.257 683.532 743.879 672.156 746.668 cv
671.938 746.724 671.716 746.749 671.5 746.749 cv
cp
f
560.117 1120.71 mo
559.575 1120.71 559.04 1120.55 558.582 1120.24 cv
557.939 1119.81 557.511 1119.12 557.402 1118.35 cv
517.37 833.672 li
517.16 832.173 518.204 830.787 519.704 830.575 cv
521.192 830.379 522.591 831.41 522.801 832.909 cv
562.411 1114.58 li
585.449 1108.99 738.477 1072.46 867.45 1056.38 cv
993.598 1040.66 1103.84 1046.89 1124.39 1048.27 cv
1077.24 716.651 li
1058.42 715.85 925.724 710.92 795.995 724.425 cv
773.396 726.782 749.391 730.39 724.64 735.154 cv
723.145 735.438 721.712 734.464 721.429 732.979 cv
721.143 731.492 722.116 730.055 723.604 729.768 cv
748.507 724.977 772.674 721.344 795.428 718.972 cv
935.183 704.425 1078.34 711.202 1079.77 711.275 cv
1081.08 711.34 1082.17 712.326 1082.35 713.627 cv
1130.29 1050.87 li
1130.41 1051.69 1130.15 1052.52 1129.58 1053.13 cv
1129 1053.74 1128.18 1054.08 1127.36 1053.98 cv
1126.17 1053.89 1006.81 1044.54 868.128 1061.82 cv
729.299 1079.12 562.445 1120.22 560.775 1120.63 cv
560.559 1120.68 560.338 1120.71 560.117 1120.71 cv
cp
f
725.235 721.591 mo
725.235 721.591 725.238 721.591 725.24 721.591 cv
725.238 721.591 725.235 721.591 725.235 721.591 cv
cp
731.372 730.227 mo
730.439 730.227 729.531 729.752 729.018 728.895 cv
728.788 728.511 728.462 727.882 728.071 727.125 cv
727.456 725.932 725.644 722.413 724.657 721.529 cv
723.423 721.261 722.498 720.163 722.498 718.849 cv
722.498 717.334 723.725 716.106 725.24 716.106 cv
728.326 716.106 730.381 719.632 732.945 724.613 cv
733.269 725.24 733.532 725.76 733.722 726.074 cv
734.5 727.375 734.079 729.058 732.78 729.836 cv
732.338 730.102 731.852 730.227 731.372 730.227 cv
cp
f
504.767 1580.32 mo
493.683 1580.32 483.503 1579.39 478.221 1577.81 cv
471.989 1575.95 464.654 1572.21 458.761 1569.2 cv
456.422 1568.01 454.36 1566.96 452.783 1566.24 cv
447.537 1563.86 440.371 1563.34 434.047 1562.88 cv
425.046 1562.23 417.271 1561.67 415.651 1555.81 cv
413.621 1548.47 414.676 1534.02 415.792 1518.72 cv
416.521 1508.71 417.276 1498.37 417.088 1490.4 cv
417.053 1488.89 418.251 1487.64 419.764 1487.6 cv
421.272 1487.52 422.533 1488.76 422.569 1490.28 cv
422.763 1498.5 422 1508.98 421.261 1519.11 cv
420.228 1533.28 419.159 1547.92 420.936 1554.34 cv
421.527 1556.48 428.689 1557 434.444 1557.42 cv
441.226 1557.91 448.911 1558.46 455.045 1561.24 cv
456.681 1561.99 458.823 1563.08 461.253 1564.32 cv
466.948 1567.22 474.035 1570.84 479.788 1572.56 cv
490.405 1575.73 523.868 1576.04 539.394 1570.77 cv
539.762 1570.65 540.885 1570.27 541.175 1568.46 cv
541.579 1565.95 540.059 1561.78 535.766 1558.53 cv
531.756 1555.5 525.778 1552.74 519.447 1549.81 cv
510.7 1545.77 500.783 1541.19 492.919 1534.52 cv
480.718 1524.17 467.133 1512.65 461.331 1491.78 cv
460.925 1490.32 461.78 1488.81 463.239 1488.41 cv
464.696 1488.01 466.209 1488.86 466.615 1490.31 cv
471.964 1509.55 484.313 1520.03 496.253 1530.16 cv
503.762 1536.53 513.317 1540.94 521.748 1544.83 cv
528.353 1547.89 534.592 1550.77 539.073 1554.16 cv
544.468 1558.24 547.418 1564.19 546.588 1569.33 cv
546.07 1572.55 544.089 1574.97 541.157 1575.97 cv
532.135 1579.03 517.822 1580.32 504.767 1580.32 cv
cp
f
507.681 1588.67 mo
495.515 1588.67 484.246 1587.58 478.919 1585.99 cv
472.674 1584.13 465.328 1580.38 459.426 1577.36 cv
457.101 1576.17 455.05 1575.12 453.483 1574.41 cv
448.215 1572.03 440.554 1571.55 433.797 1571.14 cv
424.249 1570.55 416.004 1570.04 414.384 1564.19 cv
412.806 1558.49 414.145 1546.91 414.304 1545.61 cv
414.486 1544.1 415.906 1543.06 417.356 1543.21 cv
418.858 1543.4 419.929 1544.76 419.748 1546.27 cv
419.355 1549.51 418.577 1558.78 419.668 1562.72 cv
420.246 1564.81 428.605 1565.32 434.134 1565.66 cv
441.364 1566.11 449.558 1566.61 455.746 1569.42 cv
457.375 1570.16 459.504 1571.24 461.918 1572.48 cv
467.624 1575.39 474.722 1579.02 480.486 1580.73 cv
490.512 1583.73 526.936 1584.76 542.259 1578.83 cv
543.772 1578.24 544.2 1577.41 544.39 1576.83 cv
545.345 1573.93 542.808 1568.93 541.844 1567.42 cv
541.034 1566.14 541.411 1564.44 542.688 1563.63 cv
543.962 1562.82 545.655 1563.19 546.47 1564.47 cv
546.992 1565.29 551.528 1572.65 549.603 1578.53 cv
548.786 1581.03 546.932 1582.9 544.241 1583.94 cv
535.417 1587.36 521.011 1588.67 507.681 1588.67 cv
cp
f
231.06 1593.78 mo
218.534 1593.78 205.585 1592.63 200.089 1591.55 cv
186.536 1588.86 174.385 1581.55 164.948 1570.42 cv
160.677 1565.39 154.818 1561.06 149.649 1557.24 cv
143.085 1552.39 138.341 1548.89 137.573 1544.83 cv
135.321 1532.94 155.485 1482.09 157.79 1476.33 cv
158.354 1474.92 159.952 1474.25 161.356 1474.81 cv
162.762 1475.37 163.444 1476.96 162.882 1478.37 cv
154.063 1500.39 141.48 1535.98 142.96 1543.81 cv
143.33 1545.75 148.418 1549.52 152.908 1552.83 cv
158.316 1556.83 164.449 1561.36 169.13 1566.88 cv
177.757 1577.05 188.832 1583.72 201.154 1586.17 cv
213.449 1588.6 246.932 1589.8 255.226 1585.41 cv
256.672 1584.65 256.911 1583.77 256.953 1583.01 cv
257.152 1579.46 252.396 1572.47 242.924 1566.02 cv
227.101 1555.23 216.919 1547.35 208.435 1536.61 cv
189.985 1513.24 195.182 1492.22 196.548 1490.23 cv
197.227 1489.24 198.489 1488.79 199.634 1489.16 cv
200.781 1489.51 201.569 1490.59 201.569 1491.79 cv
201.569 1492.25 201.453 1492.69 201.25 1493.07 cv
200.721 1494.83 196.168 1512.22 212.739 1533.21 cv
220.784 1543.4 230.64 1551.01 246.012 1561.49 cv
253.849 1566.83 262.851 1575.75 262.427 1583.32 cv
262.262 1586.3 260.615 1588.76 257.792 1590.26 cv
252.823 1592.89 242.107 1593.78 231.06 1593.78 cv
cp
f
230.905 1603.41 mo
218.11 1603.41 205.17 1601.97 198.849 1600.71 cv
185.295 1598.03 173.143 1590.72 163.708 1579.59 cv
159.358 1574.46 153.073 1570.12 147.527 1566.29 cv
140.777 1561.62 135.899 1558.25 135.134 1554.2 cv
134.438 1550.52 137.075 1539.84 137.899 1536.65 cv
138.28 1535.18 139.775 1534.3 141.242 1534.68 cv
142.708 1535.06 143.589 1536.56 143.21 1538.02 cv
141.666 1543.99 140.199 1551.47 140.521 1553.18 cv
140.869 1555.02 146.289 1558.76 150.645 1561.78 cv
156.471 1565.8 163.072 1570.37 167.89 1576.05 cv
176.516 1586.22 187.589 1592.89 199.915 1595.33 cv
212.621 1597.85 244.002 1599.86 256.19 1594.55 cv
257.361 1594.04 258.091 1593.3 258.484 1592.22 cv
259.588 1589.2 257.83 1584.48 257.058 1582.92 cv
256.389 1581.56 256.944 1579.91 258.299 1579.24 cv
259.665 1578.57 261.295 1579.13 261.97 1580.47 cv
262.362 1581.26 265.736 1588.33 263.641 1594.09 cv
262.737 1596.57 260.918 1598.47 258.381 1599.58 cv
251.828 1602.44 241.416 1603.41 230.905 1603.41 cv
cp
f
171.098 1504.12 mo
165.89 1504.12 160.2 1501.31 153.887 1490.5 cv
153.124 1489.19 153.563 1487.51 154.871 1486.75 cv
156.177 1485.99 157.857 1486.42 158.622 1487.73 cv
166.294 1500.86 170.889 1499.38 177.844 1497.13 cv
183.019 1495.46 189.45 1493.38 197.527 1497.46 cv
198.88 1498.15 199.42 1499.8 198.735 1501.15 cv
198.052 1502.5 196.407 1503.04 195.051 1502.36 cv
188.992 1499.29 184.393 1500.78 179.531 1502.35 cv
176.857 1503.21 174.057 1504.12 171.098 1504.12 cv
cp
f
433.534 1507.12 mo
429.33 1507.12 424.563 1506.14 419.108 1503.5 cv
417.745 1502.85 417.171 1501.21 417.829 1499.84 cv
418.487 1498.48 420.127 1497.9 421.491 1498.57 cv
434.119 1504.65 441.873 1500.4 448.715 1496.65 cv
454.637 1493.4 460.762 1490.04 467.548 1496.05 cv
468.682 1497.06 468.787 1498.79 467.78 1499.93 cv
466.776 1501.07 465.042 1501.16 463.911 1500.16 cv
460.175 1496.84 457.361 1498.16 451.352 1501.46 cv
446.738 1503.99 441.029 1507.12 433.534 1507.12 cv
cp
f
397.257 781.269 mo
395.783 781.269 394.566 780.098 394.52 778.611 cv
393.881 758.225 398.585 743.228 401.698 733.302 cv
402.921 729.401 404.309 724.981 403.938 723.885 cv
385.116 712.027 358.896 687.731 364.913 670.686 cv
378.112 633.286 420.081 570.585 421.861 567.934 cv
422.705 566.678 424.417 566.345 425.666 567.187 cv
426.922 568.03 427.257 569.735 426.414 570.991 cv
425.98 571.634 383.052 635.768 370.085 672.511 cv
365.915 684.324 386.083 706.139 407.158 719.574 cv
410.985 722.018 409.459 726.882 406.931 734.944 cv
403.93 744.515 399.391 758.981 400 778.442 cv
400.047 779.955 398.86 781.22 397.345 781.267 cv
397.315 781.269 397.287 781.269 397.257 781.269 cv
cp
f
387.348 1064.3 mo
387.256 1064.3 387.163 1064.29 387.069 1064.28 cv
385.563 1064.13 384.465 1062.79 384.616 1061.28 cv
385.409 1053.5 385.257 1048.44 385.146 1044.76 cv
385.045 1041.37 384.978 1039.13 385.734 1037.03 cv
386.301 1035.46 387.18 1034.1 388.111 1032.65 cv
391.304 1027.68 396.133 1020.18 394.133 994.033 cv
391.293 956.938 390.945 912.347 393.098 861.494 cv
393.163 859.981 394.459 858.854 395.954 858.87 cv
397.467 858.935 398.641 860.213 398.579 861.726 cv
396.434 912.362 396.778 956.732 399.601 993.613 cv
401.74 1021.59 396.313 1030.03 392.723 1035.61 cv
391.9 1036.89 391.248 1037.91 390.894 1038.89 cv
390.49 1040.01 390.545 1041.83 390.628 1044.59 cv
390.737 1048.22 390.9 1053.69 390.075 1061.83 cv
389.93 1063.25 388.738 1064.3 387.348 1064.3 cv
cp
f
407.442 725.108 mo
407.341 722.368 li
409.878 721.324 li
407.341 722.366 li
406.534 719.748 li
413.342 717.535 448.489 703.167 451.181 688.289 cv
455.438 664.741 453.013 634.252 449.319 613.572 cv
449.054 612.081 450.047 610.657 451.538 610.39 cv
453.042 610.133 454.454 611.119 454.72 612.607 cv
458.495 633.757 460.965 665.002 456.576 689.267 cv
452.892 709.64 407.87 725.092 407.442 725.108 cv
cp
f
377.949 729.747 mo
377.927 729.747 377.904 729.747 377.884 729.745 cv
352.919 729.171 312.755 714.096 303.211 697.972 cv
301.555 695.175 299.502 692.386 297.331 689.43 cv
288.749 677.757 278.069 663.23 284.795 636.906 cv
289.12 619.982 308.707 568.985 333.55 554.382 cv
360.273 538.691 410.512 551.97 440.688 574.213 cv
446.032 578.152 450.013 591.154 452.412 601.366 cv
452.758 602.84 451.845 604.315 450.371 604.662 cv
448.882 605.009 447.423 604.092 447.075 602.62 cv
443.538 587.562 439.775 580.354 437.435 578.627 cv
409.258 557.857 360.812 544.74 336.328 559.109 cv
312.989 572.83 294.283 621.931 290.11 638.263 cv
284.025 662.074 293.442 674.883 301.75 686.183 cv
304.005 689.251 306.137 692.147 307.928 695.178 cv
315.633 708.191 352.966 723.687 378.009 724.265 cv
379.524 724.298 380.723 725.554 380.687 727.067 cv
380.653 728.56 379.433 729.747 377.949 729.747 cv
cp
f
422.743 700.714 mo
412.628 700.714 397.664 696.432 389.26 691.467 cv
385.873 689.463 382.032 687.06 379.303 683.862 cv
375.166 679.022 373.084 673.665 373 673.439 cv
372.457 672.026 373.162 670.444 374.575 669.9 cv
375.987 669.362 377.572 670.061 378.118 671.473 cv
378.136 671.52 379.968 676.204 383.472 680.301 cv
385.656 682.858 388.907 684.886 392.052 686.745 cv
405.587 694.75 425.642 696.648 428.041 694.488 cv
429.125 692.699 429.002 691.259 428.817 689.082 cv
428.716 687.899 428.621 686.671 428.696 685.333 cv
428.868 682.287 431.334 680.872 432.65 680.169 cv
432.635 680.064 432.612 679.979 432.59 679.933 cv
431.325 679.1 431.12 677.552 431.952 676.286 cv
432.782 675.023 434.63 674.818 435.897 675.65 cv
437.981 677.016 438.39 679.763 438.08 681.878 cv
437.823 683.632 436.344 684.417 435.364 684.938 cv
434.987 685.136 434.284 685.511 434.141 685.728 cv
434.112 686.705 434.201 687.678 434.282 688.617 cv
434.498 691.157 434.744 694.033 432.635 697.463 cv
431.227 699.757 427.527 700.714 422.743 700.714 cv
cp
f
440.624 657.863 mo
440.624 657.863 li
440.624 657.863 li
cp
438.863 659.446 mo
438.834 659.452 438.805 659.459 438.776 659.466 cv
438.805 659.459 438.834 659.452 438.863 659.446 cv
cp
434.036 680.812 mo
433.989 680.812 433.945 680.81 433.898 680.807 cv
427.797 680.504 423.787 679.623 418.795 675.644 cv
415.078 672.683 411.862 666.439 411.508 665.738 cv
411.008 664.748 411.155 663.554 411.878 662.712 cv
412.603 661.869 413.766 661.545 414.817 661.898 cv
414.891 661.922 422.131 664.308 426.541 664.812 cv
430.993 665.321 435.221 665.352 436.038 665.196 cv
437.145 664.828 437.446 664.145 437.457 663.984 cv
436.915 663.159 436.399 662.485 435.917 661.367 cv
434.587 658.27 435.279 656.346 435.636 655.663 cv
436.022 654.931 436.857 654.257 437.667 654.095 cv
441.085 653.365 442.866 650.444 442.828 649.609 cv
442.741 649.127 441.929 648.315 440.804 647.19 cv
439.275 645.664 437.185 643.576 434.661 640.079 cv
433.775 638.852 434.05 637.138 435.279 636.252 cv
436.502 635.364 438.22 635.641 439.106 636.87 cv
441.373 640.007 443.208 641.839 444.68 643.313 cv
446.445 645.075 447.84 646.47 448.232 648.688 cv
448.842 652.142 445.798 656.891 440.817 658.85 cv
440.855 658.957 440.902 659.075 440.956 659.2 cv
441.168 659.695 441.364 659.952 441.614 660.278 cv
442.143 660.972 442.871 661.922 442.938 663.804 cv
443.024 666.218 441.404 669.21 437.591 670.451 cv
435.634 671.094 428.882 670.601 425.918 670.261 cv
424.155 670.059 422.076 669.619 420.107 669.128 cv
420.797 670.009 421.518 670.799 422.214 671.355 cv
426.11 674.459 428.928 675.07 434.17 675.331 cv
435.683 675.407 436.848 676.692 436.772 678.206 cv
436.701 679.671 435.489 680.812 434.036 680.812 cv
cp
f
428.415 631.253 mo
428.611 627.991 427.23 625.249 425.329 625.126 cv
423.43 625.003 421.73 627.547 421.531 630.812 cv
421.335 634.074 422.716 636.821 424.617 636.939 cv
426.519 637.062 428.219 634.516 428.415 631.253 cv
cp
ef
396.785 715.417 mo
396.644 715.417 396.501 715.406 396.356 715.383 cv
394.865 715.147 393.843 713.754 394.071 712.262 cv
394.113 711.994 395.153 705.534 401.073 693.895 cv
401.758 692.549 403.407 692.004 404.76 692.694 cv
406.11 693.379 406.647 695.03 405.96 696.38 cv
400.5 707.118 399.5 713.047 399.491 713.105 cv
399.272 714.453 398.108 715.417 396.785 715.417 cv
cp
f
432.137 680.546 mo
430.622 680.546 429.395 679.319 429.395 677.804 cv
429.395 674.633 429.772 671.587 430.544 668.49 cv
430.91 667.021 432.407 666.135 433.869 666.495 cv
435.337 666.861 436.232 668.349 435.864 669.82 cv
435.201 672.475 434.88 675.086 434.88 677.804 cv
434.88 679.319 433.652 680.546 432.137 680.546 cv
cp
f
435.763 614.944 mo
414.402 614.944 399.768 612.155 398.976 612 cv
397.49 611.71 396.519 610.271 396.809 608.785 cv
397.097 607.297 398.532 606.317 400.024 606.618 cv
400.27 606.663 425.048 611.378 456.712 608.531 cv
458.323 608.386 459.653 608.234 460.749 608.084 cv
456.547 606.933 449.824 605.541 441.212 604.255 cv
440.318 604.126 438.798 604.173 436.493 604.247 cv
431.53 604.402 422.292 604.695 404.527 603.608 cv
403.015 603.517 401.865 602.216 401.957 600.705 cv
402.048 599.192 403.325 597.985 404.862 598.137 cv
422.379 599.21 431.445 598.917 436.319 598.764 cv
439.012 598.679 440.635 598.627 442.018 598.831 cv
470.636 603.097 470.542 606.292 470.476 608.625 cv
470.373 612.161 465.926 613.208 457.203 613.993 cv
449.558 614.681 442.342 614.944 435.763 614.944 cv
cp
f
441.699 602.314 mo
440.291 602.314 439.095 601.236 438.97 599.81 cv
437.932 587.892 432.032 578.406 422.783 573.785 cv
421.429 573.109 420.877 571.462 421.556 570.107 cv
422.232 568.753 423.881 568.208 425.233 568.88 cv
436.228 574.374 443.225 585.473 444.433 599.333 cv
444.564 600.841 443.448 602.171 441.94 602.303 cv
441.857 602.31 441.777 602.314 441.699 602.314 cv
cp
f
413.184 653.785 mo
410.365 653.785 407.252 653.211 403.782 651.843 cv
398.744 649.864 385.924 639.153 384.478 637.939 cv
383.32 636.964 383.17 635.234 384.144 634.074 cv
385.114 632.916 386.841 632.769 388.008 633.739 cv
393.203 638.106 402.624 645.495 405.791 646.74 cv
417.173 651.231 423.25 645.057 429.118 639.088 cv
430.207 637.981 431.334 637.102 432.45 636.243 cv
433.331 635.564 434.177 634.916 434.933 634.166 cv
434.837 633.882 434.719 633.55 434.612 633.255 cv
433.38 629.856 431.091 623.528 433.637 613.346 cv
434.007 611.878 435.509 610.997 436.961 611.351 cv
438.432 611.719 439.325 613.208 438.957 614.676 cv
436.816 623.236 438.664 628.339 439.769 631.39 cv
440.472 633.331 441.199 635.339 439.74 637.044 cv
438.461 638.537 437.106 639.581 435.797 640.59 cv
434.873 641.299 433.931 642.016 433.027 642.933 cv
428.353 647.688 422.353 653.785 413.184 653.785 cv
cp
f
624.99 1050.38 mo
623.803 1050.38 622.709 1049.6 622.359 1048.4 cv
621.935 1046.95 622.772 1045.43 624.225 1045 cv
625.947 1044.5 798.752 994.952 1032.55 994.952 cv
1033.09 994.952 1033.62 994.952 1034.17 994.957 cv
1035.68 994.957 1036.91 996.184 1036.91 997.702 cv
1036.9 999.214 1035.68 1000.44 1034.16 1000.44 cv
1034.16 1000.44 li
1033.63 1000.44 1033.07 1000.44 1032.55 1000.44 cv
799.561 1000.44 627.474 1049.77 625.76 1050.27 cv
625.503 1050.35 625.244 1050.38 624.99 1050.38 cv
cp
f
618.443 1011.24 mo
617.256 1011.24 616.162 1010.46 615.812 1009.26 cv
615.388 1007.81 616.225 1006.28 617.677 1005.86 cv
619.4 1005.36 792.197 955.808 1025.96 955.808 cv
1026.52 955.808 1027.06 955.808 1027.62 955.813 cv
1029.13 955.813 1030.36 957.04 1030.36 958.558 cv
1030.35 960.07 1029.13 961.293 1027.61 961.293 cv
1027.61 961.293 li
1027.07 961.293 1026.51 961.293 1025.96 961.293 cv
793.004 961.293 620.926 1010.63 619.213 1011.13 cv
618.956 1011.2 618.697 1011.24 618.443 1011.24 cv
cp
f
611.92 970.295 mo
610.733 970.295 609.64 969.514 609.29 968.318 cv
608.866 966.863 609.702 965.341 611.155 964.917 cv
612.877 964.417 785.688 914.868 1019.48 914.868 cv
1020.02 914.868 1020.55 914.868 1021.1 914.868 cv
1022.61 914.87 1023.84 916.1 1023.84 917.613 cv
1023.83 919.124 1022.61 920.351 1021.09 920.351 cv
1021.09 920.351 li
1020.56 920.351 1020 920.351 1019.48 920.351 cv
786.495 920.351 614.404 969.684 612.69 970.183 cv
612.434 970.259 612.175 970.295 611.92 970.295 cv
cp
f
604.934 930.691 mo
603.747 930.691 602.653 929.91 602.303 928.714 cv
601.879 927.259 602.716 925.737 604.168 925.313 cv
605.891 924.813 778.696 875.269 1012.49 875.269 cv
1013.03 875.269 1013.56 875.269 1014.11 875.269 cv
1015.62 875.271 1016.85 876.5 1016.85 878.014 cv
1016.85 879.526 1015.62 880.754 1014.1 880.754 cv
1014.1 880.754 li
1013.57 880.754 1013.01 880.751 1012.49 880.751 cv
779.502 880.751 607.417 930.08 605.704 930.58 cv
605.447 930.655 605.188 930.691 604.934 930.691 cv
cp
f
651.361 814.834 mo
650.042 815.042 648.735 815.33 647.44 815.689 cv
646.144 816.051 644.854 816.452 643.576 816.892 cv
651.613 868.126 li
653.825 867.542 656.17 866.892 658.647 866.189 cv
661.119 865.479 663.509 864.629 665.821 863.629 cv
668.13 862.632 670.255 861.463 672.192 860.124 cv
674.126 858.785 675.675 857.232 676.826 855.458 cv
678.881 852.354 680.285 848.991 681.03 845.376 cv
681.776 841.757 681.867 838.164 681.31 834.596 cv
680.821 831.488 679.788 828.591 678.21 825.896 cv
676.634 823.198 674.568 820.917 672.009 819.054 cv
669.449 817.188 666.435 815.85 662.969 815.042 cv
659.501 814.236 655.63 814.163 651.361 814.834 cv
cp
649.324 878.627 mo
648.137 878.656 647.112 878.478 646.258 878.094 cv
645.403 877.71 644.727 877.201 644.229 876.563 cv
643.768 875.918 li
643.551 875.557 643.333 875.173 643.109 874.771 cv
642.888 874.37 642.748 873.972 642.688 873.582 cv
634.48 821.301 li
633.817 821.645 633.293 821.946 632.896 822.207 cv
632.497 822.468 631.912 822.66 631.135 822.783 cv
629.66 823.015 628.411 822.774 627.384 822.06 cv
626.355 821.344 625.751 820.406 625.57 819.242 cv
625.3 817.532 626.059 815.906 627.844 814.35 cv
629.627 812.797 631.816 811.402 634.402 810.16 cv
636.995 808.917 639.751 807.87 642.679 807.011 cv
645.608 806.156 648.041 805.572 649.982 805.271 cv
655.648 804.38 660.84 804.521 665.558 805.69 cv
670.272 806.857 674.39 808.776 677.913 811.445 cv
681.432 814.114 684.322 817.418 686.569 821.361 cv
688.818 825.305 690.302 829.564 691.021 834.143 cv
691.752 838.8 691.61 843.493 690.605 848.228 cv
689.599 852.959 687.611 857.268 684.641 861.153 cv
682.599 863.857 680.189 866.129 677.416 867.952 cv
674.642 869.782 671.685 871.357 668.555 872.687 cv
665.419 874.013 662.215 875.133 658.939 876.041 cv
655.664 876.956 652.459 877.815 649.324 878.627 cv
cp
ef
753.47 792.868 mo
751.856 797.588 750.426 802.363 749.179 807.199 cv
747.936 812.03 746.829 816.883 745.87 821.759 cv
771.324 818.273 li
770.014 816.064 768.688 813.899 767.35 811.773 cv
766.006 809.644 764.647 807.524 763.268 805.402 cv
761.733 803.3 760.193 801.158 758.647 798.982 cv
757.103 796.802 755.375 794.765 753.47 792.868 cv
cp
792.913 844.988 mo
793.022 846.479 792.79 847.735 792.21 848.759 cv
791.625 849.788 790.838 850.459 789.852 850.783 cv
788.865 851.106 787.828 851.062 786.743 850.647 cv
785.661 850.229 784.688 849.404 783.815 848.17 cv
782.878 844.564 781.758 841.045 780.446 837.609 cv
779.141 834.172 777.672 830.771 776.059 827.413 cv
745.106 831.604 li
744.946 831.622 744.774 831.626 744.571 831.608 cv
744.37 831.593 744.191 831.597 744.038 831.617 cv
742.935 838.495 742.054 845.573 741.4 852.867 cv
740.989 854.581 740.23 855.788 739.128 856.482 cv
738.033 857.176 736.935 857.438 735.844 857.259 cv
734.75 857.08 733.804 856.491 733.001 855.48 cv
732.202 854.476 731.845 853.095 731.941 851.341 cv
733.07 839.711 734.755 828.268 737.004 817.01 cv
739.253 805.75 742.446 794.631 746.593 783.646 cv
746.872 782.106 747.84 781.03 749.507 780.423 cv
750.321 780.004 751.133 779.839 751.939 779.935 cv
752.742 780.031 753.452 780.314 754.068 780.79 cv
754.146 780.78 754.186 780.794 754.193 780.834 cv
754.197 780.876 754.237 780.89 754.315 780.881 cv
758.868 784.257 762.82 788.229 766.173 792.79 cv
769.53 797.355 772.658 802.026 775.565 806.801 cv
776.652 808.484 777.681 810.173 778.649 811.874 cv
779.62 813.574 780.571 815.274 781.497 816.975 cv
787.68 816.068 li
789.22 816.348 790.4 816.91 791.222 817.755 cv
792.041 818.601 792.498 819.516 792.581 820.494 cv
792.667 821.471 792.379 822.457 791.712 823.455 cv
791.045 824.45 789.994 825.2 788.553 825.699 cv
786.096 826.014 li
787.517 829.08 788.805 832.184 789.956 835.324 cv
791.112 838.463 792.096 841.683 792.913 844.988 cv
cp
ef
871.288 766.865 mo
872.743 767.188 873.872 767.787 874.667 768.655 cv
875.465 769.519 875.878 770.464 875.9 771.489 cv
875.932 772.596 875.599 773.595 874.903 774.497 cv
874.205 775.392 873.089 776.077 871.554 776.547 cv
853.273 778.518 li
859.173 835.73 li
859.274 837.535 858.886 838.938 858 839.934 cv
857.111 840.936 856.085 841.491 854.909 841.612 cv
853.818 841.721 852.758 841.411 851.738 840.688 cv
850.714 839.96 850.002 838.751 849.592 837.055 cv
843.658 779.486 li
825.133 781.361 li
823.455 781.213 822.161 780.693 821.243 779.796 cv
820.319 778.901 819.844 777.906 819.813 776.804 cv
819.771 775.622 820.154 774.519 820.96 773.486 cv
821.763 772.457 823.066 771.854 824.863 771.672 cv
825.8 771.576 827.462 771.411 829.848 771.169 cv
832.229 770.926 834.984 770.647 838.115 770.333 cv
841.242 770.018 844.564 769.684 848.083 769.327 cv
851.598 768.972 854.918 768.632 858.049 768.318 cv
861.175 768.003 863.931 767.704 866.307 767.425 cv
868.688 767.144 870.349 766.957 871.288 766.865 cv
cp
ef
933.186 771.411 mo
931.207 775.994 929.41 780.642 927.792 785.364 cv
926.175 790.083 924.698 794.841 923.359 799.627 cv
949.011 798.128 li
947.874 795.825 946.722 793.562 945.55 791.337 cv
944.376 789.11 943.189 786.89 941.978 784.67 cv
940.612 782.452 939.24 780.2 937.87 777.911 cv
936.498 775.615 934.936 773.45 933.186 771.411 cv
cp
968.456 826.438 mo
968.452 827.933 968.117 829.171 967.461 830.145 cv
966.798 831.124 965.966 831.735 964.955 831.983 cv
963.942 832.224 962.913 832.102 961.867 831.604 cv
960.82 831.1 959.91 830.205 959.138 828.901 cv
958.484 825.237 957.638 821.641 956.601 818.112 cv
955.565 814.584 954.367 811.083 953.019 807.611 cv
921.833 809.378 li
921.678 809.383 921.5 809.374 921.299 809.348 cv
921.103 809.314 920.924 809.305 920.768 809.31 cv
919.132 816.078 917.707 823.071 916.486 830.292 cv
915.941 831.968 915.093 833.11 913.94 833.719 cv
912.793 834.326 911.679 834.5 910.604 834.239 cv
909.53 833.974 908.631 833.311 907.913 832.247 cv
907.189 831.182 906.944 829.774 907.172 828.034 cv
909.203 816.526 911.775 805.248 914.891 794.203 cv
918.008 783.152 922.058 772.312 927.043 761.682 cv
927.44 760.168 928.491 759.173 930.196 758.698 cv
931.046 758.341 931.87 758.241 932.659 758.397 cv
933.454 758.555 934.141 758.895 934.717 759.419 cv
934.797 759.415 934.835 759.435 934.839 759.47 cv
934.839 759.51 934.88 759.53 934.958 759.524 cv
939.231 763.25 942.864 767.512 945.854 772.326 cv
948.846 777.132 951.602 782.032 954.13 787.022 cv
955.081 788.782 955.976 790.55 956.808 792.319 cv
957.643 794.086 958.457 795.856 959.251 797.625 cv
965.486 797.199 li
966.999 797.597 968.133 798.25 968.885 799.161 cv
969.639 800.064 970.018 801.011 970.027 801.995 cv
970.038 802.977 969.672 803.94 968.932 804.878 cv
968.191 805.819 967.086 806.487 965.609 806.871 cv
963.136 806.993 li
964.314 810.16 965.357 813.355 966.263 816.577 cv
967.167 819.793 967.898 823.084 968.456 826.438 cv
cp
ef
2065.47 820.987 mo
2071.54 812.554 li
2079.02 808.703 li
2575.99 832.731 li
2595.18 875.795 li
2582.81 1144.55 li
2577.04 1151.54 li
2569.86 1153.93 li
2065.02 1132.48 li
2057.31 1128.07 li
2051.99 1120.03 li
2065.47 820.987 li
cp
.937255 .466667 .286275 rgb
ef
2121.38 883.271 mo
2237.65 887.609 li
2234.56 958.821 li
2118.41 953.979 li
2121.38 883.271 li
cp
.678431 .741176 .858824 rgb
ef
2185.61 773.285 mo
2202.18 762.3 2255.08 745.992 2301.16 737.557 cv
2337.74 730.856 2371.07 730.725 2371.07 730.725 cv
2371.07 730.725 2365.98 719.016 2370.78 702.102 cv
2377.09 679.836 2395.55 649.105 2415.72 629.7 cv
2422.24 623.421 2438.61 617.064 2448.56 614.063 cv
2469.58 607.718 2486.79 610.474 2496.49 619.284 cv
2502.85 625.066 2521.95 637.542 2526.09 651.221 cv
2532.66 673.02 2534.83 708.25 2533.52 736.799 cv
2533.16 744.609 2532.04 762.244 2525.87 771.248 cv
2521.69 777.339 2509.9 776.813 2509.9 776.813 cv
2509.9 776.813 2525.44 788.26 2529.92 801.555 cv
2534.4 814.854 2529.53 830.004 2529.53 830.004 cv
2252.4 816.923 li
2222.66 819.849 li
2222.66 819.849 2217.96 851.118 2209.96 885.834 cv
2206.31 901.646 2204.88 930.696 2197.79 936.328 cv
2189.75 942.723 2160.87 937.198 2157.29 930.5 cv
2153.8 923.988 2156.01 860.481 2162.98 820.772 cv
2168.69 788.216 2178.17 778.212 2185.61 773.285 cv
cp
.266667 .352941 .435294 rgb
ef
2236.44 1139.65 mo
2461.98 1148.4 li
2461.98 1148.4 2483.77 1221.84 2489.02 1284.3 cv
2489.88 1294.52 2487.84 1304.9 2485.62 1321.23 cv
2482.92 1341.03 2479.7 1367.41 2477.92 1385.13 cv
2474.56 1418.87 2474.58 1446.95 2475.16 1461.83 cv
2475.88 1480.28 2477.47 1482.26 2474.51 1494.86 cv
2472.4 1503.85 2455.99 1505.31 2452.71 1505.88 cv
2442.51 1507.67 2422.84 1505.77 2419.16 1499.8 cv
2413.58 1490.75 2414.96 1479.5 2412.41 1461.94 cv
2408.94 1438.08 2402.52 1404.96 2401.6 1371.91 cv
2400.88 1345.84 2404.64 1316.66 2400.35 1290.11 cv
2396.22 1264.6 2385.18 1242.8 2375.32 1221.17 cv
2361.96 1191.89 2349.69 1166.55 2349.69 1166.55 cv
2349.69 1166.55 2341.37 1210.9 2333.58 1246.95 cv
2326.57 1279.39 2320.8 1303.31 2308.2 1313.09 cv
2300.04 1319.42 2277.54 1322.4 2248.19 1317.62 cv
2219.21 1312.91 2183.54 1300.52 2151.72 1294.22 cv
2110.68 1286.08 2069.42 1283.35 2069.42 1283.35 cv
2069.42 1283.35 2061.44 1276.05 2063.65 1256.03 cv
2066.06 1234.04 2074.98 1225.96 2074.98 1225.96 cv
2074.98 1225.96 2130.16 1224.1 2170.9 1225.65 cv
2211.65 1227.2 2237.96 1232.16 2237.96 1232.16 cv
2236.44 1139.65 li
cp
.388235 .54902 .67451 rgb
ef
2409.97 706.897 mo
2409.97 706.897 2403.86 707.252 2401.86 701.272 cv
2399.85 695.29 2401.94 682.963 2401.94 682.963 cv
2459.95 659.785 li
2459.95 659.785 2470.42 654.693 2478.32 663.203 cv
2486.22 671.712 2491.56 693.821 2491.56 693.821 cv
2507.15 706.042 li
2512.16 714.08 li
2501.81 726.273 li
2492.88 730.629 li
2480 750.663 li
2480 750.663 2471.06 769.282 2454.32 775.918 cv
2441.03 781.182 2429.02 772.522 2421.38 762.837 cv
2417.75 758.232 2412.78 742.482 2412.78 742.482 cv
2409.56 730.481 li
2409.97 706.897 li
cp
1 .866667 .752941 rgb
ef
2490.28 709.798 mo
2490.98 717.8 2481.45 726.644 2472.71 724.947 cv
2463.98 723.258 2458.8 711.534 2460.33 705.092 cv
2461.87 698.647 2489.58 701.796 2490.28 709.798 cv
cp
2447.07 701.439 mo
2445.33 707.962 2431.46 714.573 2424.67 710.204 cv
2419.75 707.029 2416.04 697.052 2419.51 689.887 cv
2423.94 680.725 2448.81 694.923 2447.07 701.439 cv
cp
2428.38 677.659 mo
2420.53 675.82 2412.9 679.5 2412.9 679.5 cv
2412.9 679.5 2403.96 704.922 2415.81 712.467 cv
2417.56 713.587 2422.85 718.048 2425.47 718.601 cv
2433.59 720.315 2440.04 712.869 2448.01 710.936 cv
2449.57 710.557 2453 712.518 2455.07 715.533 cv
2458.46 720.487 2461.19 728.129 2468.41 731.327 cv
2476.13 734.75 2492.94 727.65 2492.94 727.65 cv
2492.94 727.65 2499.62 716.705 2501.53 708.79 cv
2502.84 703.327 2502.19 701.591 2494.02 696.673 cv
2487.47 692.734 2471.75 692.757 2459.97 690.235 cv
2447.14 687.484 2437.25 679.731 2428.38 677.659 cv
cp
.164706 .223529 .282353 rgb
ef
2416.86 674.733 mo
2416.86 674.733 2448.63 658.528 2455.47 661.563 cv
2462.32 664.596 2431.07 675.51 2431.07 675.51 cv
2416.86 674.733 li
cp
.8 .537255 .376471 rgb
ef
2484.92 673.443 mo
2484.92 673.443 2493.64 680.189 2496.93 685.194 cv
2500.22 690.197 2502.61 697.077 2502.61 697.077 cv
2490.99 694.234 li
2484.92 673.443 li
cp
ef
2162.36 935.359 mo
2162.36 935.359 2172.53 937.939 2180.4 938.582 cv
2188.26 939.224 2193.82 937.939 2193.82 937.939 cv
2193.82 937.939 2192.98 950.484 2197.16 960.066 cv
2201.69 970.464 2206.82 978.752 2210.47 987.767 cv
2214.12 996.782 2219.51 1003.44 2219.37 1006.88 cv
2219.15 1012.64 2213.98 1009.58 2209.03 1004.48 cv
2202.82 998.085 2197.47 986.687 2191.77 989.909 cv
2188.12 991.976 2187.79 1022.57 2184.75 1032.85 cv
2181.74 1043.06 2175.65 1032.1 2175.65 1032.1 cv
2175.65 1032.1 2173.49 1038.63 2171.16 1038.66 cv
2168.83 1038.69 2166.33 1032.22 2166.33 1032.22 cv
2166.33 1032.22 2164.37 1037.66 2160.96 1034.58 cv
2157.55 1031.49 2152.69 1019.87 2152.69 1019.87 cv
2152.69 1019.87 2146.84 1031.75 2144.58 1026.09 cv
2142.6 1021.1 2141.85 1001.8 2143.25 991.627 cv
2144.98 978.881 2151.56 966.805 2156.45 954.804 cv
2159.91 946.329 2162.36 935.359 2162.36 935.359 cv
cp
.164706 .223529 .282353 rgb
ef
2565.5 833.184 mo
2565.5 833.184 2569 820.511 2571.81 816.818 cv
2576.41 810.769 2582.63 826.023 2582.63 826.023 cv
2582.63 826.023 2593.71 822.535 2596.78 825.255 cv
2599.85 827.973 2594.91 836.899 2594.91 836.899 cv
2594.91 836.899 2602.03 837.801 2602.92 841.708 cv
2603.81 845.611 2598.48 852.519 2598.48 852.519 cv
2603.17 857.816 li
2599.76 865.915 li
2599.76 865.915 2606.62 871.975 2603.15 874.854 cv
2598.73 878.509 2583.24 878.962 2577.09 876.48 cv
2571.93 874.401 2577.54 867.445 2577.54 867.445 cv
2571.96 863.862 li
2576.27 855.806 li
2572.96 851.725 li
2575.13 844.613 li
2575.13 844.613 2570.46 843.348 2570.02 840.514 cv
2569.57 837.676 2573.34 833.266 2573.34 833.266 cv
2565.5 833.184 li
cp
ef
1997.09 1217.69 mo
1999.83 1208.86 2070.49 1230.13 2070.49 1230.13 cv
2070.49 1230.13 2067.18 1241.13 2066.14 1252.9 cv
2065.08 1264.66 2066.28 1277.18 2066.28 1277.18 cv
2066.28 1277.18 2042.05 1279.93 2023.32 1297.51 cv
2009.8 1310.2 2003.14 1326.83 1992.88 1337.54 cv
1984.46 1346.34 1971.65 1351.36 1967.24 1345.2 cv
1960.11 1335.26 1966.62 1296.35 1971.21 1282.67 cv
1977.72 1263.26 1985.65 1267.53 1990.88 1243.93 cv
1992.38 1237.14 1995.54 1222.69 1997.09 1217.69 cv
cp
ef
2425.26 1505.08 mo
2425.26 1505.08 2439.65 1506.77 2450.46 1505.52 cv
2461.26 1504.28 2468.48 1500.1 2468.48 1500.1 cv
2468.48 1500.1 2469.5 1511.71 2492.65 1522.37 cv
2506.66 1528.83 2532.6 1527.31 2547.88 1531.12 cv
2557.83 1533.61 2561.06 1542.73 2561.06 1542.73 cv
2561.06 1542.73 2571.52 1548.88 2557.25 1558.99 cv
2547.53 1565.88 2524.15 1574 2507.02 1576.28 cv
2491.96 1578.28 2481.81 1576.22 2473.17 1575.44 cv
2458.08 1574.08 2435.76 1587.07 2431.56 1580.52 cv
2421.31 1564.56 2425.26 1505.08 2425.26 1505.08 cv
cp
ef
2424.33 762.811 mo
2424.33 762.811 2434.31 770.389 2448.1 768.287 cv
2461.87 766.182 2479.46 754.402 2479.46 754.402 cv
2479.46 754.402 2475.82 765.711 2466.11 771.219 cv
2456.4 776.726 2451.76 779.198 2440.62 776.425 cv
2429.47 773.655 2424.33 762.811 2424.33 762.811 cv
cp
.988235 .717647 .556863 rgb
ef
2444.78 723.171 mo
2444.78 719.57 2448.84 713.056 2451.63 713.056 cv
2454.42 713.056 2455 717.097 2455 720.699 cv
2455 724.293 2452.06 728.897 2449.27 728.897 cv
2446.48 728.897 2444.78 726.766 2444.78 723.171 cv
cp
ef
2250.48 1274.73 mo
2249.6 1274.73 2248.73 1274.3 2248.2 1273.51 cv
2247.75 1272.83 2237.09 1256.67 2236.17 1239.65 cv
2235.99 1236.24 2235.86 1228.32 2235.69 1217.36 cv
2235.37 1196.84 2234.88 1165.83 2233.54 1140.94 cv
2233.46 1139.43 2234.62 1138.14 2236.13 1138.05 cv
2237.47 1138.05 2238.93 1139.13 2239.02 1140.65 cv
2240.36 1165.64 2240.85 1196.71 2241.17 1217.27 cv
2241.34 1227.76 2241.47 1236.05 2241.65 1239.35 cv
2242.49 1254.85 2252.66 1270.32 2252.76 1270.47 cv
2253.6 1271.73 2253.26 1273.43 2252 1274.27 cv
2251.54 1274.58 2251.01 1274.73 2250.48 1274.73 cv
cp
0 0 0 rgb
f
2278.64 1323.09 mo
2269.82 1323.09 2260.67 1321.84 2251.92 1320.64 cv
2227.43 1317.29 2208.67 1311.78 2190.53 1306.45 cv
2179.52 1303.22 2169.13 1300.17 2157.94 1297.74 cv
2134.62 1292.68 2112.08 1290.56 2095.63 1289.01 cv
2084.73 1287.99 2076.12 1287.18 2070.87 1285.89 cv
2060.48 1283.33 2061.14 1262.15 2061.59 1255.71 cv
2062.41 1243.87 2066.5 1223.55 2076.56 1222.52 cv
2085.71 1221.58 2102.09 1221.78 2119.46 1222 cv
2126.83 1222.09 2134.39 1222.19 2141.63 1222.2 cv
2189.03 1222.25 2219.6 1224.5 2237.83 1229.28 cv
2239.29 1229.67 2240.17 1231.16 2239.78 1232.63 cv
2239.4 1234.09 2237.9 1234.97 2236.43 1234.58 cv
2213.09 1228.46 2171.14 1227.71 2141.62 1227.68 cv
2134.36 1227.67 2126.79 1227.58 2119.39 1227.49 cv
2102.2 1227.27 2085.95 1227.07 2077.12 1227.97 cv
2073.26 1228.37 2068.18 1240.01 2067.06 1256.09 cv
2066.02 1270.92 2068.92 1279.76 2072.18 1280.56 cv
2077.03 1281.76 2085.46 1282.55 2096.14 1283.55 cv
2112.73 1285.11 2135.46 1287.25 2159.1 1292.39 cv
2170.48 1294.85 2180.97 1297.93 2192.07 1301.19 cv
2210.02 1306.46 2228.58 1311.91 2252.66 1315.21 cv
2277.71 1318.63 2303.62 1322.17 2316.18 1297.06 cv
2325.18 1279.05 2345.41 1172.48 2348.56 1150.09 cv
2348.82 1148.23 2349.17 1146.39 2349.6 1144.59 cv
2349.95 1143.11 2351.46 1142.21 2352.89 1142.55 cv
2354.37 1142.9 2355.28 1144.37 2354.93 1145.85 cv
2354.54 1147.49 2354.23 1149.15 2353.99 1150.85 cv
2351.3 1169.99 2330.89 1279.88 2321.08 1299.52 cv
2311.64 1318.39 2295.75 1323.09 2278.64 1323.09 cv
cp
f
2442.24 1509.1 mo
2428.45 1509.1 2415.62 1505.08 2414.25 1495.37 cv
2412.99 1486.44 2411.59 1477.07 2410.17 1467.48 cv
2404.68 1430.67 2399.01 1392.6 2398.63 1364.17 cv
2398.51 1354.81 2398.63 1346.82 2398.75 1339.09 cv
2398.98 1323.19 2399.19 1309.47 2397.01 1291.26 cv
2394.71 1272.03 2376.34 1230.8 2361.58 1197.67 cv
2356.05 1185.25 2350.83 1173.52 2347.28 1164.78 cv
2346.71 1163.38 2347.39 1161.78 2348.79 1161.21 cv
2350.2 1160.64 2351.8 1161.32 2352.36 1162.72 cv
2355.87 1171.38 2361.08 1183.06 2366.59 1195.44 cv
2381.5 1228.9 2400.06 1270.55 2402.45 1290.61 cv
2404.68 1309.18 2404.47 1323.08 2404.23 1339.17 cv
2404.11 1346.86 2403.99 1354.81 2404.11 1364.1 cv
2404.49 1392.16 2410.13 1430.04 2415.59 1466.67 cv
2417.02 1476.27 2418.42 1485.67 2419.68 1494.6 cv
2420.69 1501.78 2435.03 1504.47 2448.09 1503.37 cv
2462.29 1502.15 2472.87 1497.08 2472.7 1491.57 cv
2472.63 1489.62 li
2471.61 1460.1 2472.26 1428.44 2474.57 1395.5 cv
2476.18 1372.64 2479.63 1345.87 2483.29 1317.54 cv
2485.64 1299.21 li
2489.16 1271.44 2474.29 1204.07 2459.19 1150.28 cv
2458.79 1148.82 2459.63 1147.31 2461.09 1146.9 cv
2462.57 1146.5 2464.06 1147.34 2464.48 1148.8 cv
2479.71 1203.11 2494.71 1271.32 2491.08 1299.89 cv
2488.73 1318.24 li
2485.08 1346.5 2481.63 1373.19 2480.04 1395.88 cv
2477.74 1428.63 2477.1 1460.1 2478.11 1489.43 cv
2478.18 1491.41 li
2478.49 1501.66 2463.53 1507.55 2448.56 1508.83 cv
2446.45 1509.01 2444.33 1509.1 2442.24 1509.1 cv
cp
f
2574.38 835.188 mo
2574.34 835.188 2574.3 835.186 2574.25 835.183 cv
2553.76 834.266 li
2242.99 820.337 li
2241.47 820.268 2240.3 818.985 2240.37 817.472 cv
2240.44 815.961 2241.59 814.881 2243.24 814.857 cv
2574.51 829.707 li
2576.03 829.776 2577.19 831.06 2577.12 832.572 cv
2577.05 834.043 2575.84 835.188 2574.38 835.188 cv
cp
f
2593.3 841.226 mo
2592.52 841.226 2591.74 840.884 2591.21 840.217 cv
2590.26 839.035 2590.4 837.241 2591.58 836.294 cv
2592.77 835.344 2594.44 835.473 2595.38 836.654 cv
2595.39 836.663 2595.45 836.741 2595.46 836.748 cv
2596.38 837.937 2596.21 839.686 2595.02 840.621 cv
2594.51 841.025 2593.9 841.226 2593.3 841.226 cv
cp
f
2568.52 1156.72 mo
2568.24 1156.72 2567.96 1156.72 2567.69 1156.71 cv
2066.11 1134.23 li
2056.49 1133.8 2049.01 1125.84 2049.43 1116.5 cv
2062.54 823.745 li
2062.75 819.199 2064.77 815.013 2068.23 811.956 cv
2071.66 808.923 2076.13 807.404 2080.76 807.576 cv
2163.44 811.282 li
2164.95 811.354 2166.22 812.637 2166.15 814.147 cv
2166.09 815.62 2164.97 816.773 2163.52 816.773 cv
2163.48 816.773 2163.44 816.771 2163.4 816.771 cv
2080.51 813.056 li
2077.29 812.907 2074.22 813.98 2071.86 816.066 cv
2069.52 818.13 2068.16 820.944 2068.02 823.99 cv
2054.91 1116.74 li
2054.62 1123.07 2059.76 1128.46 2066.36 1128.75 cv
2567.94 1151.23 li
2571.13 1151.36 2574.22 1150.3 2576.59 1148.22 cv
2578.92 1146.16 2580.29 1143.34 2580.42 1140.3 cv
2592.14 878.766 li
2592.21 877.255 2593.48 876.195 2595 876.148 cv
2596.51 876.217 2597.68 877.498 2597.62 879.011 cv
2585.9 1140.54 li
2585.7 1145.09 2583.68 1149.27 2580.22 1152.33 cv
2576.98 1155.18 2572.86 1156.72 2568.52 1156.72 cv
cp
f
2232.28 961.655 mo
2232.19 961.655 2232.09 961.655 2231.99 961.65 cv
2197.32 960.097 li
2195.8 960.021 2194.64 958.736 2194.71 957.223 cv
2194.78 955.759 2196 954.617 2197.45 954.617 cv
2197.49 954.617 2197.54 954.617 2197.59 954.617 cv
2232.24 956.17 li
2232.24 956.17 2232.78 955.791 2232.78 955.786 cv
2235.69 890.945 li
2235.69 890.945 2235.19 890.519 2235.19 890.519 cv
2212.08 889.479 li
2210.57 889.407 2209.4 888.122 2209.47 886.609 cv
2209.54 885.141 2210.76 883.998 2212.21 883.998 cv
2212.25 883.998 2212.29 884 2212.34 884.002 cv
2235.44 885.038 li
2237.06 885.109 2238.55 885.803 2239.63 886.995 cv
2240.69 888.151 2241.24 889.644 2241.17 891.195 cv
2238.26 956.031 li
2238.19 957.584 2237.51 959.026 2236.36 960.084 cv
2235.24 961.102 2233.8 961.655 2232.28 961.655 cv
cp
f
2155.25 958.214 mo
2120.9 956.674 li
2119.28 956.603 2117.78 955.907 2116.7 954.715 cv
2115.64 953.559 2115.1 952.064 2115.17 950.515 cv
2118.07 885.676 li
2118.22 882.438 2120.89 879.961 2124.34 880.058 cv
2154.91 881.43 li
2154.95 884.177 li
2154.8 886.915 li
2124.09 885.538 li
2123.66 885.48 2123.56 885.725 2123.55 885.919 cv
2120.65 950.765 li
2121.14 951.194 li
2155.26 952.72 li
2155.4 955.474 li
2155.25 958.214 li
cp
f
2147.69 1030.16 mo
2146.92 1030.16 2146.03 1030 2145.04 1029.54 cv
2137.04 1025.84 2139.23 995.693 2141.44 985.933 cv
2142.7 980.341 2145.59 973.986 2148.65 967.26 cv
2152.89 957.919 2157.7 947.333 2159.34 936.319 cv
2159.56 934.819 2160.98 933.793 2162.45 934.007 cv
2163.95 934.23 2164.99 935.627 2164.77 937.122 cv
2163.01 948.9 2158.03 959.861 2153.64 969.527 cv
2150.7 975.994 2147.92 982.099 2146.78 987.142 cv
2143.75 1000.58 2144.59 1022.27 2147.45 1024.62 cv
2148.3 1024.17 2149.28 1021.44 2149.46 1011.66 cv
2149.5 1009.59 2149.52 1008.64 2149.68 1007.95 cv
2150.02 1006.48 2151.52 1005.58 2152.97 1005.9 cv
2154.45 1006.24 2155.37 1007.71 2155.03 1009.18 cv
2154.96 1009.58 2154.96 1010.53 2154.94 1011.76 cv
2154.8 1019.65 2154.34 1026.92 2150.42 1029.38 cv
2149.86 1029.73 2148.93 1030.16 2147.69 1030.16 cv
cp
f
2162.51 1038.49 mo
2159 1038.49 2155.91 1034.84 2154 1028.44 cv
2150.81 1017.74 2147.8 997.844 2147.8 990.226 cv
2147.8 988.713 2149.03 987.486 2150.54 987.486 cv
2152.05 987.486 2153.28 988.713 2153.28 990.226 cv
2153.28 997.34 2156.24 1016.76 2159.25 1026.87 cv
2160.53 1031.15 2162.01 1032.66 2162.52 1032.96 cv
2162.52 1032.78 2163 1032.1 2163.38 1030.36 cv
2163.7 1028.88 2165.16 1027.96 2166.64 1028.26 cv
2168.12 1028.58 2169.06 1030.04 2168.74 1031.52 cv
2167.47 1037.43 2164.41 1038.42 2162.71 1038.48 cv
2162.65 1038.48 2162.58 1038.49 2162.51 1038.49 cv
cp
f
2170.69 1040.94 mo
2170.67 1040.94 2170.65 1040.94 2170.63 1040.94 cv
2167.2 1040.89 2164.49 1037.39 2163.56 1031.8 cv
2161.35 1018.54 2159.49 997.697 2159.49 991.636 cv
2159.49 990.124 2160.72 988.896 2162.23 988.896 cv
2163.74 988.896 2164.97 990.124 2164.97 991.636 cv
2164.97 997.385 2166.84 1018.11 2168.96 1030.9 cv
2169.46 1033.87 2170.49 1035.29 2170.88 1035.49 cv
2170.83 1035.31 2172.03 1033.85 2172.84 1029.62 cv
2173.12 1028.13 2174.58 1027.14 2176.05 1027.45 cv
2177.54 1027.73 2178.52 1029.17 2178.23 1030.66 cv
2176.51 1039.58 2172.79 1040.94 2170.69 1040.94 cv
cp
f
2180.62 1034.89 mo
2180.66 1034.89 li
2180.62 1034.89 li
cp
2180.43 1040.34 mo
2180.26 1040.34 2180.1 1040.33 2179.95 1040.31 cv
2176.36 1039.97 2173.65 1035.73 2173.2 1029.74 cv
2172.59 1021.61 2173.75 992.172 2173.8 990.922 cv
2173.86 989.409 2175.14 988.258 2176.65 988.289 cv
2178.16 988.352 2179.34 989.624 2179.28 991.137 cv
2179.27 991.44 2178.09 1021.51 2178.67 1029.33 cv
2178.92 1032.7 2180.07 1034.48 2180.54 1034.84 cv
2180.55 1034.61 2181.67 1033.51 2182.76 1029.43 cv
2182.76 1029.43 2182.76 1029.43 2182.76 1029.43 cv
2182.74 1029.43 2182.8 1028.64 2182.91 1027.46 cv
2183.5 1020.56 2185.06 1002.22 2187.81 992.502 cv
2188.59 989.753 2190.74 987.736 2193.43 987.24 cv
2196.35 986.678 2199.32 988.062 2201.51 991.003 cv
2201.98 991.627 2202.63 992.636 2203.41 993.863 cv
2205.96 997.853 2211.74 1007.19 2216.08 1006.86 cv
2215.86 1005.08 2213.53 1000.62 2211.79 997.291 cv
2209.51 992.926 2206.91 987.981 2205 982.688 cv
2203.62 978.85 2201.83 975.405 2199.92 971.759 cv
2195.44 963.154 2190.81 954.255 2191.55 939.88 cv
2191.63 938.367 2192.98 937.332 2194.43 937.283 cv
2195.95 937.363 2197.11 938.653 2197.03 940.166 cv
2196.36 953.05 2200.46 960.905 2204.79 969.224 cv
2206.69 972.87 2208.65 976.641 2210.16 980.823 cv
2211.95 985.768 2214.44 990.539 2216.65 994.751 cv
2220.32 1001.77 2222.75 1006.41 2220.97 1009.73 cv
2220.42 1010.76 2219.24 1012.04 2216.74 1012.3 cv
2209.14 1013.1 2202.67 1002.91 2198.79 996.813 cv
2198.1 995.733 2197.54 994.841 2197.12 994.288 cv
2196.22 993.087 2195.23 992.502 2194.43 992.632 cv
2193.81 992.743 2193.29 993.279 2193.09 993.997 cv
2190.49 1003.21 2188.89 1021.81 2188.37 1027.92 cv
2188.22 1029.66 2188.09 1030.71 2188.06 1030.84 cv
2185.99 1038.57 2182.85 1040.34 2180.43 1040.34 cv
cp
f
2185.51 942.139 mo
2183.65 942.139 2181.67 942.031 2179.59 941.817 cv
2167.68 940.585 2154.44 935.739 2153.5 928.004 cv
2152.06 916.229 2152.04 902.381 2153.42 883.108 cv
2155.68 851.781 2160.56 812.612 2166.38 795.718 cv
2175.32 769.719 2196.24 761.641 2224.8 753.07 cv
2250.35 745.403 2287.86 736.004 2314.07 732.287 cv
2345.56 727.819 2371.17 727.946 2371.38 727.942 cv
2372.89 727.953 2374.11 729.189 2374.1 730.702 cv
2374.09 732.211 2372.86 733.427 2371.36 733.427 cv
2371.34 733.429 2371.29 733.427 2371.07 733.427 cv
2368.26 733.427 2344.17 733.554 2314.83 737.718 cv
2288.91 741.393 2251.72 750.714 2226.38 758.323 cv
2198.54 766.678 2179.68 773.919 2171.56 797.503 cv
2165.91 813.929 2161.12 852.53 2158.9 883.5 cv
2157.54 902.408 2157.55 915.93 2158.94 927.344 cv
2159.34 930.611 2168.15 935.123 2180.15 936.363 cv
2189.46 937.328 2197 935.721 2198.07 932.548 cv
2198.87 930.209 2200.44 921.641 2202.44 910.795 cv
2204.31 900.603 2206.64 887.917 2209.4 874.41 cv
2210.42 869.416 2211.55 863.447 2212.71 857.306 cv
2215.15 844.457 2217.66 831.169 2219.68 824.015 cv
2221.85 816.276 2216.63 802.771 2214.44 798.219 cv
2213.78 796.856 2214.35 795.218 2215.71 794.56 cv
2217.08 793.908 2218.71 794.47 2219.37 795.834 cv
2219.73 796.577 2228.14 814.174 2224.95 825.501 cv
2223.01 832.423 2220.51 845.593 2218.1 858.328 cv
2216.93 864.495 2215.8 870.491 2214.77 875.507 cv
2212.02 888.963 2209.7 901.618 2207.83 911.786 cv
2205.64 923.711 2204.19 931.593 2203.27 934.315 cv
2201.55 939.354 2195.08 942.139 2185.51 942.139 cv
cp
f
2224.6 822.272 mo
2223.24 822.272 2222.06 821.261 2221.89 819.877 cv
2221.69 818.374 2222.76 817.001 2224.26 816.81 cv
2224.87 816.731 2286.29 808.943 2323.93 808.616 cv
2323.94 808.616 2323.95 808.616 2323.96 808.616 cv
2325.46 808.616 2326.68 809.827 2326.7 811.333 cv
2326.71 812.849 2325.5 814.087 2323.98 814.101 cv
2286.66 814.424 2225.56 822.171 2224.95 822.25 cv
2224.83 822.265 2224.71 822.272 2224.6 822.272 cv
cp
f
2329.32 802.365 mo
2329.27 802.365 2329.22 802.363 2329.18 802.361 cv
2327.67 802.285 2326.5 800.995 2326.58 799.482 cv
2327.48 781.792 2324.43 765.798 2317.51 751.948 cv
2316.83 750.593 2317.38 748.947 2318.74 748.271 cv
2320.09 747.592 2321.73 748.137 2322.42 749.498 cv
2329.76 764.203 2333.01 781.115 2332.06 799.763 cv
2331.98 801.227 2330.77 802.365 2329.32 802.365 cv
cp
f
2530.44 832.555 mo
2530.22 832.555 2529.99 832.525 2529.75 832.467 cv
2528.29 832.088 2527.41 830.593 2527.79 829.127 cv
2534.52 803.046 2521.04 790.434 2510.21 780.301 cv
2509.04 779.203 li
2507.94 778.167 2507.89 776.431 2508.92 775.327 cv
2509.96 774.225 2511.69 774.173 2512.8 775.208 cv
2513.96 776.297 li
2525.22 786.834 2540.64 801.265 2533.1 830.497 cv
2532.78 831.733 2531.66 832.555 2530.44 832.555 cv
cp
f
2417.75 827.879 mo
2417.31 827.879 2416.85 827.77 2416.43 827.536 cv
2415.11 826.804 2414.63 825.135 2415.36 823.81 cv
2422.17 811.501 2427.01 793.484 2427.06 793.303 cv
2427.46 791.846 2428.95 790.967 2430.41 791.362 cv
2431.88 791.75 2432.75 793.254 2432.36 794.718 cv
2432.16 795.481 2427.29 813.572 2420.16 826.465 cv
2419.66 827.369 2418.72 827.879 2417.75 827.879 cv
cp
f
1981.11 1347.71 mo
1980 1347.71 1978.89 1347.57 1977.81 1347.31 cv
1974.28 1346.43 1971.63 1344.19 1970.92 1341.46 cv
1966.76 1325.62 1972.98 1292.24 1977.75 1279.34 cv
1980.7 1271.34 1986.48 1262.12 1989.94 1256.61 cv
1990.65 1255.46 1991.25 1254.5 1991.69 1253.77 cv
1995.4 1247.6 1996.86 1240.59 1998.15 1234.41 cv
2000.21 1224.57 2002.15 1215.27 2012.9 1215.03 cv
2013.01 1215.02 2013.13 1215.02 2013.25 1215.02 cv
2024.96 1215.02 2069.29 1227.17 2071.2 1227.7 cv
2072.66 1228.1 2073.51 1229.61 2073.11 1231.07 cv
2072.71 1232.53 2071.21 1233.38 2069.74 1232.98 cv
2057.02 1229.49 2022.36 1220.51 2013.3 1220.51 cv
2013.21 1220.51 2013.11 1220.51 2013.02 1220.51 cv
2007.18 1220.64 2005.77 1224.73 2003.52 1235.53 cv
2002.14 1242.14 2000.58 1249.62 1996.4 1256.59 cv
1995.94 1257.35 1995.32 1258.34 1994.58 1259.52 cv
1991.24 1264.85 1985.65 1273.78 1982.89 1281.24 cv
1978.45 1293.24 1972.4 1325.5 1976.22 1340.06 cv
1976.36 1340.59 1977.36 1341.54 1979.13 1341.98 cv
1980.48 1342.33 1985.26 1342.99 1990.24 1337.58 cv
1994.02 1333.48 1998.08 1327.36 2002.4 1320.89 cv
2009.9 1309.63 2018.4 1296.86 2028.77 1289.26 cv
2043 1278.83 2056.08 1275.8 2064.55 1275.1 cv
2066.14 1274.94 2067.38 1276.1 2067.51 1277.61 cv
2067.63 1279.11 2066.51 1280.44 2065 1280.56 cv
2057.24 1281.21 2045.21 1284.01 2032.01 1293.68 cv
2022.43 1300.71 2014.21 1313.04 2006.97 1323.93 cv
2002.53 1330.59 1998.34 1336.88 1994.27 1341.29 cv
1990.46 1345.44 1985.72 1347.71 1981.11 1347.71 cv
cp
f
1973.6 1349.16 mo
1972.14 1349.16 1970.61 1348.94 1969.16 1348.35 cv
1966.63 1347.31 1964.74 1345.27 1963.7 1342.46 cv
1958.1 1327.25 1965.95 1290.34 1970.53 1277.94 cv
1973.48 1269.94 1979.26 1260.72 1982.71 1255.21 cv
1983.43 1254.07 1984.03 1253.11 1984.47 1252.37 cv
1988.37 1245.87 1989.7 1238.29 1990.87 1231.61 cv
1992.57 1221.91 1994.18 1212.76 2003.88 1212.69 cv
2003.89 1212.69 2003.91 1212.69 2003.91 1212.69 cv
2006.27 1212.69 2014.67 1214.54 2017.19 1215.11 cv
2018.67 1215.44 2019.6 1216.91 2019.26 1218.38 cv
2018.93 1219.86 2017.47 1220.81 2015.99 1220.45 cv
2011.09 1219.36 2005.11 1218.17 2003.94 1218.17 cv
2003.93 1218.17 2003.93 1218.17 2003.92 1218.17 cv
1999.25 1218.21 1998.06 1222.36 1996.28 1232.55 cv
1995.02 1239.71 1993.6 1247.82 1989.18 1255.19 cv
1988.72 1255.95 1988.1 1256.95 1987.36 1258.13 cv
1984.02 1263.45 1978.43 1272.38 1975.67 1279.84 cv
1971.21 1291.93 1964 1327.4 1968.85 1340.56 cv
1969.36 1341.95 1970.12 1342.81 1971.23 1343.27 cv
1973.86 1344.36 1977.83 1343 1979.15 1342.39 cv
1980.52 1341.77 1982.15 1342.35 1982.79 1343.72 cv
1983.43 1345.09 1982.84 1346.71 1981.48 1347.36 cv
1980.97 1347.6 1977.5 1349.16 1973.6 1349.16 cv
cp
f
2437.18 1576.28 mo
2432.48 1576.28 2428.43 1574.61 2425.64 1569.34 cv
2420.25 1559.16 2421.42 1509.79 2421.57 1504.19 cv
2421.61 1502.7 2422.83 1501.53 2424.31 1501.53 cv
2424.34 1501.53 2424.36 1501.53 2424.39 1501.53 cv
2425.9 1501.57 2427.09 1502.83 2427.05 1504.34 cv
2426.48 1525.74 2426.92 1560.03 2430.49 1566.78 cv
2433.44 1572.34 2438.45 1571.31 2448.64 1568.62 cv
2455.29 1566.86 2462.82 1564.87 2471.1 1565.5 cv
2472 1565.57 2473.17 1565.68 2474.56 1565.81 cv
2480.97 1566.43 2491.69 1567.46 2499.81 1566.57 cv
2512.82 1565.14 2545.08 1555.91 2556.63 1545.76 cv
2557.06 1545.38 2557.49 1544.01 2557.07 1542.16 cv
2556.76 1540.77 2555.18 1536.07 2547.93 1533.99 cv
2542.23 1532.35 2535.23 1531.94 2527.82 1531.5 cv
2515.96 1530.8 2502.52 1530.01 2489.65 1524.07 cv
2467.91 1514.04 2467.22 1500.98 2467.21 1500.42 cv
2467.16 1498.91 2468.34 1497.64 2469.86 1497.59 cv
2471.26 1497.63 2472.63 1498.73 2472.69 1500.25 cv
2472.69 1500.31 2473.56 1510.6 2491.94 1519.09 cv
2503.87 1524.59 2516.77 1525.35 2528.14 1526.03 cv
2535.87 1526.48 2543.16 1526.91 2549.45 1528.72 cv
2556.29 1530.69 2561.15 1535.27 2562.42 1540.96 cv
2563.23 1544.57 2562.4 1547.99 2560.24 1549.88 cv
2547.7 1560.9 2514.38 1570.48 2500.41 1572.03 cv
2491.73 1572.98 2480.65 1571.92 2474.04 1571.27 cv
2472.69 1571.14 2471.54 1571.04 2470.68 1570.97 cv
2463.36 1570.4 2456.28 1572.28 2450.03 1573.92 cv
2445.52 1575.12 2441.12 1576.28 2437.18 1576.28 cv
cp
f
2437.55 1584.63 mo
2433.4 1584.63 2429.92 1583.14 2427.63 1578.65 cv
2426.54 1576.51 2424.83 1568.18 2424.33 1565.68 cv
2424.03 1564.19 2425 1562.75 2426.48 1562.45 cv
2427.98 1562.16 2429.41 1563.13 2429.71 1564.61 cv
2430.65 1569.36 2431.99 1575.13 2432.52 1576.16 cv
2434.69 1580.45 2439.06 1579.64 2449.23 1576.6 cv
2456.33 1574.48 2464.36 1572.07 2473.13 1572.74 cv
2474.03 1572.81 2475.23 1572.92 2476.65 1573.06 cv
2483.04 1573.68 2493.75 1574.7 2501.83 1573.81 cv
2514.91 1572.37 2550.63 1562.72 2560.46 1552.26 cv
2561.51 1551.14 2561.95 1550.04 2561.86 1548.79 cv
2561.64 1545.87 2558.51 1542.78 2557.43 1541.93 cv
2556.24 1541 2556.04 1539.27 2556.97 1538.08 cv
2557.91 1536.89 2559.63 1536.69 2560.82 1537.62 cv
2561.45 1538.11 2566.89 1542.56 2567.33 1548.38 cv
2567.54 1551.16 2566.54 1553.8 2564.46 1556.02 cv
2553.12 1568.08 2515.84 1577.78 2502.43 1579.27 cv
2493.78 1580.22 2482.73 1579.15 2476.12 1578.52 cv
2474.75 1578.39 2473.59 1578.27 2472.71 1578.21 cv
2465 1577.61 2457.45 1579.87 2450.8 1581.85 cv
2446.09 1583.26 2441.52 1584.63 2437.55 1584.63 cv
cp
f
2572.52 840.842 mo
2572.52 840.842 li
2572.52 840.842 li
2572.52 840.842 li
cp
2572.48 840.744 mo
2575.29 842.116 2589.69 835.77 2593.76 832.7 cv
2594.7 831.99 2595.57 829.109 2594.77 827.518 cv
2594.18 826.329 2592.25 826.607 2590.74 827.059 cv
2583.25 829.268 2574.29 835.518 2572.64 839.673 cv
2572.51 840.01 2572.38 840.449 2572.48 840.744 cv
cp
2573.45 846.332 mo
2572.79 846.332 2572.17 846.28 2571.61 846.166 cv
2569.43 845.731 2568.33 844.537 2567.79 843.613 cv
2567.79 843.613 li
2567.08 842.404 2566.46 840.387 2567.54 837.656 cv
2570.04 831.336 2580.96 824.227 2589.19 821.797 cv
2596.14 819.757 2598.83 823.392 2599.67 825.055 cv
2601.56 828.81 2600.29 834.654 2597.06 837.08 cv
2594.35 839.122 2581.13 846.332 2573.45 846.332 cv
cp
f
2575.63 851.555 mo
2575.63 851.555 li
2575.63 851.555 li
cp
2575.61 851.437 mo
2578.31 853.1 2593.43 849.194 2597.92 846.887 cv
2598.9 846.383 2600.17 843.895 2599.68 842.342 cv
2599.28 841.059 2597.03 841.152 2595.73 841.324 cv
2588.01 842.326 2577.99 847.065 2575.87 850.714 cv
2575.78 850.866 2575.61 851.203 2575.61 851.437 cv
cp
2578.2 857.25 mo
2576.54 857.25 2575.05 857.064 2573.86 856.627 cv
2571.84 855.886 2570.95 854.599 2570.56 853.648 cv
2570.56 853.648 li
2570.04 852.394 2569.72 850.393 2571.13 847.965 cv
2574.44 842.243 2586.38 837.006 2595.02 835.884 cv
2602.31 834.951 2604.36 838.941 2604.92 840.708 cv
2606.13 844.58 2603.95 849.953 2600.43 851.763 cv
2597.72 853.155 2586.03 857.25 2578.2 857.25 cv
cp
f
2575.22 863.206 mo
2577.67 865.205 2593.19 863.416 2597.95 861.749 cv
2598.99 861.38 2600.58 859.091 2600.32 857.486 cv
2600.09 856.166 2597.85 855.949 2596.54 855.94 cv
2588.99 855.882 2578.19 859.2 2575.58 862.525 cv
2575.48 862.664 2575.25 862.971 2575.22 863.206 cv
cp
2581.24 869.585 mo
2577.88 869.585 2574.81 869.19 2572.78 868.106 cv
2570.88 867.1 2570.18 865.703 2569.92 864.709 cv
2569.92 864.708 2569.92 864.705 2569.92 864.705 cv
2569.58 863.391 2569.54 861.362 2571.26 859.151 cv
2575.33 853.94 2587.81 850.256 2596.58 850.455 cv
2603.92 850.513 2605.42 854.76 2605.73 856.583 cv
2606.39 860.583 2603.5 865.609 2599.77 866.921 cv
2598.02 867.535 2588.89 869.585 2581.24 869.585 cv
cp
f
2577.94 872.923 mo
2577.94 872.928 2577.94 872.935 2577.94 872.935 cv
2577.94 872.935 2577.94 872.923 2577.94 872.923 cv
2577.94 872.923 li
2577.94 872.923 li
cp
2577.98 872.81 mo
2578.7 873.435 2581.64 874.626 2587.26 874.927 cv
2592.2 875.177 2597.5 874.532 2599.28 874.175 cv
2600.18 873.995 2601.76 872.301 2601.72 870.956 cv
2601.69 869.735 2599.18 869.291 2598.41 869.184 cv
2589.18 867.9 2578.87 870.806 2577.98 872.81 cv
cp
2589.62 880.47 mo
2588.73 880.47 2587.85 880.45 2586.97 880.403 cv
2580.79 880.073 2573.26 878.649 2572.52 873.745 cv
2572.52 873.745 li
2572.33 872.471 2572.48 870.558 2574.33 868.695 cv
2578.62 864.341 2590.84 862.592 2599.17 863.752 cv
2606.26 864.743 2607.15 869.005 2607.2 870.79 cv
2607.32 874.63 2604.06 878.808 2600.36 879.553 cv
2598.38 879.95 2594.06 880.47 2589.62 880.47 cv
cp
f
2566.7 833.17 mo
2566.13 833.17 2565.56 832.996 2565.07 832.639 cv
2563.85 831.742 2563.59 830.026 2564.49 828.806 cv
2565.62 827.268 2566.03 824.72 2566.43 822.254 cv
2566.97 818.938 2567.52 815.511 2570.11 813.719 cv
2571.54 812.73 2573.33 812.438 2575.39 812.855 cv
2582.53 814.299 2583.68 825.231 2583.79 826.472 cv
2583.92 827.98 2582.8 829.306 2581.3 829.437 cv
2579.72 829.573 2578.46 828.455 2578.32 826.949 cv
2578.03 823.702 2576.56 818.686 2574.31 818.231 cv
2573.68 818.108 2573.34 818.153 2573.23 818.229 cv
2572.56 818.69 2572.13 821.364 2571.84 823.133 cv
2571.36 826.092 2570.82 829.448 2568.91 832.05 cv
2568.37 832.782 2567.54 833.17 2566.7 833.17 cv
cp
f
2392.64 750.966 mo
2400.44 761.304 2416.98 780.328 2435.78 784.609 cv
2453.59 788.673 2476.37 782.767 2494.67 778.031 cv
2496.64 777.522 2498.55 777.027 2500.4 776.561 cv
2500.41 776.556 2500.42 776.552 2500.43 776.547 cv
2500.66 776.458 2500.9 776.4 2501.13 776.375 cv
2507.84 774.693 2513.65 773.406 2518.12 773.167 cv
2520.4 773.044 2522.5 771.109 2524.35 767.41 cv
2536.63 742.879 2529.69 660.845 2522.26 649.734 cv
2512.47 635.089 2495.4 617.91 2483.06 614.917 cv
2457.56 608.727 2423.05 627.188 2417.91 632.273 cv
2379.89 669.871 2370.77 705.016 2371.38 719.855 cv
2371.56 724.472 2372.64 726.956 2373.5 727.683 cv
2380.26 733.364 2386.36 741.791 2392.64 750.966 cv
cp
2414.07 780.274 mo
2416.26 782.789 2418.55 785.214 2420.97 787.517 cv
2425.22 791.574 2433.95 792.324 2444.27 791.306 cv
2440.94 791.103 2437.7 790.67 2434.57 789.956 cv
2427.24 788.287 2420.31 784.699 2414.07 780.274 cv
cp
2437.08 797.162 mo
2428.67 797.162 2421.49 795.597 2417.18 791.485 cv
2406.78 781.559 2398.37 769.161 2390.94 758.223 cv
2390.17 757.078 2389.4 755.94 2388.62 754.813 cv
2385.4 750.556 2383.5 747.552 2383.24 747.139 cv
2383.2 747.075 2383.16 747.01 2383.13 746.943 cv
2378.79 740.956 2374.49 735.669 2369.98 731.883 cv
2367.54 729.834 2366.13 725.753 2365.89 720.079 cv
2365.25 704.34 2374.67 667.316 2414.05 628.373 cv
2419.81 622.678 2456.4 602.807 2484.35 609.588 cv
2498.19 612.944 2516.19 630.792 2526.82 646.686 cv
2535.37 659.475 2542.68 743.038 2529.25 769.866 cv
2526.46 775.456 2522.8 778.408 2518.41 778.643 cv
2514.31 778.861 2508.66 780.133 2502.07 781.793 cv
2495.8 784.224 2461.3 797.159 2437.08 797.162 cv
cp
f
2383.92 698.072 mo
2383.1 698.072 2382.29 697.704 2381.75 697.003 cv
2380.83 695.803 2381.05 694.082 2382.25 693.158 cv
2403.83 676.532 2451.35 651.693 2493.77 651.408 cv
2493.77 651.408 2493.78 651.408 2493.78 651.408 cv
2495.29 651.408 2496.51 652.624 2496.52 654.132 cv
2496.54 655.646 2495.31 656.882 2493.8 656.893 cv
2452.74 657.169 2406.6 681.33 2385.6 697.5 cv
2385.1 697.887 2384.51 698.072 2383.92 698.072 cv
cp
f
2452.16 791.886 mo
2451 791.886 2449.93 791.15 2449.55 789.99 cv
2449.08 788.548 2449.87 787.002 2451.31 786.535 cv
2487.71 774.731 2508.72 762.418 2515.53 748.889 cv
2518.32 743.346 2518.68 737.691 2516.63 731.604 cv
2507.35 704.034 2477.52 661.644 2471.5 660.028 cv
2470.07 659.646 2469.11 658.187 2469.44 656.748 cv
2469.77 655.311 2471.1 654.365 2472.54 654.646 cv
2482.11 656.469 2512.97 703.562 2521.82 729.854 cv
2524.33 737.298 2523.86 744.531 2520.43 751.354 cv
2512.82 766.466 2491.4 779.303 2453.01 791.752 cv
2452.72 791.844 2452.44 791.886 2452.16 791.886 cv
cp
f
2103.93 1042.05 mo
2103.93 1042.05 li
2107.28 1042.21 2109.86 1045.04 2109.71 1048.4 cv
2108.56 1073.34 li
2108.41 1076.69 2105.57 1079.28 2102.22 1079.12 cv
2102.22 1079.12 li
2098.88 1078.97 2096.28 1076.13 2096.44 1072.78 cv
2097.59 1047.84 li
2097.74 1044.49 2100.58 1041.9 2103.93 1042.05 cv
cp
ef
2135.02 1043.34 mo
2135.02 1043.34 li
2138.37 1043.5 2140.96 1046.34 2140.81 1049.69 cv
2139.66 1074.63 li
2139.51 1077.98 2136.66 1080.57 2133.31 1080.41 cv
2133.31 1080.41 li
2129.97 1080.26 2127.38 1077.42 2127.53 1074.08 cv
2128.68 1049.13 li
2128.83 1045.78 2131.68 1043.19 2135.02 1043.34 cv
cp
ef
2177.42 1046.35 mo
2177.42 1046.35 li
2180.77 1046.5 2183.36 1049.34 2183.21 1052.69 cv
2182.05 1077.63 li
2181.9 1080.98 2179.06 1083.57 2175.71 1083.42 cv
2175.71 1083.42 li
2172.37 1083.26 2169.78 1080.43 2169.93 1077.07 cv
2171.08 1052.13 li
2171.24 1048.78 2174.07 1046.19 2177.42 1046.35 cv
cp
ef
2206.24 1047.26 mo
2206.24 1047.26 li
2209.59 1047.41 2212.18 1050.25 2212.02 1053.6 cv
2210.88 1078.54 li
2210.72 1081.89 2207.88 1084.48 2204.53 1084.33 cv
2204.53 1084.33 li
2201.18 1084.17 2198.59 1081.34 2198.75 1077.98 cv
2199.9 1053.04 li
2200.05 1049.69 2202.89 1047.11 2206.24 1047.26 cv
cp
ef
2237.31 1048.83 mo
2237.31 1048.83 li
2240.66 1048.99 2243.25 1051.83 2243.09 1055.17 cv
2241.94 1080.12 li
2241.79 1083.47 2238.95 1086.06 2235.6 1085.91 cv
2235.6 1085.91 li
2232.25 1085.75 2229.66 1082.91 2229.82 1079.56 cv
2230.96 1054.62 li
2231.12 1051.27 2233.96 1048.68 2237.31 1048.83 cv
cp
ef
2267.92 1050.22 mo
2267.92 1050.22 li
2271.27 1050.37 2273.85 1053.21 2273.7 1056.56 cv
2272.55 1081.51 li
2272.4 1084.85 2269.56 1087.45 2266.21 1087.29 cv
2266.21 1087.29 li
2262.86 1087.13 2260.27 1084.29 2260.43 1080.95 cv
2261.57 1056 li
2261.73 1052.65 2264.57 1050.07 2267.92 1050.22 cv
cp
ef
2321.4 1052.52 mo
2321.4 1052.52 li
2324.76 1052.68 2327.34 1055.51 2327.19 1058.87 cv
2326.04 1083.81 li
2325.88 1087.16 2323.05 1089.75 2319.69 1089.59 cv
2319.69 1089.59 li
2316.35 1089.44 2313.76 1086.6 2313.92 1083.25 cv
2315.06 1058.31 li
2315.22 1054.96 2318.06 1052.37 2321.4 1052.52 cv
cp
ef
2350.31 1053.52 mo
2350.31 1053.52 li
2353.66 1053.68 2356.24 1056.51 2356.09 1059.87 cv
2354.94 1084.81 li
2354.78 1088.16 2351.95 1090.74 2348.6 1090.59 cv
2348.6 1090.59 li
2345.25 1090.44 2342.66 1087.6 2342.82 1084.25 cv
2343.96 1059.3 li
2344.12 1055.96 2346.95 1053.37 2350.31 1053.52 cv
cp
ef
2378.81 1054.43 mo
2378.81 1054.43 li
2382.16 1054.59 2384.75 1057.42 2384.59 1060.78 cv
2383.45 1085.72 li
2383.29 1089.07 2380.45 1091.66 2377.11 1091.5 cv
2377.11 1091.5 li
2373.75 1091.35 2371.17 1088.51 2371.32 1085.16 cv
2372.47 1060.22 li
2372.63 1056.87 2375.46 1054.28 2378.81 1054.43 cv
cp
ef
2443.17 1058.24 mo
2443.17 1058.24 li
2446.52 1058.4 2449.11 1061.24 2448.95 1064.59 cv
2447.81 1089.53 li
2447.65 1092.88 2444.81 1095.47 2441.46 1095.31 cv
2441.46 1095.31 li
2438.11 1095.16 2435.53 1092.32 2435.68 1088.97 cv
2436.83 1064.03 li
2436.98 1060.68 2439.82 1058.09 2443.17 1058.24 cv
cp
ef
2470.68 1059.16 mo
2470.68 1059.16 li
2474.04 1059.31 2476.62 1062.15 2476.47 1065.5 cv
2475.32 1090.44 li
2475.17 1093.79 2472.33 1096.38 2468.97 1096.22 cv
2468.97 1096.22 li
2465.63 1096.07 2463.04 1093.23 2463.19 1089.89 cv
2464.34 1064.94 li
2464.5 1061.59 2467.34 1059 2470.68 1059.16 cv
cp
ef
2499.21 1060.11 mo
2499.21 1060.11 li
2502.56 1060.26 2505.14 1063.1 2504.98 1066.45 cv
2503.84 1091.4 li
2503.68 1094.74 2500.85 1097.33 2497.5 1097.17 cv
2497.5 1097.17 li
2494.14 1097.02 2491.56 1094.18 2491.72 1090.84 cv
2492.86 1065.89 li
2493.02 1062.54 2495.85 1059.95 2499.21 1060.11 cv
cp
ef
2526.55 1061.63 mo
2526.55 1061.63 li
2529.9 1061.78 2532.49 1064.62 2532.33 1067.97 cv
2531.18 1092.92 li
2531.03 1096.26 2528.19 1098.85 2524.84 1098.7 cv
2524.84 1098.7 li
2521.49 1098.54 2518.9 1095.7 2519.06 1092.36 cv
2520.2 1067.41 li
2520.36 1064.06 2523.2 1061.47 2526.55 1061.63 cv
cp
ef
2447.45 733.229 mo
2446.62 733.229 2445.8 732.854 2445.26 732.144 cv
2444.66 731.345 2441.67 727.174 2442.27 723.441 cv
2442.54 721.806 2443.64 720.424 2444.92 718.824 cv
2446.33 717.073 2448.07 714.893 2449.02 711.992 cv
2449.49 710.555 2451.03 709.753 2452.47 710.235 cv
2453.92 710.704 2454.7 712.25 2454.23 713.692 cv
2452.98 717.542 2450.8 720.266 2449.21 722.254 cv
2448.61 722.995 2447.8 724.013 2447.67 724.385 cv
2447.54 725.249 2448.59 727.449 2449.64 728.839 cv
2450.54 730.048 2450.3 731.767 2449.09 732.675 cv
2448.6 733.047 2448.02 733.229 2447.45 733.229 cv
cp
f
2429.93 699.794 mo
2430.53 696.302 2432.88 693.79 2435.18 694.183 cv
2437.48 694.575 2438.86 697.724 2438.27 701.216 cv
2437.67 704.708 2435.33 707.221 2433.02 706.828 cv
2430.72 706.44 2429.33 703.287 2429.93 699.794 cv
cp
ef
2409.56 711.179 mo
2409.06 711.179 2408.56 711.045 2408.11 710.764 cv
2406.18 709.562 2401.51 706.13 2399.86 700.272 cv
2398.74 696.275 2398.24 689.273 2399.64 682.624 cv
2399.95 681.14 2401.4 680.191 2402.89 680.506 cv
2404.37 680.818 2405.32 682.271 2405 683.753 cv
2403.86 689.208 2404.2 695.445 2405.14 698.786 cv
2406.27 702.796 2409.63 705.244 2411.01 706.109 cv
2412.3 706.911 2412.69 708.602 2411.89 709.887 cv
2411.37 710.722 2410.47 711.179 2409.56 711.179 cv
cp
f
2444.33 772.306 mo
2441.16 772.306 2438.49 771.522 2437.16 771.129 cv
2432.7 769.851 2429.47 768.186 2427.21 766.082 cv
2424.02 763.121 2419.83 757.64 2416.55 752.115 cv
2414.25 748.297 li
2408.63 739.01 2406.3 735.165 2406.94 722.118 cv
2407.01 720.697 li
2407.19 717.111 2407.38 713.186 2407.68 708.928 cv
2407.8 707.422 2409.12 706.317 2410.62 706.391 cv
2412.13 706.5 2413.26 707.814 2413.16 709.325 cv
2412.85 713.536 2412.66 717.418 2412.48 720.967 cv
2412.42 722.388 li
2411.86 733.757 2413.5 736.471 2418.95 745.457 cv
2421.27 749.315 li
2424.26 754.347 2428.14 759.47 2430.94 762.061 cv
2432.57 763.576 2435.05 764.819 2438.31 765.754 cv
2440.23 766.314 2443.42 767.233 2446.66 766.602 cv
2450.43 765.852 2455.39 763.851 2461.8 760.479 cv
2466.79 757.854 2473 754.59 2476.71 750.951 cv
2478.63 749.072 2481.98 744.729 2487.05 734.706 cv
2488.32 732.217 2489.64 729.475 2490.99 726.53 cv
2491.62 725.148 2493.25 724.55 2494.63 725.18 cv
2496 725.809 2496.61 727.438 2495.98 728.814 cv
2494.6 731.832 2493.23 734.636 2491.94 737.185 cv
2487.6 745.765 2483.77 751.714 2480.55 754.867 cv
2476.26 759.068 2469.66 762.543 2464.35 765.334 cv
2457.46 768.954 2452.03 771.127 2447.74 771.979 cv
2446.56 772.212 2445.41 772.306 2444.33 772.306 cv
cp
f
2492.4 733.34 mo
2490.91 733.34 2489.69 732.153 2489.66 730.658 cv
2489.62 729.145 2490.82 727.891 2492.34 727.857 cv
2493.98 727.819 2498.12 727.424 2501.14 724.555 cv
2503.61 722.209 2507.06 717.104 2508.87 711.885 cv
2509.37 710.452 2510.94 709.705 2512.36 710.193 cv
2513.79 710.691 2514.55 712.253 2514.05 713.683 cv
2511.84 720.047 2507.87 725.726 2504.91 728.531 cv
2500.51 732.717 2494.74 733.289 2492.46 733.338 cv
2492.44 733.34 2492.42 733.34 2492.4 733.34 cv
cp
f
2492.27 697.775 mo
2491.25 697.775 2490.27 697.206 2489.8 696.227 cv
2488.09 692.703 2486.68 688.553 2485.31 684.541 cv
2484.67 682.686 2484.04 680.818 2483.36 678.989 cv
2478.11 664.651 2474.35 660.673 2465.86 660.479 cv
2464.35 660.445 2463.15 659.191 2463.19 657.676 cv
2463.22 656.183 2464.44 654.996 2465.93 654.996 cv
2465.94 654.996 2465.97 654.996 2465.99 654.999 cv
2478.29 655.277 2483.22 662.659 2488.51 677.099 cv
2489.2 678.966 2489.85 680.874 2490.5 682.769 cv
2491.87 686.803 2493.18 690.617 2494.73 693.839 cv
2495.39 695.202 2494.82 696.842 2493.46 697.5 cv
2493.07 697.688 2492.67 697.775 2492.27 697.775 cv
cp
f
2426.87 679.205 mo
2425.82 679.205 2424.8 678.625 2424.34 677.627 cv
2423.73 676.293 2424.21 674.742 2425.52 674.075 cv
2426.13 673.765 2427 673.524 2429.44 672.875 cv
2435.46 671.272 2453.78 666.396 2456.35 659.31 cv
2456.87 657.886 2458.46 657.152 2459.87 657.669 cv
2461.29 658.187 2462.02 659.76 2461.5 661.184 cv
2458.38 669.797 2444.25 674.606 2430.85 678.174 cv
2429.42 678.558 2428.37 678.819 2427.93 678.998 cv
2427.59 679.138 2427.23 679.205 2426.87 679.205 cv
cp
f
2500.59 714.393 mo
2500.08 714.393 2499.56 714.25 2499.1 713.949 cv
2497.83 713.125 2497.47 711.427 2498.29 710.157 cv
2498.67 709.582 2502.06 704.49 2505.81 702.952 cv
2507.2 702.37 2508.8 703.046 2509.38 704.449 cv
2509.96 705.851 2509.29 707.453 2507.89 708.026 cv
2506.17 708.729 2503.78 711.777 2502.89 713.143 cv
2502.37 713.953 2501.49 714.393 2500.59 714.393 cv
cp
f
2468.45 710.113 mo
2469.05 706.618 2471.4 704.104 2473.7 704.499 cv
2476 704.891 2477.39 708.04 2476.79 711.53 cv
2476.2 715.026 2473.85 717.539 2471.55 717.146 cv
2469.25 716.753 2467.86 713.605 2468.45 710.113 cv
cp
ef
2449.72 709.048 mo
2450.6 709.048 2451.48 709.162 2452.36 709.417 cv
2456.06 710.485 2457.94 714.031 2459.92 717.787 cv
2461.57 720.909 2463.45 724.45 2466.58 727.063 cv
2469.52 729.522 2474.07 729.607 2477.36 729.256 cv
2484.73 728.462 2491.57 724.958 2492.85 723.316 cv
2496.81 718.224 2498.6 708.042 2498.98 705.607 cv
2498.5 704.095 2496.43 698.987 2490.04 697.704 cv
2486.33 696.956 2482.12 696.497 2477.66 696.01 cv
2470.42 695.218 2462.93 694.401 2455.98 692.234 cv
2455.98 692.234 li
2450.77 690.61 2446 688.053 2441.39 685.58 cv
2436.3 682.847 2431.48 680.263 2427.23 679.705 cv
2421.6 678.948 2416.78 682.13 2415.14 683.374 cv
2414.14 687.365 2412.28 696.079 2412.83 699.978 cv
2413.51 704.775 2420.15 714.768 2427.44 715.828 cv
2431.78 716.437 2435.84 714.391 2439.78 712.384 cv
2443.01 710.74 2446.33 709.048 2449.72 709.048 cv
cp
2474.66 734.893 mo
2469.89 734.893 2465.93 733.664 2463.06 731.271 cv
2459.11 727.967 2456.87 723.745 2455.08 720.351 cv
2453.59 717.537 2452.3 715.107 2450.85 714.688 cv
2448.59 714.04 2445.67 715.542 2442.27 717.271 cv
2437.79 719.554 2432.7 722.127 2426.65 721.254 cv
2416.62 719.797 2408.43 707.946 2407.4 700.748 cv
2406.55 694.685 2409.69 682.483 2410.05 681.113 cv
2410.19 680.598 2410.47 680.133 2410.87 679.776 cv
2411.17 679.5 2418.48 673.021 2427.95 674.269 cv
2433.19 674.957 2438.43 677.77 2443.99 680.747 cv
2448.36 683.099 2452.9 685.529 2457.61 687 cv
2457.61 687 li
2464.06 689.008 2471.27 689.795 2478.26 690.559 cv
2482.84 691.059 2487.17 691.532 2491.12 692.326 cv
2502.08 694.528 2504.36 704.436 2504.45 704.855 cv
2504.52 705.166 2504.53 705.487 2504.49 705.804 cv
2504.42 706.369 2502.58 719.728 2497.18 726.681 cv
2494.49 730.142 2485.51 733.894 2477.95 734.71 cv
2476.82 734.833 2475.72 734.893 2474.66 734.893 cv
cp
f
2429.12 734.971 mo
2429.12 734.971 2437.25 738.713 2447.3 739.9 cv
2457.35 741.09 2464.48 739.617 2464.48 739.617 cv
2464.48 739.617 2454.46 753.722 2442.79 752.573 cv
2430.74 751.386 2429.12 734.971 2429.12 734.971 cv
cp
1 1 1 rgb
ef
2432.88 739.363 mo
2434.19 743.591 2437.06 749.254 2443.06 749.846 cv
2448.75 750.413 2454.14 746.521 2457.76 743.058 cv
2454.84 743.185 2451.14 743.123 2446.98 742.625 cv
2441.35 741.96 2436.34 740.545 2432.88 739.363 cv
cp
2444.15 755.384 mo
2443.61 755.384 2443.07 755.357 2442.52 755.304 cv
2428.39 753.909 2426.46 736.002 2426.39 735.239 cv
2426.29 734.262 2426.73 733.309 2427.53 732.74 cv
2428.33 732.17 2429.38 732.068 2430.27 732.479 cv
2430.34 732.514 2438.15 736.06 2447.62 737.18 cv
2457.06 738.298 2463.85 736.948 2463.92 736.933 cv
2465.03 736.709 2466.15 737.183 2466.76 738.124 cv
2467.38 739.066 2467.36 740.289 2466.71 741.206 cv
2466.28 741.808 2456.5 755.384 2444.15 755.384 cv
cp
0 0 0 rgb
f
2447.05 780.211 mo
2443.61 780.211 2440.26 779.629 2437.01 778.46 cv
2422.85 773.372 2413.72 757.479 2410.96 743.991 cv
2410.65 742.507 2411.61 741.056 2413.09 740.753 cv
2414.55 740.445 2416.02 741.404 2416.33 742.891 cv
2418.78 754.878 2426.71 768.929 2438.86 773.298 cv
2448.97 776.934 2460.54 773.548 2473.29 763.259 cv
2474.47 762.304 2476.2 762.487 2477.15 763.67 cv
2478.1 764.848 2477.91 766.575 2476.73 767.526 cv
2466.27 775.969 2456.33 780.211 2447.05 780.211 cv
cp
f
2493.81 766.193 mo
2493.12 766.193 2492.44 765.939 2491.91 765.43 cv
2491.84 765.363 2484.85 758.68 2478.99 754.494 cv
2477.76 753.613 2477.48 751.901 2478.35 750.669 cv
2479.23 749.438 2480.94 749.145 2482.18 750.031 cv
2488.37 754.452 2495.41 761.188 2495.7 761.472 cv
2496.8 762.521 2496.83 764.257 2495.78 765.35 cv
2495.25 765.91 2494.52 766.193 2493.81 766.193 cv
cp
f
2408.76 735.638 mo
2408.58 735.638 2408.39 735.621 2408.22 735.585 cv
2403.35 734.612 2393.21 734.284 2393.11 734.279 cv
2391.6 734.232 2390.41 732.967 2390.46 731.452 cv
2390.5 729.941 2391.7 728.678 2393.28 728.799 cv
2393.72 728.813 2403.98 729.145 2409.29 730.207 cv
2410.77 730.504 2411.74 731.947 2411.44 733.434 cv
2411.18 734.737 2410.04 735.638 2408.76 735.638 cv
cp
f
2413.75 779.446 mo
2413.08 779.446 2412.42 779.205 2411.89 778.716 cv
2390.37 758.834 2385.12 718.708 2391.05 689.349 cv
2391.35 687.861 2392.81 686.893 2394.28 687.205 cv
2395.76 687.504 2396.72 688.95 2396.42 690.434 cv
2390.94 717.61 2395.79 756.377 2415.61 774.691 cv
2416.72 775.717 2416.79 777.453 2415.76 778.564 cv
2415.22 779.149 2414.49 779.446 2413.75 779.446 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Admin) ()
%%Title: (Pol_Apr22_024.eps)
%%CreationDate: 5/3/2022 7:58 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3-$Dp@n0)ce7d6%bP/SF:Nh<"@<q6"p<-O2c9`5P$1oUN;(<kZTn2.X#_ZWN+Z0XX5,QfU/^[F<2I.9c*1,"=6c-AiLd0n
%ZDKZ$rEI`E7C26RURD/]fA,/>b&PeNe?]^P3jkX;5&,hKT[ha'X'r?BWbhY)lcOd.8`0<cLS.f[s%kVSId*<@jEI`4@\jtW_e./3
%.s=\L7cTF4^M2(DRK/tjh)X5l;:A+`DUW32DKML4hUtRU8Zhpjq+o&IAYmppqX$mWs0@0Xq-@2uI1eAanHDXqWbD&)H2:Df";cNb
%g(nHR8MBqm?;N>pU2nmO98c<n[#i<-=69J$?^_om7/pTubYm9n5N/rO(lBcn3BAWt%:+([<Q2?/CL%FsqA)?>4DtiD4:Q%bWo":'
%AVR5I/7huIs.o[N3YN"5UZUYHa7GO,>BP"IjuJ=\U:3mIHFE12+?K:#$3"%,?3G^;BM*[7S*cE^IgBu(A("sph3D=eGH*t#9tet%
%d#"_aJW,5c*)pY>A:e:@BCr&rb5[bj:As<dcmH=4Wu^,-<H6RQ]2tQW^Af\`j_8at_a[He%H$_WQShFfEsD#(nOu!FDE3TC1['=G
%V@u6WVAUQ'V;5o^$E;DcQk-MllSu]3&J=/6ZZ93JYI^=)/:/"7cIkt!;GKd6d1oa\MbfRY;u_*i5B>ceL3>YW7jl^VZ`SionZ03Q
%'.gh&05lP%@&/K@2i6ne`"CPh;LY,5_;EWSSVB672k7PgBgAMTM?!OX=5l=9m&8X306`jnVm0I@#ljk,q0Y1b&!XOhW?!l'a(=B%
%r&ak^TZhmDFT&OSX.Kibrin?NO/7^lbGKIZhU:r-,/,`Oq1Y+C2"A%Dm?Ztr3&Gil?I#`2(2hbE_5nM&i`d>EJ'rg"nD>eW8HOu-
%8ga=LW4LUlp>r6phCK*@1$'SB^U?G#ko[rF`*D'iT0Y>N@/];ain)Ar429IiZBq>d?h^#sJ+9"4\PIhacAj'1P<tSq-it:]"+qFN
%0t-N!b57HrZl>Vc,h'2Y.iO's*lNKd,M^opoi7lcr:Uk>PFu6"rB>`g7grqDi4i=B5DF_k.a-+4Iau`]C8FqjI;*^TC"W"mb_4hi
%>r%HZmo`=Q+.6,n'VB&JCHTVR(RgMk*7(XC*]TrEgFSUJ'5oEHI+prnITRD:DK]2bb%V\nIim=SO[oJ,L*XP?$;?_X5YFhejtJ,Q
%6&6!KDk%s<r3u*#PEOPF,mERCK08+/pN$"4I^N@iD#0-l9'Pe-J=_q5Oj#[\)Ut!uO(=ChalAM=)m\?p!is80dX+S<U@=E.ikHLR
%@V?Hqi^i!pOh?i"Oh0G,KTe$]!)_7TjA]tqMB6?@>TruULajCtkN!/g?+Nr-/*BXA=UAtB4<WpI8tAXqjePgh#Jr%@]"qiFb$BTe
%BFcmfJW^?\,<e:</uBsj[UG_hH'pQ4Q^;VI/2^FTH1H-6I(qQZLR%Y@Z:]V[5M1HS4op-c<(\k7rT::&^04Its/]5do]7jEZroEX
%Zi`&jQDe<-g%9XgPccLdE\jY8%p`>kXgaKInZVX>(iE!^k3cBdg:6_"Zit%&KVknZG'EoL=$*^+V*(PLh62YfZj1\V)Ui-E\XO-"
%B8/5?3S?ptQ/N"``chP[c#SV).cpA(L4dQrPC8h!TQ5>.c>]5Nj1(*_Z;6qsH/3kV$^P'<gW4?LY22h)N\Y<(Z/',ch[Gi`d-=T:
%i&p9a/tCr]*V/Si_9I`JUM`1l4S`(hUu-Q[HDbpgCAU5J/2Wja4>saB;luOMFmc_j@Pdf,+`(c<!^6M&FguaBd]S\:GOki>g^bR_
%/;WWWSPe#J4+T<T"?-_1i:J?K95T&5*[Y"O<U.JHYKI&:YAqtD8_@aCJfWesAiW_c"-)b36T:An7+_d65.Oc5NfnK)1V[a[[78eX
%:G)a]r'S)(A*)h^X;$6oAaRdQEotT2S%3Pq=)R0Cc!7e.F6,$C4uk+C=(.p_/^@T*AT\6K\I?m8R4gMjj^u6^ba7WU`6=R;q/YiF
%D$E4WlH,;u%f_oRjP7%)"[65#6VP'mB24XlQg$2R`N-V/rm#es1JA#07=RfE!$'OX!qi2%eS2G7L#?TtlgchLc0=Y+[K:XM:9.Cb
%l^Pe+E3eln%/;8ad8/jY.]=n2aJ,9KA(4<5`C2:jO!(40.*Ahek1dt]EUrrLUZbHn3D/cO42^bU,H\3kUC,0PAX4XVlLr9KE/1_l
%A,`K?M/paf@l%'6$qDJ`lr<rGp7I>K*n7NX?N6+l*AIBd[_d?kmGI2VacLM5010kWX4+`N9>O3AcUO%&h=%;[JZG)O#29&P#(ZVa
%N./I*knK=&S^=Yc,C=fIS2SAa=K/e(Zh`u]s4fM-U^5\@l=jl&9SCf7bL"&Ck;kA.B]AEh=dEP1,sV[BE'5asO@BI99sBV&D.GYZ
%0toGS_8EKuG+CpgCcl5?\CY5T\(+*?0E"\/9"]ibR<Wj6D5i$"=_V6nJp*Htr(ei`]BBCT-=D7',.n.Ho.g:kn"d@T?+NfZ55rr8
%bc6'i^+,bW0W].MKA\s36J[i4ia^6hr>8_8HBLk'nBkh_5/U,O]=2bb/?0+5]fY8?9ihpjQHO7G^?Lt7SLh,dFW?lT2?d9n>esXC
%e*0mSK[%LO*r*sPE$s!ARART/1Z:3*_CNeUT:,2;$*V,1#u*];l$8"g`LRUWR;V[l\-UB3OP<=.EAI;0Y(Ag_U'U2r?Y#k0M._bU
%(n#Vk5(sL]A17AgK+AZ,+L]r*"g\F@rYZCZX3jN!->O39>Wk4kTq1-jG=RX)d6Nn&3\h`,5R,)oG\c4s6T/oLb-0ELl:Fh6?c'pJ
%*:+V"Y4La2,RSI>^A]9cei&4SX&8O_!Ifae^i/""Q';-1R*t_+lhYi^:AJB8P9K3N2Be5,Joc.C;\k3LnR?nbhWCp81gPjCokiNs
%EQU92@st*^2VIZg4G0,LG?@!9QV9NBB>DU,Z[.pA^&Nd69.#YQXC9gISJoW@$B"%)0'rGb5Q"k+N^E<0m5Hgn%af?&7oD,_k<-8u
%,X#\QE?-?Xr+LjgoP6G6o&HG^f!88_EOTqYj!%uimR<sUbuUQ?*T(9\8F4igil,9p!H(#(:]GDTZ6%RQi6*d=3jm7h&qmEOV)j\'
%=NuA%nI-cqQRhj-fdu<D]8l2VeOi!o1L-M#q:-+,;*2[hP-/<f/GsgjQAN2=ri$o3_8C*4mM&WpP\-1/PNAHK6--,?je#&\1f^8\
%U8`u^N*.IL0NW"jPpfelOLp.A.'k!ZSCO?m:]4fX/al4^8nj`/;)7C/afe.$%XVSaM_aWeZW`UnZF61D=qp@RTGF@\9slC;,iZb#
%oiWlhE!L;^Mt.g?2,1J,RCHee=aa>/1?^PnqsuglZ)/i]NS]97`ehmNrHMYGb-`*6mbXEPG6\`[kUslcK5#\IYe]^OSGg\EU:[A=
%VX;@^/CEOjnl!d"Q'n%Fqb(tST#nBSPA;%43g4>8\Mg:)D7`@k1NRF0`7d&9CB965-Il^+m<2BEAun^t<1>4ED'meF;XIL_/Y*J7
%qjWfBG>Yk]!5\\7!cZ.K[q?pu`^Uh20Opjq)tgMa;<?,sH;sQeSc-h-k/R#&JuVojat!W2O#'d<VYZ>=<3tHtaoE\]dFND>d4G.'
%WmEtGoU5]j7UIQB<,nsMGme3W9$Q^fRbrLSU)"5eA`Bl+N)HXAK8W?Mps7T9O]s("gP&?!PNk64UYV`fAhUk,3n`l=Q[e3uXTmX0
%\bT(NrSl"rR7?A-I_ts,eF$,a0/$p)cGY'9ZgbkCbCEJmCP48pJIXaZIQm^jab!`-`[:\&Gt*'5l!eMn#4He3Cb+M?4"1=g`5\s8
%j^Za&5c:jj5Vej<=P6C")2p:>$8S,[fK$RhTM7<cZ:Na9EB`HGdYcNGOP_WajG?rq\$KBf?9.l,9)GV(['Q,Ns3jU2/g_c[.8sh;
%rFS"e-6iIO%F7Deo"SHXr*RVH1?su&f%%0eA2)4&c>pY*SF8#l43RFhVjldqB0"l(SndsL+#e_!K$t"S)UOrBps1MS46/6)SF>A4
%NkiV&-d1s(g_hh#--=QYLm`K"n11G<_`r$&8@<J`eYWi"-+nhuiD@2i`o_S[E4c?4\&(3%U@g'Re2Lig:FB9D,iaq3FS-^,WA6SX
%f]k:Ha:usHXR>Kop!TY8"2V$RQd$YOYE:(>f#UFc>_[#Y.q(;KY;Lt'>1iK56Nc\!13>GO;;YO?C_f($L!Hun+g^ss/:KL8TD]3O
%oNdKLBl8Y.UApiXXj\?b4)eJ9(A/X`Q.[%8'3+5"N00Q.h_Bn#$5I`Yp*&/1>+8D$?JW?F0mAfI>E,:D;SG.s[fiQRCntW^CaB.l
%s(mc/O=;*q5@eR8bTN^Uh;0@2dQ_8i(<j"5hGhG9Aq?:W%Mci3,4HeO0H>S1"^YelQW`6X(3l5N?=nbT=lADV:Qr-#bN'O6dh[2-
%Neg?`V+gn?J/#?65IHUel)2fN8.ue*R^NU3\&-S3#KCA:9h_9,R"iX.ZCG@O+.L@B:rB(n2N\.RPQ'3&[F.80.mkQ4G>Tr(04^W$
%PrNVFZ8-c;@\t-cY?3,W3R1r?ROmP[9s68,d`Ir&%@Q%&R460j;3#iThgPr914+F`pA34Ia>CYYG&l]2_`t$XVfua6'P.9mlrO)g
%gB8B85au%l+!^Afpn>e"0WEN$:A3lGBIq=E1AoiUG8csH^URq\D3.UN-td)i4!W2Qr_i9+o)'Z+l@71dpa\aY=0R!4B40.Ao+/jo
%mg`6-*noH@d&,cAgh"a!]D3:H/>t9A:tZ>@`Io/)"f7W%L-tl9.;(,MPl8UF(aI44Y(CKOF`GH)*+OT&X'$EPK&[^A/<2I4#-^/m
%EJuG]R)LdlEK"$?@i!+P`A+5+.C2"R?&<'urCk0_'-G2\q.CRq<6>cU\hg3Wl#3`bR95DA4RZQ4rDMCR^'ZAnCAu2^)\3WY5I!uo
%eN:0+3qpron#iHJO6]VW0#L=EkC+p02M3*BTO,e#WqH!+f@fHJ8\<D'%1A,<"ZaruZr5/%\$"S3<:%r&g_m93`r+mm0#N`][)4HS
%17W<oEmY;2=j/Gb2Qi7fh@7WG2.M+p.#X7W4W?6AA@#p$rh398SdkN$__/c>Vg7-u'"?c[T]#IT'9^ISSTNb9p,pD\aKa20-qsik
%fs&*3G:@'dV)Du'9>7\O@F>Ote7gE-b&j"R_,nc>]^lG`2G(k:8h%,cZ81lP(ct)Jc5hjQX0XMRIj9n8oB#s!I(=&KI-/\u]Xb$6
%jtc.`R5[&B8!nRCPBN=]2`L?j-J"ZU_QosGmmPqsIkJX<B("HuSX[021O!a!cHY.TIWt3c(mZhEIMSB?G[G>kRf[L\gE@p"T<kE:
%T?D>DR6NW)rnLI:a"TZk`/sLAp7s4?%,Tb*?&@83R'ZNABCAGd]LWN&4Xfh:L%73WfAH0b`ct+7Zi)*?S`,ZhkF$R;Io.M)>Pqh%
%l?Uo5?*>]O.;\dU9)I4TVKd!ZrMuA5gb/J`R>m(`i18r'WE)'0m1GkFO5OW8'U,[n>PptUes+7h=[79Gj]gkSR_1FCD+ZADlotM3
%l&>Y_<Mg_b<VbtIbG3""qFnR)`c]!(cfdo1DM@aagE68ZDdABHmt_96S`':,P+Ti?mHQj;;e7@\Ciu0_IOW?aXR>KoFjd(""3nme
%)#lgc=sm7k-LNlH1p`"*L)6TN%*p@+<Ve4UKK.M+biVit_?+U>>Ma2\TA0]FgjQ/%m\D^aX'\>e=`fl%,[,l:m6;Ou4ih._oFI?t
%;^'l]/M*Up+YuK/Ae`LKU>IbaAiA&\-G"II-W9Z`N1u.bMPdNBqGp^eG[#)%m%-U:O?m;[&'MY`d=G'QU9#nY)"taCf,9O(Fqh*7
%p$"Mi2VE>r,':$/.!)GSp5r]"l@n%_[?s*o1AND>g?NhZAu0oU$SqZe`_8BfU-P2ijd8KA9Y,8gJqlp!N`kj*;i^nN,MgegRWo"(
%*CVd?3%_`3/k1q85;kL#7aF:D61,4Hrm>$,8W(%J23,;Ipo!G5\>Sh%U8e($[+ROICimuE-5mOn.B<=GTMKRNbo#N&=caGB*#DK?
%d-0&:dYtf:\o+:(-XLlEI$u\*;]E3r=l]2AWaYL,eA3J99MF^,^?IEKAoD3R2A7Z<_]p&B)9gWfIjO,oRP-3fB*dl75;Ieo/s(*7
%>q[<"'dgKoq3"tW#8;"fbUVs+>omOdGB[[&_X6F>`&!I?jTih=#5+?$l2=&t/684g'[?H/1sfN%$Fg!*/7>t$kmLe=OMB]U^WdZi
%mHQiHBi=<I9?26SN(anIjW$]hVObqSAn3f;1=N+-Qu.kk3.tQW>ZF"*qXrE.Q=!OW5ao_B7$)i>Cp[DR4.,fQa6eiMM>,k=ToVd0
%#@-hcY?(Z@8T5J/SD-ZW]+V<^CF,;Hcjjsh,=lnO>tmK:Y*\/j6fL!39kUZHq@UuhYFmGip<DO$;GVf6msi#cr8fZ)pb(H?TAW<%
%((n^4HMC"$rrTUPJ"hr!`,B#H9Wr.09M?h!>,*"SSQ+\^s,)\jnGi5H>)qiS3ChV!a&^][D0_R^i.J#`L8j)]gU$F8ApUK&s4&sH
%:-Q>:A"'>[l2<:5[7?k';qiCOVCDhnV_>&Jr\o7N%,B7QA_J8n0*Ar1Y>+\]la*?HT,l*U5!-2=+&)Sus3PDJ^+`R`CsbK>?cW/*
%dp&iTiQR<p]6nineTID4;`3<g:A2/fPEAIjO@&3VZuP/.K6B<fa#H-+^@1kna#(N\DK:8kTS,\Frt"&BrPcPOF]97^V>9/L\n*<P
%r9mAX>BW0`9K!r1mrm3n:[A#a9Qq(s5=!2hJ!&WEfD3UR?a]L0MQ-S^=pFW+%U25jZOiE`20'N@I[_H?GIA,AJ1C)%QU[H+98!p0
%W$u`TPG$`G.)d[8N1_4KPp=_]6!JUL8Lp5ZV'lRB4C%8Mk?.9P\#/tj<Z.bVk0?H]pURX+8+kHd:VYRd]2?+;B7+]oZQ/G2ec"[%
%#?@<WhCML'L8F4o`i#/J-W/L1PApQu!RE9=r05jYosE58BSKVdY[*!9VRul!7.L.>)/2F6jj5DP<"L(m`#2]34a'/B:agHimBH9p
%MM6mHjm>InlHegp7,M3GqEITHX">E:+LEfl@<P9ADt)#nc';6-mJT]p/%7/1R!eQj$#J%i<_Cgc`g=f4-(#YWIWZ@QZQX]_K_D^K
%C$(Cf]!9,=GOTB7cD3P!IcHPGrPgI.,5IM[nK1JHFn`nNAc'GPhF6]gG:2<fb0"<5N]Pj=fHqPP5IbAK2Ck+Q#=j%qrIZH:N*uH0
%ikbQ)_ge/SS/)q2kgb]2(;jb/^\L"ol@)U0"s\J=;b"@q6u[Z;i9RNJ[f,?"cmFAP!MS(^+k&1C#>J,66+p-1[#n:*prtAAW<L)K
%###A8gi1D.]cAr1IOSd&,i/EZS?O%U+A+ZZfAF0cfKEUd:-&?IaT'F-c"a^LD/I_HH8A#Z_CQqN-ClMRJ)@?!rjs4q\"oXP/VT1-
%V,mC&B7_IFA)tR(`'.p%gFrHk@FqJrZPi5@2tN[no0Sj)1=^_cY\hb3LF5C\L#4M9V-PLAh*R%7*mCs1hu0e?<tXZalCI?_MBERu
%:?7H)O>a.*:u5aSs)%%cIG6UFBLK`kQ]kR*oW%_hlWt*ueHjpCrVUCVP!=[>=`WUn,psX+fi/<Zc/]T7>p\BBLWZmZ,+)@/djI9L
%]:RI?)aRD:<GJ(>Eg\0r5'6=amIS\CQBb??"/p2E9g:_54c>X5_K,!`fnO:\SYDq<Q='[V[n`+2BP'"s?g_mjY?uJNb<S&p)kBGO
%Uj*"i'q7DijYZb=X_a=SD?%7HXgB<h>.P$TG0")+>rb]bB3U[1%I^>HQd)1!6_S#DWhW=S1''3@DF"<eH.Zgi3pdb1%!(GhBSFu3
%$Mn$q%YE9^9`o:gq/&lp.)HpSGDiV<fVr.)N*'Abd&Hqd5ar3B]/@1oFZh9]LBPiEAf)1O2hR]VNAPj&IsI"J7/C[LqKf%XT)7'u
%T[BaI"sAUi_s'r-2H+7T.;t$Pf,YsOW9aaRKB`F<[Zub15OR.X'ns6rXT8Z.;]Y,LeOhu$>4#pH*EskV)t38EB]A^4G3*A@6e$A#
%8)=0NS]K7lST1s<^;IBVW`C$k?6h'#,YGQl:do`!fBf#r936:DkBDiTC,KJi\$RR5G.X14XDMG8!Ura+D+(*@r#%=1-uEYj$`ioM
%-8X3C:HCV#.&#GZLMqM5F&IC`i:jsSD<3TR[SBSPlD.:B&X_\!l+t*>l'JP=ZLtN/>@ZXSa$Du8FrX$(')!;%.W'uW2tp9Hg4"Ci
%Z$='R<ZlULDl#q$(!3,j'9apk2#8,tm`f\o'Zq9k[dpS!08G%aqD$j]nP-^fkMW\CHQDmXhW(EGY&nB:q$LMl[Nrfl!MYe'q*eC;
%'D80e=F*d*FeRp8s+u#YQ"lC3b;K)I-*7M1%T6'DnA;R>Tni8E%<J:Qk,j@uIr1Pn%9%1&9^C04=[qY*D3%^#riAX(_i.-WhJ/;.
%984[)UJH-.J"b>i<_C`%acOd*MIoGMo3Q0*.:um!U#Fs7r2cpp&<P[,:`Hq-)o`<kjKL@E/CTOB)`MI.eUcji*GG+SI-AZV9=mSS
%a0K?^^tYuXWh"1']K\@o4O[?`pbbCRo9LXbp'>kZJD,gj7-i8]C8k.!rL,/VERO>LA,s7JaeB71D8/.,5i%%u%Z0UR8'T?PWEmnq
%I7/:6m=F/F2qVu"hmEFN>,2%3/#ZJR(i9/'G/AY_Yp,0+m1%:#g=g7B->R;he&"0l'ORXlD]-ne[TK"e9!t!,\iTS7RJ,-":s'Pi
%7'`9PdN+.A+lfmC2TnC3JBUnl?A7e7n'fb^5D+S`[9Xrf1Rbb;Y?&bZ-UTKm3o;W$"S\0,`4&XD?WUJ!>`#tcSN\a<*P:u["VnC:
%G;N^gVKtPVCMBEjrC4f_Rb"/1@V82bin6V"%h%><F\t0;<0KNo/%C@HHA:]%.ND>S:$V,@Ar+)7Us`+2;C\u.[#p9QOdW<-kF3e1
%Md]gC>rBN'0ObC0)E^Af@p[cB9JGZ1IGg#N3.hEna,>gs!(-Q)@ImY*KebobQe`#75D:W;"nC>!$'4I,%6RAlMVF+9cake%G73ua
%!$9g_PtN3HR&1()2f")cbX@U*f&Te>q3R@K@1Ltu-?^tgd!Vf1T)7o'rtf*&bsm=ESL)93s61XS=$!b=2d[>T6D&Ic"<p8$rQV"]
%khg#=3g"TrJmIf1$2KjE9$ln2N`^XILgq.[#76P-dd3G+_!Q-t4&!Y?15s/h/40Z&(02859%8n9e_Pi_:tTZNR'"UL<0br:X[1#\
%KiR>@)LXDAFg4DN%>8M2i[qngK!pq<R-p*g.;TkH8+jLjUL844OPR$GKGcZn!eOrFA3iB"S(tL%X%r&pmT6F%DVcLj,1Dm^lC?;b
%dp^YO+PQIW2bYjo_?p)AT;6c__j]&V;&\E#=fGiN]<nh'=tCA>(1Gtd-(0nX!P(<h4QIb-A)QS2g^lCa[8)ipn%7NUD'es%'*Sa"
%-"WHPmKcc@A.46/.^>4h0M\*dUCi_HCuRFa]\OW,7`G;i'sXq$2[Q!UJPm886"rc:`#i&H?"jVcdB>'.n-'jLM%V4W`Ga_YHoX;"
%'NudmjQG15D=\Al0s5<O?XZH=O>Wqt;@J5oi,+9A0E"LKWRSmH,pcc]'O!JfTM?k4g*%dekI]0>+c<I&I51.+dKftINiYMA[Q:68
%Cj<Ea6sI4'-^0CPja%'F%dc<i82aF].@p;mmY'_W/*D^/9$Kt<5gld4\&l>$&u-b*j`JrElfH(:)F_`&;5?<1=X8aZc$e('j\>#Z
%TKF=<Z%CM%q[9EGCQu-F@edot<#"SomXn5ddEA`smTF2DECT)@7amI3%/VQM9q@H_?0:d]bdkYHVD!X/\J<j#"0sqqJj_H@Q,gEJ
%"d[Hokid+:AbJ]^dAIK?G1r2oMR1^cV)JM+STEOL3Z5H&mS"jONF#9Ol!<YZKH@j_k;eo/8ZHAV;U@)>XV0l*N^>i(o#?'G[jNRY
%C_+bjrb-i<N\]58;r>+B#+8@lp=d*\1sS\@?RI*GF8WD,Z59+M*_Q`GDI5Mf`it_e33)lo<0)Xn78On)EABKteTZgI/Jf]V9=8-Y
%,=%gb)3XDYJ\#3c&u&U@849gS+cq$TFVLs:&tse5Ef`)++$0tt=lK]U><$)e-^@udWS2pk#^*gsAd]8Lf4JCA5ogoH*!mfSklqu%
%a&4,-7s)Bde"g5c1bZ]u1"&;FAaMO&%Xf.">i`sILfALRBOGA)8(D"0@FTSVi60K^GuNXu]6cV?g)2qQ'>na]MXNatH&nqN;ucL8
%1N[Pr2E/3/GOKo5U:;3)I'dP)*Lj$P->r)V!EVj?`F6IopEf,C)C9h)B<^IXhBWlkQ$.;W:(RZj9>IbtDq]'#JEYm)WEIN?MPBAp
%E^-mRN/f\BI"?bEgsg"NU)SZ]E>:D3F$mF@=Wtn8'7*:$AhG\@+l-$7.?pfQ,jlRZ?NRZ;?(G'N28>8F3[O's,t;J1)lA^rO6UsB
%0DLKrZHS>&&%i)h[*`RLY!Vq/#rhMRUT:#fHTBh$8GL]$X"(^"L#og)D6QEc#GgI8VN:/7#Reo!WTNEi.:FruX'4njA?&+/PV7`>
%dNqXL%\Jp\eA?6&:"?k9kU^1!p!MoMH3[nE*74R56+hc#KA\),0hN*W-b59D_k*,LL12_d"'njKGscq%>pc)>6]hL'/*F[36F66h
%lWpUKOnGku%AVt57Rh>cd&jqVjTg*O/a/0@EIB[R+c0r*/a[N)gUtaihRMnd$#sg$iWS*4V=8`<)a"$=[=.JnW0TmV_aUJ$]epFu
%e>[jpe<@:D$X*M!3h<08.)Sc4B%Rs*DdaH*@qT2I<p)S/gRuVE=eaI7ZHtmCc7<j"7N8`-i6k+rq'NG7F@uLd:0"F7Jb$0J5(G$&
%g:m."78*sQ#BoF<a9Q<taiNqrf+)jja>+V"JV9$2W#.8`B\hUcKT1""QCjRDDD^heSec3KVd:8j*4V>BYD8m<'6h&c+Hr.[U=8q?
%cu5-#/0=4!k7(5_4MQ5`W+`bZ3m7B"Y,^XIKjf9/mcmO?#^(aiWV"_9#ld%0oh9`%:+YtrE6:B(/bs!_n`sa`eN]ur^,lHB;Pu$`
%7Ikr7MjO]"Z.&?gYTA&rOaA+Q`/mgBnE?,#a!EBC12V?mPr;?V;\Z4RE8$oXeZd&l8(CLOk%KkckB2rV@khR08GaTT,L1Z=%n/:5
%4Aksl8j,l5]+N"8-1BL[d"\9_@Ujpj4,g?g7(,Z$^>5]N7Q!9t($>,lR%D)k_lj<qT%/-[Hh.+)Lk$8m#]Eb<=Ao-/CNnC<$:+u"
%..OG8r:&+3`V"FN+0YM/QhHA.LWc/+c(3S=l=KqN?Lcn#r8Xo:T5-Tshn7UM+09@mfm.aK5%!.Gr:jZpfdSr#D>h8@dnK@aWjW8l
%$^XNO_i;(-\L/?^99%Lll_V<^bA=9IheP]pp=c"&04+*cXII&J<orSP;B_BRI+c![Iea'tkS/nqX3SbVG2`=b:%RE9;SEq7\+7-Y
%mAn3=p4H,F?p8tIq7ZY"*A(4";"r6?cM#WT/tBDS5CLhLDWT^b?T$YXoukAOFn*YpC+E@i/1f%gMXrpk$X/;D<W%#`fI:'QH09!E
%2lc=J0/g#f>?B*?XU??1*Yh<$rf<'3kE"MWM.kA?Xfn'u6i-H=7q&m>HZ*uYrVeL#ZM^@J2Y#WWGA%l_qtso;]4AUHhmtShf%0G6
%`hUMt=%hEd2msdB.;f<[-dUZ;4h+ZGQ2GEFW[r$plsGUG20Hl^R[&Zc<\%POb+$qlkDtt!Mk<*,rKB`9E.EY%[Cn)CQEf&uIbDfo
%993kH:Cl#WSD*/('usHk>o<BLBieNO?Ie$a981(1>CrC:3,m^lC3d4m[Ghj_[=bCKb=fZ`eN'Xd1ORiIgXt4cJ+.?&ag:JKB4:Ou
%rSX*M'n0FnIp;oZWh2NN_Xfslcd@lHfhWXh/YDBRp?Ob)oka5G_-WE1qR4&?C0r#%'NY/)8&]h5+.HBP`YW!-(@FN4W9<o!:&\Ym
%=`I_r>(=$[;Y8jMgAWF2dm*'.7)A?B`FmN*Qh8/dbGTBTG>HiBb26QSASf@JVYL]\X_8U;[CI)liCgH[D>rcSH3GY)=naf^B+42p
%d!BT`+78Nnr+Y-e@c:eXjc=99J,F975(E0MrC,]3=oS&neBT.!/03eIFTWnNGJ8HL5_I3$\)2[^hMIpOLpr:G^Kr:o\^asV7>/#Y
%@H$3V]?DCoH2WH9B+NSM#qTLs>%[Y*>C=%s^>CGY1n.Qbbgh>icP]BY<GC0?_'_m6S"]Sa(Rj/M:P1h4Ps?t!U1MmkT6B@TKrVS\
%mTHU_Y8t"p-@09rLDt$,mJH_.]lp:qRQ]:sJNgsMqrU&KSO04PaAqfET^!MD6#lm$@q"]G55r'?Y-'u<"O6(l)B:nGMg$?f&qa\D
%-\&S&1!QgRIk-+^?fh^-h]6&r!J+8Fj@ATKrp]796#l4"cW.B>kN1](\b:S#kl<j4Cf]r$mukf[pAWO%RkIMY4RLf)/OTC@%LYAM
%EriE9H6'lB:bPl,L&Lo9m8p#X9C8:irH$:h>Vfa[^gq;k'jb]V=r!MqkOPMqIGr$1Mr\,Y_<Rd6nau>QM!SO>l/'IoB[t;P,h!1u
%G&I?%:A_+tbFa1:/$)^Ac54G&(QVqUq9sucEoZQOY$]t-?b`LMeecm(cS7g+gIpKU^%fZTI8>[fGh](\+-3-2Qr0lt&CZ\(4l.Ph
%q=J\+\Cu1jme>Fb6)*kRko=%nalQlY32t@^.>]*g386E8*Z].cs#AQ?<617nKo>lhY?`X:\6(jt\9Gms+TYgYLpa>USo5hd5_nYX
%c''(FK[f9^\@lufH:i^8rJk"XrPQTe:Mka!c(?P(e@-omf4>ri*kIjW?G:fl>[60p(AM)tc/k/#k^Ro_0t1<A;ffb+Vh@nfpNbkW
%\a_RS*U@56NV[\0[S?cODlPIuEaF.Iqs`+1:[aoQS%k)'dk:/MEGCU%lH>;Ck:a<=Ol,EPJp5.cU>aK,ga<"Xh^DC;kK!5ZHU2a>
%B3n&CCo94J?Km;kR9H;.Nn!d_&UW-kK%uC='6ZmPLh1feHr?OKIkGQ/Lc.74T8T&Pn6RNb:%tj&^Wt3bAU)An:X;tWpY(DgeEbA#
%qU_Wm)OdDlf8U&tl`X5P&0UrHpf0/of6hV-/o6N_mk'XKK*cOd(`E1`SHrQ/<S@E$ZNsN9&/"l(56]Fgq-`Hi9o.9:#jjfM(:<QK
%`2Dg(o%Wf/=CrCqgdE)'n*R%!Q-`/gjmk/oi?_mW^ka+r3]/r/KI[^,lI:f&9[El:.L*uuj#O][P9.mPrq*:-<Qmt6$J`Q2&^,9k
%<e(]ZMHpiK#-j*i4beLud\J?g_eA*@[fCV1U1("8IjPGic6ik9fM;\XI_=J49>noI/_Dke!jB=G+%Dmt82uDb.rk=,Yjn1#q0,1U
%68)]l+(&9e,_P]"UITgp:Z&mf(H42<R[2WpgGpKg`L=87(/*i`gj8LlIJRJa9g-(s\Gc."Mb(</5>9`I.8-AdNCrr?A_:o47La(n
%`K]tkH0!>bgpA/e9t9\,W4V/mIG?L<NU)@Hlm6`qBp%3V>/h$G<+gQ'l,#!aI/_#W0=,p>jH&USDt5:Ch:hS^rlTW_\(0Jm2qNk5
%NoPi34VK@4IQIFi5MXsT@`q5E?*u<;OIHUCXS](J$cH0u]fFA"TD+?RHd*qq##12g?@:GN^O5bo2RM8oS%7jUemZpi2W;B`8ZM]0
%/p8geUKrf*IKc2\O_]O$*9YS5i+:m,FmES7EqG2:F8O"D0ZFS#rhn0#dSO#%Q:ZEr$)-?t_@_9i5:dSa^H:2MI(*2./o#HoAGSL;
%#V=<93R2V)`9rp)ZUn?1-e0ll<$5j7gN5Fsp6.ITn>pT>]^T1-nCi-\N=<>7a'2W'+1>3"c^q:3I!((Ab>l)"lH^1YD]-D=NJF8F
%Mum25G^q3[^7]mGUT'dmo/RjT'BGbS_9n/j*08$$kk5H`>P5.OQWnR-nm_.Dfe]h9o>.s[YC0VVoc<XsGM^sG(-_Kf0TskmUP6Ir
%/mQ%lgei^q@R4?LD[TTVG?.q:hsuF3qmudjH5M,l`NNX?4=G+!45]ZjYNA;"YeKaKjcf"pp@gIP+)TA=51Eo\5X=MM>lODsPIJNJ
%694ldU&"2?l<JPYO4=,pkDdEDmL;qT+0U6bXfKeB<YqCqS=N+@od*+Abe;fE5$0)Js6(Y8hGlsT^2@9C:[]T:_uTs_[9Tc47&nrk
%!;p=>(P,LE@.h9]Bi]"ion\GD\^ubchtfR3'i(<Z[?i!'PDa^/YC#iXr5h_045o=9;r;h@cXT'k&t[BmoDjPg_-]I)4hk`S(t7>W
%'!\gf=.eV7D/Gn&[.B9b2ii$ZTUKaun#p#=NkX[PhtS:,L"32,r4HIbG$Z`?ZFW!EJTtA+(g[WG)_LK()R4:.[Z#$=F9NgXF0_h#
%q+$-[1H;q-NDhn>)de2iM[N&*[:6uKW%U@3nE!7APSp1rWHn5:CqR<.G/YR-DP#O.SO2bS]Y(NGlMG_*ZVKob`VPmZ-5$V;2h$FF
%_TMb`N<l>@K9`LqlSj@$-$QgsGUg\s];HE$^V3i4Hj7"0AWFDY2\/!i7frF)CO>T.I?@E9$2&kBm"Z+#\/VL;IT4lN?CYA?XM-?b
%V\8Q)\G4o@im?'3lUr>d(Hct8T?FD&4Lt(N'&i??=s7Q!m^%m]5M.n:TM7)P4?^3HXREg(m[o[)HiA!]9W`dn>auQ@+PpE3%m"uO
%,QDJiFAuQ0Z(bbco5a8fUoS^sBs#$oRm5`d!'beQrS(\Ohe4WhSc$n*b*UZ$=8.<NrpC)3PHoLfIX8RlFL2"#ba-RnMJ$^+/%r"K
%c[O@Le!KeeIQT7eaVV`o-h!Wc/p#a)[nF#dcjW#'o\kkmidBrAoR*R-n*fP`*3mZ*VI(on<bpt(&^Bu=qq:8nLQ/]rVtD-,p1)lS
%=3#_04rN(4]<%=Ak<JgTHsA;&hT*[UXh_ZrT,)fkZg'_n<IO+%ARkE&Fd8)T(,gTJ`7^-JV>$U<GmXfPj3ru0r<2\a[8hKud+VSR
%cM@0Tqu+gkX0&kWA$aRCoSp1`.=E]4QB%"ac$+KG&,T]Ug`pC)^+R_"4l?!?HnMk(JLhD$,BA-FYJ#=N^F3>NpgQ:bNSG9e8X1[F
%<5KWnC_oACgAA7kn8Re(7)$B`^@JPVD3g*n\YkK0SeTKl4?B/L/q2[VqRp1oY[p$iGM:g7Rnr0\RFQpYj&>sLo[1?)P'Ob\cati_
%>*:f;Kh.7'r&fX)?9BWRjhHoE\?UtU@'QqXC;jUNZ!Zr\^O;Pp]]2Z2r3fb'@rA;6]0J%En>-ndlV".\g%No<2sU53`qm"GdR9ST
%])$*U*5Ue1j7_?,q;M=B(Jd8bO#*>,g4*D7bi_1]1=s.Aa?A2ddgTo.K[>d,#a!Jc/`QkW&0JSrN`F?;pStamiM`;sq*?O/<dji8
%<Okr/GtVE\&),c#$2qd-b=!6VOW8h^Z;N4mk<=Ro?$mB903iaKe\_-Gb+,s@Xgqc^=6oT@L>#!O+9<_j='ogHHnN'Z\\98(3;rNl
%EcG<qQnPW)O7,S@I5arZi,lqe>0K4c[-&?.@Fq^.onfF.d/lVsb:s-8Y4-K+rY@n72^b^\FcJX"2q7O=+hiD3]_>r.,<to3#'i7L
%OR\>*n[Y-Xf6B'c+<45@eG1#Z^Gb5#;KrfaCW6,*>2Hmfr9?SQE--%sS84K;BANfY)oh#11LWmi*RUe'mc$WBhDokcQ)B+<Cof;Q
%('ZFE?B97@AH#99[Z,`JHZ5N7k;V:7caV375c/5.n5<I`*uPC'_93pT06=G6W@qMH%\,n5]N9htrA#I$*Bm',<hic_WBYP57l!=L
%\,XAa"Q2p+pa8.qGNO(_\3r1*SQ+eGIdmf.^rAaM:H6nH2RL/;:rjY`Xf%!LRCs:MT.DPHA0%(ZjCrF03G5l<Gbql)O([pp8Y7j\
%X*Cc`f9YhPIXXMXV,_f9Hr6D`\`9M@bp<2_o)jA;c(CLb/qcTkg\3?[C\QZR.0F>F7H6n^Sr(2?A_n<j^9dP0n0ie7H)(*a(opfl
%X]8Q#a#7_?`N!5AFti(g[gEUHf+E\k3[jG](l\(-cu?[;V6kXl^0&+Chs$n[?afoO]D"7"MiUas4/TBL:%J54HU;p&<<pl,>D`IY
%c3a_rECPb3n`0qCj1DL(--a=!Hh6e)ihK6nfJG[Zj9h#:SoWYt95WN3ELPXbDLVV7Zr,I-^MXk]k3%ZDVs]Gd;nhPKfOEQP5MEde
%/\Qr3l2\G>IunY#/_oK@18o+?s8'hTl-*%"9+0pr:0ZQQ['SW,(=?j;CakpX^A<04.=V/of0F%>S=BPG-E*iYAkF"mirp^jeE]o+
%/)JSg/flkkf^5$mVo>uWDP_]Jb1EI__FX!LZheh7"<"&T?JHA*Fb>VUe'FME+,?H]mc@'th.a8oLHpUNY5`sG[IF0EiT8p_+,+,$
%lhps#_B\hfP1mW`O<jY7@]u@F50>o+@m0Cs?G%\X[D+7/2]`4%h&/AFq*bX[aDX$^D8!3%jjJ`R4$+P?e'He3VtkOj9C#HO8!:hX
%/<XAFiYE_2U1KhAJa*K91:ODMXoBg3O#@oW#H^bR*DNp.+.@CY-uJe3KdW.NP-]%B#MU=RG.6Ln-?hHnhENGU=8@,c3HlQBP9#rs
%!bb(GS^VL1<f2T+T$s14aUEI->U\1p#Gb3m(H/JKesE5ddPKu2$+lDHBfRUH&X$!dqYL2g[898^c$"B?E1%?0ZGYo/$#'^[2u2KQ
%s-ruRa22uQYm-RS+0Y-O07DNd7q;3q'%1?9OZ*2D!RRG:Gd:C1IifXDgHBngoAQe@N<Nq<7RNgj,=k9>T9;0@/j?M/Y?sC>KBP<%
%m$BppGu&EN<I[0h#$%e[DiVsj`3O<IMK@K6H.T6\QO8*60%BM27-B;:^\r/7B+7_.gNQ\F-BC6@dYa)L?IfK#iKltC1^sk@9?Fs5
%,-$%%e&aJ]k$NRBE"`jL8\sHS;Wn$\p[ElVl5<6ACW3WV\#[3?M'k@?%XV0#pI*oI0!C.nO[F?)2B>T?Y]oZsO4FY17Lff5.N]^R
%V7mU?Ye'#44\.ibj_V[Yg\@H:G\=2SU)*W#j?^J+Qn.MT5-WI.=5+7p9BSrZ/k^Ge5F9X&qi?:+1Dk/u>qtn'cGnSij\Gesb;gfn
%ZqQMTb-IWMo0G+aSX@B`c`_2eI<i0`e9=]r_O&G!3oU2geW#i-2A.$#AR`U#3h<h)9&2*`g=^BiV,"RJO1_s1]iVbO:R=:ne@4lu
%Dm!?qbPjltnm.G;qZ;iCDJEC@H_2@3D\et0IMC:ebB6k]f"J15)S$9aqrA0u3T!-4F\Xalmo`OnWoI9]Elb`R>=sGg3u@RKNgG3h
%\uT'#9(mZ'*eC7O`/Ufoo]rVW9Ma(/o9fKC6W64:h",<mF8.n)PS*mVop`\n9T]&FAPN/-Z_l@^I_-Hs3$'qZB\boQpV5kB\bi]:
%A\ZNEL&#>-cnD<0fe"VQb5Bqb`mu#gTMO<T$]4qSH:Gg/Ursb`4Enud\f\U+ea[LQKno',#65HNpk`V^.I-YWr;0ilkdR[8L8.uN
%KADu/RuW15\uM5.JXii(VM1Y"Fu4ug`<X^i*EW4I2EL)tJ(.Z^+12m!Xla;o;Blb-o(0Tn/:OF35O-hkVsJ[`%*jkYZ'2XYB.$c0
%,=oM@+qOZb'TOO8a)C*))nPm6O<OVh)"PGMr3(hk:c&#I,M*IXnKQ"g'i^@pGA%5B>l&eBs80R6!1]Zf<Ee/-+S3ntoSm#=iDp"4
%!Sel,>6JV44#;UFCs5r95OK#5kJ'PJfZO,Do)9Xc>URd>VQ3oRIWA`g#bQ_I49IgfY,\MA5K7T/R`8^fL1WCLF!5P(4b3>RQPlfi
%ZSg8Z#./HKWAD.`X.IdsV\N[A*&0*dR-o8\__\:2_PEdoJ`]dO0B[&P-X'O0HSDC5dV-sLH*h:$oX/F[3S2g"17mHMb$/tp*;Z6f
%H="nH8<V?/\:mT(_R2ptW4#gIU;;)PIbF7MS3`pg1=Y[<M3VY=[d,rbCj,"QMtToj:/3TUDp<D)0LK":W*,s7Z8nA,cB0pH*40Kb
%giI-jbFWV"%&V4[eQa]hH&sp*Nc!0X$/-:<Q!+S/MlO\l>rE-DB03,0ehoJu6k_jF8,YS*T!h9"QmOCmOgq.IBhmLHV5W(iR3$Zh
%7ZNj==1HB'2&lF:F0oeBf.md$R`;t.Q?-aB=NR63kp-a(@-;XdP0J)8cOg.5BJMAX[8dk_V^(K4O^LQW<]i>(W\1F-:FL.2:Vs,p
%",-4JJM-8A?HY5YCdh>eK4tpN7tfqOoO$F_D31K`1N_G<MlV2n,Xk&3@G5_]IRKe\+l.94%9XfAK*^0RJp-CnY%7r$,TtMW*i\Lr
%@2"]!$S?+<[c44g*2689,&1A+/3@LDXt(9]d2EVSZ==ON#u;CU&?11fD8NYpCLS18NGDaO9ZJm,=a8]07U4/SNbS&upkYBY,Yu\;
%q*)\$]M=q3'3N2,e7Rho:c#N,[s3Yq/U-lDaMGC=Q/h,E+GgMi$eRY6f+^?;1_\b+N]7[]V]NEAQr(%:!501-^PVq;*QXlT"InH(
%L'h@#Gq+XOqI%_YV@[aY,@hi]bJmV<743h<@Ibcm*.uX)HQpj1S'sY^L.6SsMqUidk84sJ4"WgX34`QQ[BKq`9o)ir;+RpQA0Y^<
%Fc@ZGm3t_TT#G?mM>g6*E>7+<)`\7RP;C>%dk.:+@X^`jno5,0``k9kd(]a"L"OhLduiu?g*5P(8.<!d7%nJY>`ZC"UE)<>-H&ug
%Xn+d[`'RZSq*RK3pert?q!!G[%H9a-=>ep)DKoh<+u*f,]V6mO-.*6G,Dea=4@`?[ECJ;@eQGM,[N`qI"K@O!@f[>lD:5-\nlSP+
%=`0UgEOqjk4Bg#RBcn<cJiE`8mE2bWmR_Lk<(!OV:?%jk0G@V8%9Xb<#)ReqW6QTSW#k>&2]UP4"7TL4O2Mq@[h7I:`MS'o0!F3[
%=%'k_.2g#\BH3/AM`u5f1m7N%",YQM5S5TT+khW[PAhhhfn;GXpeH$IY9Y*4*0Gj<;C<!lg3")R5'6?00SF>-.(/8t#5AptTp]H>
%DojfHTHJl/(9'JrAJG359=C`A@,"&0_AH9=mQ)UWBUYSeJr5knTb1L`I%j(L>$e+hY"EJFUuaG^[^a;R`MgbLY7.9@DH%d"W6mAf
%pkXZT:<b,2_Iu:ETS40-P65OrWeL7c6GEP7JbTY3[m4\gr0Y3hDXfHQ%(2)pP12EA$W<75:2hQo`rSG==\u#^2"%7[8Jp-fH]q[o
%nUk&p'E"`=!Zk#C@S&Ke;q:[\1j^L:*$LdG:deT"*"\OJYQ.p/AVNf6XqQW=BTpi<OQNEYl#/.D'@Ra9?r+^/Op!7g!"MRhGbsk"
%j>4goUg3+K6s[`$RS"oX60tJ[,a&S*R)bs>0p!eM,tata,[#tll!'=(RRJ;@_E_]-@!H3o@0\7o!QIFI=>nlh_JK>t8Rn\AMn:cZ
%JE@lV#[/dX)&d0$Qad6C!PVJQ_&A>"lIR/U-6Xe)_h42lR^tkM@"TMB11hcVotXfX&.F`8%P0mJ<h/PZ]H71uTp,[5IL_3#6@+JV
%0I\B1Qqa*?.,+r=_\0c2,6OsK:3)8g-S-XrHfP[!4sLLA$OU>_G*)!f:`-"e8@\7DBLcM[KY6H'h&$-h$1UF#Kl(D"@M5E>O;Nf#
%T;86]d=uiRp4[1f0KjuG1b5-*O%-R,P=37%T$?uD9BIJ"<)k;7Tu(7`aF]/g.9DplFXU(6E9WQ0aHcfoo%R\L`$R1ZQ2kH:RjlR-
%AhR(4$51W"Ob.6l"F7/lG!B\B<[iPT=h.!tA+)Inadj1bV.@"JQq<Xu*\$Ut6o@gC0dO+<ktFu;UmQ;WA^KBsq'1b#ea!g=8@.K0
%B1R7Q68HNj9a-AU,YUo0XU.F7Oo<3^&8<"CLF\+A;PJG.&XiE[p]fP2W"s3l1Ka$J,gP*8dRe#NTEf-t)p1SsSSJmE.mGa+9ajr'
%aos[,c_\P.noOn.T$.f//J/NXHrK4!Z<^'"Cu@EPX[%dNbJSlG9Mi33LG".:\rgr_Fb7_c8H`cb;P]%?MZYr_8`WeWM1_?:3m8\,
%f@5Tu(#j]K.ln;OR%6LdVKkL>l9saF91%=[@7nFP+\lE4(OIAajB>Z;F:@[gE9%@u:icUZg,Af[E9#;SOrYn!YQ_WNHaAB"9T!/4
%3CnPH'>Bh?;*h>m"4H\7R6hnZ3Wr)X,]jfuT6gJhitb[Il58H!+GR7C9aVW)%V-.GF]'=*&dH`#Gh%>TUM:^**$+/RUo/(167e:6
%@;Crh#)j39>(@''O1UP,Jt.TW^^Mo6FWlkiP\CQJ3tmnq\q*=9(Jl3NFE/L^2:$6pSfu#/&CTIT`X#a/*/(e_onH:BA>PHm#Z36L
%,f:nFKm[rZEBQL@.1A#`&N4)365S=^+6qtqCghsVD):iMZ]T52NC/G_+hY@7=Jj:laB:8-T`U&Z4CLYY&>ZV:)O[oQ8LXpPN^uDs
%l8Bt6Q0GRA-%Sg_3*SD1c#QL5Q%N^R67K/7%eR!1%QLK,M*)OM>o77lk!gT>.\Shpi`2%D1n;(*X$Z6D0Fp;&/L!1Xe='46Q:3D,
%$#@A9^^"$62K++62gkk]Jg<Ri&C+RX"@SEWEaaTh?npXl"&:Pk*A'ZG!$n$>3npX"/+pYm8c9']P"qqUfd*=U-7f@2s&T.0du^eL
%6VNY6-?%[kqQ_,nW6HJ<h.?QH$>fs`QMSc95qcYi=n!GGbHNS>(_Q,3#pEpobEsVU2SqL5R7SYo8^)e]Lf6k"]@:;JfT!6`9T?Z8
%Nc^HcTN`[X9VMTOc^$8T//89G#+/km.rBHn*?<C798Ha'AD`C"MACeH6OYHg-Em_H:_'Jb>=ZX;:"m66b:M7RgVl!WRG0FV+9]JK
%Gf36d.oB*0'S=eD1QRi@@%#CfjN]d06I7A>1ejo*K7dC>/uTkc*p+4N,V0?plDULmjRbhgbUqmi;2Ze!*mblmdDaF2@R7n@)inBf
%\/uLY+Po9fj+t?8_=@^:Q@C.bam-0>>=,+kVlLc'^Dh,9=uT`I->4YG?&gS"dnC/Uj5,[q$Sd@G,*fut72R=^D6hVc"p,`5ABp>$
%1A%A^5Lm8;AB2'_T,Knt0g5I/%]I:!k!6/gQ7*TkJhVr*9"#ML,//d1TNt`u#:G7nK:Gr(TJ9"VE]b.-1nfOj&9K=:2&hR,6Um7H
%%>@ogJa!RQU06D0i[!M"@P[`-#U.'Vel9oq6+-#&)!U>&0S^\sjLRbB!!+N&"m1L@$O0HILeZ&hKcZsAa8e!7+N3S.fE`a5Gt/dS
%#M>4aa9s=\kRGNQE=i"'?q(s\&S?p$)1k;5fFW;9J-o1aTN;,PbSS\r`;8h`BQ0"=QC^o^1ntN_&)/5Wa?!!";]?XL^hCM])N9)Q
%[B]"lcRSGf).+/IUbjrc<L\`,iQ*0-dWe/@,ZJ#^F<OW"_o/2R8Wp'M6I=r7-mkREK/Ja+VMn'.2C@$_$oARR!0TlmYYWo,gCO<Y
%Nu5ace]C5P$t3FoZ:rp2/pmc":tcPeUBj_46n=9MS1kU"&-u(%=>LBtLQ#bWAC5HH#sg$R(*87J/5HhD8Hug4=b9+C"(D76@Kb'f
%!H&RVg>Hof&f_PLE7PF-Np2-*/;/qS.`m&1Ui?])+LPu7*WfP^K"<-ql60^$)M0VYOXhPWk<\04#Y5LMObb:BZ@nJMqS@AD!$YB.
%X@\(:U(hJl_LQ;e$3TQ)q#pnV9huFc&WEP)Cf+^.7+DdgT'00jas.Nr4LclP.i&8O&d<'@+>Fa]R`D!D=oKZ]"l*,:<Pq`n&RL,=
%-Bh2'5kq]`9LX9R5^8RhhZU6Y5rlpl+&A9P-A#BV8Jsc+fSk'jZ[bS:6jfZF@*er\N_%KHANcT#<<AJ@kTI?#alif!Uk38Y/gsJM
%=L#tsA%":L(AFW,gIH\,9D^_9L@)34mBC:ikTZ&n@;LH%AD\\LWNU#,>sbKtOjI2g&^R\8SHm5V.Z>d,lnUaR_E,+Qds*M30"+!3
%`H5/pTmdQW8U;.%bS5LF@@Y:lA=0M+J'<N?5\hr=keK*=\r-"Z[DY66X!LhdgG2Wf"s\&9d%:8lE10'(F%m->BQ3oP$a]P$QOf2N
%$PtbM:+kTji]^lj1>q.Mj>:Nc@Q]dsJU\$Ue:]OXk;[3)5r-5!E1BlT$Q0m6R3lg5C[n@%%6>Os#BhAL<8%G2-&^Ht,;Bu4>nUn.
%FIn]gM)Qt5kri#1pE<0\9Yfa8$0`a?5h==SiI_i$"%BY#J=%L<n,bA"AE\#&TpBR@X[3AbFp^Ha^*N0+/I#7\j=&"W&k7PYUeg&_
%+qOq^)E6#@/i(Qd'Xnss,VgUf&<R<Z"dCK)ACSDf72CmX/FF5@==9pSNS8`\^B(dPVHQ@YKWp0RcIq9IE+[3J7G`Q+506:M(1AFU
%Hr[J)f\M=pi5.k1/D8p2>O<U%8FE+/.N+bo5pTT'^.or^qUb[?Sn0k%,.\u+bo3E*FL04X#6[7cK5!Y3&#Q"HLa_g=3&uOJ;M%7"
%_O*+k.5k?,__Xef$_@cS%e)2cH'-i*P>EY?Nh%@G5]VtU#t8;J;bl=N-OLKDUh?13H#*u',<3ub%[%fj^UTEm/AdKfAjH+s&<NJ@
%fR#s9.;jZk7"k!nLe5Y#OHWRZ-T+cV'!91Vj$j\:EoF9[WF0j`m#&mgUP=p;qs^bO:@W%mM>GNlRp=D#Ub3k;XS=n[6MR5=/9]+)
%VT!*AMa+]g#-NQq.9."ZE'A$2NNJ_\OXM8r'QbRc5n4hcRY>E2[1IPfS?UYm2FIOB"nNp=aSA^CHHeeg'4FKI;BS#W]O4<uASg`V
%pWGsBEhNhDLe>bsOk-$ilOa(`k-,7^J5M*fW$<-k')8^8NcXNJMb&tN<0K+daL`Z$JUn#G(PF)F.W'fJa@Lr&MM'\m,YpGW8X9V7
%GXU[HA!u+8P30\-BXB?XTgbi^$^1U:#EnkJJnM\q=9+^[ofTKe'F<mo5("4VeB.H^(=W=u3j7a8/KEuk5SWK+R"R!u>O:EAMpNLM
%fC:XYm+\4Y"K>Oik)9^*@]Kbf_,uF0XW^B3,M7bG0&j,uK+<Gunk9&6Jci24m+K8\((H0HkGiLH@/5V1,D$$<QqJW5bL:L6O%Trr
%K%&d'K-1GS\o+fh.T5PF+jhOi9LC.%OY9YdK-a+3"GaPoO:.f:/o5\6YW5lf'#ALTemn8KOX@oDg$7#D)NZ&9^b6gZj90$^Un!4k
%kmZX^&R5n,L/Xqd)+=TH/S&@Cr)D1a#e47d3Wc;sD"s?!bHcX:3Y^OEj7B9UWh@Q)%E9Ol-K'_OTk#NGeDhL2U>2CD.bK;Ek+`au
%<rmn6.NH=tlnj>j<.kk2a$_*^@<WB+Q3@5FbVYHX#4(&r'8@(5L1$h]>14'1K(n99,/."hm_0"i6+VZd^+4d:#[RL:3]nOC[&3qA
%W&Y(R$'2EG7fd%+g:"g*Z>GsA+[(EH">\m4qd3[0%aRHMPtNd/S*@L.]nBpIa\0cG$fO;1e0/I<>LYnPC*6X\$8PUC!^%H4:/m=g
%!.';HV@UJ'L+jZPCh*teo@E#CO=WlV!i[Db5?t&jc/N_D7+oXp0SL'#Ln_jRE'C&S(3C(G=e`kJ=\Q2I2MspW\Ro'n:2)X62\Jco
%N$$?sTVfZC#7F3uHAb]sQ7XA["^_bB#k6lili[GON.YAubAJA/l2dr)jBP\a=.l!MA:G.&i.7c(XCKP/1QN<.Hrn82GX[c*-3cqj
%9T,*P5S(,iVh8%_!()Nq.K^eEE?3P-;B(X5f\D=ar,`Q<Wf$/8iJB6B>*AR:K>BU*_E(4,$Jh?VoLLnb\S8=V@Y2+CDW!(G?jp.n
%nA3aXjW#>C=:;O"YjcU@c?&J/:ZS'4bOG,%)iAnD.3j%jM*1kT9h6eF)XDQ'$AF3,Oh4;c[Z@p'o)O_a7Ps(^Pa`maTHjpcb=rn;
%>EgCo$k'OH-lXoY22jLd+_:P`bij]fN?`osR8:\PQrHB1&/S,oqHVtrJam$2AK.2se$tT9oL]RoCsZXIWX,niKGNNd,\^*KLIU#&
%\dVe&f4#kX*c7TPR!6V''*CB`kB^ZJ,>W(6`$gGl<ImI,HB:iI;FQ\@,QM=i>Webh^CTho<$]8p+WVh?\^5k@<r._fj>7PTW[8Fh
%"Z=>c3RWpXMoB-624GlN`'?s`eWD"EG^p+B5QMUa%k:(710j1''=(KNQp>)3/`<JZb]8_??YngH[a,7iK^mI,p0:0W&%HRP8+EV^
%4bG^)gc-@Rl?m4"F9L5r;jA_p-',\H&>5!a1L"fJ.SsPYW!60/U3*hO*4V\=CXBbJ'&"^RGa9$Z3g(`g$k\_s;6k'*#bipZ&/[t]
%8E=p[/u%a.m3+#'cu,hO+FZhN4),uoP/]u(&]H8hAT/$Jh-s$-CXFE)<!R`+e=J'^YY;%iJ3/Dud>(^'@)DgbN@r6tWn5<%FW;5D
%Q7ImS1d_g6",1M(F?&9K*N_kkmBDj*dd.aL9hA$QIa9?:KXY\?Su-QdOYiW.;.q;pNso0I^`"5iB*Mi#5R_MPk!#pu;F/)IMZGZ'
%3Wu!J\rA_8M$Y%$<'Ih=EZd>?pS'G^-ssp4\F'UX9H3&+=JBsT;qV-t.#;ts3$Y`.bg<:o<-?\.K!J*9eJ7=!-7f:T[3uV&&XH66
%W(]O^(\JeR>S&,<62X!j5h)'7H(`X.U6g]M>?DhaUD[(1Fgl$](K:/N9_ATK)W5->Fmh?m]qdPGDT+3C3u8Ln,4sk4U4O28(gPVq
%ItcCU.JVJEfr60^MEV4GK!'X7MLYjU+3@n*nJ?F(*,7qNOgr:=Oq89t`#q.b"&3Je5Ra^[=Wo^WVJ"S:"q>lVG8%(];r2,u!lSW+
%NKQ3-R>uDh!PnMO&XnHNiCSZT)n?([lI,_MaOWd,W!f9SQl*icaGQJR@[N00kdW14@3aKnQe7?T9Wj@c#3Yc6JV).&[2aGD-miqq
%lXeYTGoBaPAhf@Ne"BF*LgG4<Pp$Gc\A?SG0quX[I]saF[)>/t'qJGk^h2.0+$i0toW)DnSAgVe1XM<G@[UK+A7K%^7<@r%NIm.3
%e2Itmibkup9i<1b@YcccBgsm_kZiUIa_ifa;.7Y."hT)8`=7"Ol'ZK)0U^+QcXak-6\/[DCiXJD0XRkih<RYa&e^-_:<3/BfI+"'
%e8`9r2DdAn[Mi#<-.KF=*@a-7lo)__ZOdJ,#S\-C62P'L5[bs,ViJ-8+Y#5!'1X?GeAdZuj2,D$jIWm#7'[B$KIc"VN<Y;S[Odh3
%TN:%J)7\*;$_j%'$u&X2$-GgUDIc.^151B:,mT_+-u??-AH3Hmkn4>t%2h+b#rjuHMon+%O>Z7O[RLIV.;;)WK\4+OV?s.0d9$cf
%do&T,7[g)&E1g3I#u\r#SI!K+K*i?(@pMl@n4f.#,G]$U>TJJ11"jDH<g'jUE+73c6IFkW+]4g2E^IJHeM"?YWf[]o6s!%t0dn,o
%1$EQ_2?=!tQsiOTM5uM=fAO0*Vhlf.'!CS4U=%so2Crs8PKV%5JTX(\f#FYoY_+)$cV$,`jXD`0)\SH0d9T]O&gYTI'j!F-c`t9>
%N!iE*(<(j'k<Lu?"/:E!9EW+QBmp_.OgL851!)d8"C[#/k.ZiGCdX:+KE>@P%YQ5DUkla+,N9aNQ(g^r^$_2(l5n"L-j*FC:@&i@
%Ali6U7#2&V&u%k&\12;-[,=[_=u`C6(+t6;NG0B-2u'f^(NF.s&]Dj`GnIaDBQ;]$_`\6#ao[Q:+.'9L<A"^7fB2ose2jWS*,)Vf
%`VfclrHY'RHH9Q^>'?*rY!hW:X_D33?mif1e=])b2L!6(KRqA/MhkU&W1i/m#AOEI\C`3oZ@k[L-lk]&:`o&?LB:n'[5(?^4;^>n
%P%-RICo1T-`+MZR=h%C`7c#iAJlP>HYQa3]dDC3_/&+5AN5L7%%,-=!O:T\hggbo#O+94tT5<^t<"^+@YilK$!uJ@=\=9.d<"6):
%ND%KkWJ4pclTHjO7nmPd<\8pX\3SG-nIW9#`B^H%Tp@l*b2l<A0t^LSgJC(O)OtkHcpE2ELi>0!(e@Qr[0hP7F"trTj`-@dRYPo2
%Y-UCd*hjBS6,^1&?tg)BAap?E4>l*[+>#olWl6AeiOK'GU)]Y7E1oku17<s4_Nf=I9p;(m$MN+kj9QBW>n'5HE*#%^_AH@.VLt@I
%3k"OY*/D42>[i:3ct#0?SqW'U3LH_A.pO6&mNAi-3c[:="X7L8EZ`">/aP2RY[rV$I-HUC$2,6g-O)>Q*`mX>I.n'.3A/TC))(8.
%28na@#@b,,nUVi%*>B];i(Mp<,XRXp"UAa!/]'IX7"q:OM*%7L]NsSO<Hp6T.-Qp5!sK(6)3>B(^uA<<ROkrg;&^EIgkOko'U,1Y
%7hD:sBZH&dfLud%WiCk/lg,f]<9ouDGb^=WU)8oe3>0l@K`TpO$I)WRi0A85"`-mkMC.Vu;<b(OAQ6K0E)f;2*LC6F8t7PCTnFC/
%9>8u1";I%8?Q!@h_[YTE'=brXgG!%f"=5pF:VkL&Z_7A<f+0[jjDBa)-DL/E2\)=icnAXhTsM--3sin?ImEd*'3Z$.-lrS'a:[!*
%"VEC,>qf%6@5+u`J#'s[Z#rpL!H]KJC[`>hfuS_UYRYF$3)0YP4*FRC7tQISV9>nf\;Fg3Wm09S<*S-Fi_h4rK?d_?k(pTC*b\2U
%j-u74d"@hniDOl.?[;5=Ja3Yc>nYbk8E[hp,cu[64#"L)L?q;ITJ6RO>]q!XV$0Z\(9D7<7.Y@F&!TD2OC:BjHUg!B1rM@7Wl,^8
%%V25%(4H:/>QjnG^<)4?2P)>TqfFS3cO.^t`'$D0YF,6,F]@CZBs=?E6e0!+#`Df>,;bJ!=+rW^b5?gb4?g$FMJ*,_!Y>qGe<pFV
%U+i)L<?hA16(sQOI\`(ZMu/&N'%_@p1lqnT2=A7(CAm-]^3kQ4/[qD(#V@N`r\V>Ki/!%46ISIuTTQEhU+4H3K^#/inHZF_pZSp(
%EeFM60F)2"f8)G7`=mLY>Ep+6mGK8#cLl[Q\C<"9)EZFe$@`N!/S'an:2"W0N>kQXY?T`?C2lg9/2C46O/PBd!IeQT:cI$.\>bH]
%Nj*Y^oh8G3;]H1"<R)EL&D.1m=R``F_?!Ij\ki_D5dZ_L'BHZJ>c^d6&EA+cnpZeBGD/mWLKK?Z6lcma+p<l%VC%([,EZnsn6HV]
%(-2YdKh]*%mYuM9RRHtMkX%4fg"mIs2,:6g<5YRmOiHE$O\^jUYT.LWGle]XYusM&)32enP,K$<$T8IOdZ03P_.k5r`0Ni4&\`t:
%;/Ri7,V>4rkqXN;9Z>+UMfNOE5cQ03+j#(nVN<$#E+ma_2$"Gk%Z&Goej!LTit`9mO_fPZ`pOL2MmFt=hWTV&<tV_kK,2b<Ec%RB
%MkK9$A0Omq_3N^C4!6l$fVG"+#0UQc!>$(nLd)`n3eqCDSU3pQa79d,"X%W6mio<:TH#m[4VB,/9%q_)[UgU/DM.N!-r.^seO/<(
%kmGaf@pu>'h=#3f3TPrn<PDZe9<hU1TgAra%2WJGOiOq0P.Rb#bQ@em2og>9S<=t;hue8ABL3prZu[1,97.$]=+HKEpH`GJjDoqH
%L`=t^@8ocMMrT2))rL9Vr^c)(6(Tdp3O>C#Md<RfJs\=h<i-R0>Zls.&.2=^idgs[`N^C;cBUL"PM([Z&!_sX[MIKIlaTl'MAA,D
%0b@3+g`d@5;1^$r;o`p9YC>]j`C3p_Yi@Gg?h@n5@u:(I[!b<g\Ac15/mg@fiJ3:)'WsfBfdRj8qA:j<W]Hai:*@.[(0hf2mfg#o
%;\F:o9u/Ft_KQJsM@lj,\NCQP@n!P$k4FlbfEL?[flikfp'+b4bL2**BHZ&^.kb/"%3R`p1,([=_Pe"O'CRYXBr(HsIW-P<`5%Z#
%Sg1>^RRlnZHm:jjg_WO_:)_*2aMY>`JY<*'/8fugkEpTfe3h;H`)R76M._E&A;`QV0Q,Q9D(TY\(Zk:oh^ZX_]f*Ia:KgZNL`5<u
%7Pc@Rl%?r?OPuM6NNaKh,/Fd>eAR&<%L"/\Ht-,Gon8oO240e'OtLg,$^06.-G7PHmq>.lnM0aL)Wb\n-";\K>Np_dr-T!<UnOcV
%1*df+;rnA5'JSR%'J*g"$qaLa_)G(RM><gse"GcKA158cP?$DZ%rh$/=kn[S4I.&k)nW$]8JeFo<,M!P8WtWo9q1l%[i@8ISL\E5
%:=%$#-V^Ucn"Q.JA!0@bf5^WSHed\l-ua4.AG/u\g]YqL)\Z]5mr"Ci,NhiNCB.cQ%Xd4I,1>NL:6#Y0N$D^.Xl9p:='/OD/&,h0
%^hr4HFppif\kNhUln/#5'%u:T9%PXWiO#4poO(9V/?:0.jLcZVCXh]b.[_Da/J'iqC^b=80Q(FJB]@ZaUP%J-(VRW&5l*Ij@Z0u:
%8f/C(U(5"/D0.n*.tWk^'kIap/(pG/(!f5"ibD9E8h_R3!ga+1]>\f42q8UnKI=-<=u69;ISY"nBd=FeF]/S1_q[Mi011G/TRQ=L
%Q-T:EQB#&6XAnL@.qC9&G<%70f724cW(-F3EoUcX_YZI*)6;M0oL)X5Cj7-:_[H!m*W2q$K`WIT'28;!W?e*KZLKVC=&3%f!U1Jc
%[V0[;P:#1]8[c4fdi=te`FQ4Oe#2Yidg1JMr:U[SbMl6^#bZQ:2JErrJ2Op^=(o8Qb#'+\_:q*a9efAj(fSj<^ZU6>@SC^`Lu`N0
%1ek.N&rpCB;_&eBCaMZ3r2:"Yrg4^(/IC%))C9I0q.$HS<lKrfR:aPmIe,#F>f+2P'Utkt.Gdk))@;4q-,h^8d;i.3g[B$>iJ[lL
%GS_obO+,Rf&XKY%a[F)E;iW7.'X)['j:$SU2iDmVjQct@ZZp;HhjAG'8&AhH:>,\2PZ;Qhn'Z23lo4LTZku80ZR*b0QT9Nt(O2@c
%m;OTO;(N2G-#FsbPU!3k]"6T>TV%Z.h'Q39]Z&.c?MD($D>=UsZA8ddr.(+\8iaL+-/5kSi$t4k(X4r0PVeSh7P!^)JFS8=8QuOP
%8[BXiN;]nK:K20XX13suF+`8-ClldDOa>\)2%?<V2F2oX2AfF@5*H1He2U#O_egIC&Y?&AZZs(NrM,(@^Up-P22ZGdEN)@4;58Am
%&G^W)_Ldge[mU5KMB4<:@i#?ubn4A2CEs$FL]n"+6`*'WYPB?6l$99R?X)#h.4C[Pj&]fXEC#6[WEjA>HkP`je=XTldMSN;@D)q-
%$0A!+$Zh^lask-C@&@umE.p\9T\gua`=497->aCmR"gPP1Em?^$f\6E9dO"9W%)3ofp6SX7'ESU"KS9EG3p!Rp3W5QaKbs<n?Q#F
%JH<h1LfN5(,5O1MG%La+6mKI)'K;b?Hsf=MO<!G1C$]5Q>Yp4b23OrM/aRGh4G1gcbaKLb6unm&MohokBaIV2bu5Vp@cdq7^Y&f+
%bE&eD@PO3B!'HCD.Z$lW&f\K(#\P"+iqP8nOpklX?m7th!'%Q7.\S+/J)d29gh9/C`pOTPHZoq+`*88$DQ's2L+TDti>/T][q-hP
%#MLBV`_X$fEap*g^mWk+i>*Fo*E<cVP00nil";aO;7;5V/R:p3`n_1?7qXP6;%m1J<s\VbDqkVk)p!K&`JH2n_ij2leJrjM%A[EO
%SXmk5*Ukafk/8ch>T7)APn91&+PpUc3XZUQOtgmtasaurU<;hu!uYhsZ-)-Zi]Kk7GA4Rfi.u7jQc!*WJtXU<j#=j%_DS;RhbKMl
%RV:1Z;4jcG1*9:<WWl>n`&I-J;<lGrGG:!O*a?k@^4na"me?7jFA?7hQGuuRERC.^V4!bt85m0/_]VAp&Wl`d<8Afbm`!0'd%5kt
%[j*Bb<*'cME[*1Y`JnQi-Om[l)"u`/!a*YU>`^<c9T)t*/435U#Cb'pWK(qF3QTAGEN=U_N7h%fpHpoIM4+U/T:\ET*^rJg/hZ'i
%(]sP!'H[#0qZ(l;L@_1M"bcPcH!-[g;KQ1QMit\cA2Nhr\c0oBL.)mhGS%KtI,Tj!I$_c_2GT(t$Wm,Si+k$FMoXDfb9+1*14Udd
%DTW]2H&!YC2gDQ^*&4W9T\YtPN%bs#=F<UM5)"6-JffY%jBFRuaAiM7m,b7A#f-^tF%[M+-gR>ldc$0*/.Q;XKE=H'-p!(5eP'D1
%4#/">LIn/o%2@tJ#V6=3psC.3^<Pcf-dVM)[5gldUZ-&jL+XNk6c9>>LDmqr`825D1Up`ufD)k!,-#RsD&IfK8/Fi)NSeo"ETPR_
%W@u/TO0ccM0##ZpC*J5RV%?u*P)Cq2\BYk:iE*-lPZ^N<0JMYZ)`X9<MU;-QTZ27098!9_q5td*Mt$U]R,;::]&FH#1l1=Mn9Pj&
%"S&gML*7(?ML:r1:\a26b!*"??oD735rfUbS#H5g69#nf@d!;5/ppLsCKi.#J4A/M8#:$!0i/Jd-Ld*.r8U+7G%;1V`sZ(lY-?B-
%9I@4cP3Onp<3mI)'GO=d@i<`1"d^46k5lC2<+*h[R$oO-!EC`^Sp\FT@\X7#p6,"Y1$(j5J)s%T/>cZLb8iMC,6Dbo.j*elOLr@>
%Fbp=ENdLj."`>5"CZ\-pF?CXUki+H69[;m@`5F\*NIe5^USYI7WpsSW3nFAkd4^QQ?\*!L-S^]oi,Tl@MsPA.r(IkBS2/&.X"<\%
%lJe'`Ru,gOPq8u&n7n-&:JpB9I;=96;3dZsj`:XXCN0rL'346M\.Ff)Jm=d`_'2Fhetjj!*mDJ0asH@o+A.5R/6N]_2L*Gg6+*R;
%*ml\:1'P.si[LdgGR_h_m3?QZbK:qX<:$!U.PYIMq4&B6,L>Q2I;OlQXWf-I<u#h+INK)D6VjG;Vt58,0M&<jTW#LiGlun;@78b<
%ch:l^`.aR["aR>ZQ5DGQI^b;T7%4TL05?VKe4XWV1cac^Gigk&3DF&NE94GR!n.q-+n1%U-i'`7PN*jY#gD;]29oa*`K8CrnuHDJ
%@0&^G[^hkRmNuqL"LkYG%s%_W4`eRE3_&a8'(FqsSB$MW46)is_j,,B\1S/`iJSLVErSte"rH`I2[^F+7(,BlIf%F#op`G14]U:+
%Aa`2,($9b*c/D1O*:Yd05CJD/4s2+Ci]*s?$6@(2*WiqZe@V4kEH*dh5'T?!,I/2YMs(,5K,dl*p;uVuGT"g#,(\kpiiQ45/I9if
%TM!%N?\hU\/s,&"0hmiSK4*X#=J\^Q$d\bVr(Vui#%%O(9d*$1E-ACYODh^U\>L!!ik99NL!@LmhkIr=@d!LZA5P3&<J)5b=mN"U
%YL"Kdc!R.s)20OEHi98[0pX5h23?;LG?jsW8I.]uAFS''ii7WY'2@'2Yi,U7ba''F0!HN2%F6<JW$:nqb$eGG#/.(B]nR_WejLpp
%'F(=ha3e&-i%Z6>7(hXWCaiu3N,YpSNh=7!ehC3/iE8-E&<eED(84U2ZR[SK['7H:!c]k?L?LH.5jMZ4Y/t;b@@HcAVK!j=B\TJK
%6#jF[/M-5m%K(rL8VA<jPe_eak+lEWEQqWE9p[MOK;;B?DQ'j/"*`9aM%R'X$m6>#nd,X[YUbS;FXJpM**bI6M/6kb9jl836Y[9H
%76QG6TGTGp?P9bAHqOo@:QQ,[%5gdLH];SVf2>&c?BmcGUM0ucC[i!5=i,lp\fi/2`-"P?CMOr1.8D5"9p7.sIa$(O&ks,ZMcs6p
%0BS"+b$c+;T9dj?llimMPNW-uT9r%qMHLBU'GO&[UFZq;G\8eM64bF%%;Y<081mub%t9ts&2"tAq,SB2i;#5C81mQLAAKp,Tu@bd
%#%"YN\+];b1^RcbnO'#Y0-J+57G37.2<57V#ep^"UoI>eU9"l.'EAFcL3S&B_p'DS@m'X$,"7#p+BU_+K#-uQ-!q,!0YZtl:R^8Y
%$,7%2a.CY5F&QlifqP,INK2tSoC.ZBB]59c%Be7EWTXHB%Ps'Ins@96Wgm?a,N&>_M^\A9XT]Au1\+_r9%:Y[H:8&Q73OS(#3K(J
%&P0tOEM4S&J!/!GUVqhDa,65f;*$<]//8c"KIM7NG;+ZEar/P)Yj07RD,Jsp><5V+K'=6`1nkf"pt\X[9"4o^M$m:&Tp3A0Cucg!
%io(fobkT$ZZ;?K7Ek8c4,]`Gqq1q&GO:GWOD'lnoXtp%Bd7]ZP;b>F@f(lunnSB:>"gLugb`4crB]7"%@=I``@];I@g_>8r.<l#2
%Lu6TJ74,br%N0rChe4_Q,Ef1'.NU$Q2I%A+FLLTGn]Vs5(&p6%%!u'>`[=$h.L_#Z-kQ[I2+UFi*WGR7`&;&,nFNroI/4irOZc=B
%X?8Z`DM5:V!QtgoNnBjY%InmdF>XkoI(',;L#;RbB7Ohd4Cl`%$,eFn)SE0Z:Ke5bFA(h-O$,'/P\@Lu#M51.]lVVT.7?W.=l?Ql
%5pO,ZO6!R>Bk]p!V76J#gRIM2Z=QUnHis$P:+(!&F?2J0<hoglFeFAqAt?%&rmnJf+'$!ljq3mW16FtZmq5^WUM&53Clpqm&11LE
%VM(sjV0qKX=SCi7neIieMhCBSY_a9mlsMi_XTt+#JV9+A&"+_Aqa/7(<<1X:9[L!#dY9n$Tn';t]Hic:iXsps!YYr;^kFi<rF\)9
%V6la9@bI)%^[@nBE6ppC`bYiL,obT83A[P*bk*H4,#g0:21_;L`k'faV;`)Q]`=m([#i/m8P%,>A?li/+ga,P>[n&DVU[8uA$C.I
%=Ig.^eodnZ62pgeI/h;(]6)17i&(EJir\H511H[<EEW$tO(/d5WMS-*baAl)9qL?%c!U'IgVu4`[?-4+Obm?;mHEa-5.&JXZi^#f
%V26GAml"Z=R7-?45!4LBn;A@b/VV]0AIV-!m>%ot/7W/Z4H1Jj,7D3[Th)*DabR*l)W]-88*?46KKD(VNtB+[A6,Y%c0Bu"J/',\
%f$8P)cX*C\4I07c9JV0tfu\"/3F.DFD'qgXe`bOoZm4tRR>BbV>4Ot&3&i?k`P:cajL1DS')i[X3BX/H`'HS779n31f%%4gF;rc?
%$!Fj&<"Q%_o#ZjbnNKTn@UMlD["n%6?GcIVA*>*#&tAqPYf,m*q!>)`/TDBi*-;\YK+Z[t8)Xo`$en!EN-4oX3rM/h2dU/(2O#GU
%$Hc;9k5<Ip@o7-r%sq6dkE%Y71MQP5WQTT.GI+8AlM3X.PU%h*kaJllI*<]dPL8HYZU=\Q[6.m_WH0(t-Did<#.kp<GJ7_qH4>,I
%.c6*\*-0K[Z>"]b5gFFV^+\A^=#k!Fo5,gmX8pAGShcQt]Sq00;[ZO8rr^GhR/bnRI@=rB.X%`["1S[i25V7a7^k=7%m9^1O&.6)
%Nn0%AbpfW'qo0^_VSB\TLo3HGEp#C+@YHl"k1$h?H3hi`rXB`<LV;"ka9eb-a;3A-n]VaU@9n/hKKVsS)W3tiq/*XpQho()\.=R'
%36@fs2qc;n[D@W!ee)Xm/Gd5+'Wf2q4TB4'FUaZuS\)-:#;*/6UlGCo@MB\4(0S>\OiUj?NbDHrVKTun#KW)""C,OKm5;`D)=To*
%2rkiuZK6dGXqkr:&=T^DGYQbXj=^uGleQq)ZUT\^Md>"s\>JS)OiP8[`a3V"np\;'g]/+[+1,Mp--C0V%J=?87.d#1+![:0=@?M2
%kc+M*ASgP/A,o0$mDJdj\\Cr05<:3LXSi(bb%(q$0],>^%g`b/L*s=h7nm-tPE3+,ltc/MM[cYklOJJD1(BG0QQVcTid?DeUsdl'
%F%BFu)[d`bX22*E8%%L+m^KuQFAse].kQ-^)!u;4=<)NC^KoDB_esmf\[3/'.:GA_OiXS7kuj0SkaERDe9-^LGfA]Xc*>.///(9;
%JOBYu22]mr^e(!M%$&\,<UM+e5/sGu9S_OEj"I%aq_';:hRHQil4t6bpnUSDGG?TDo`5?nJ0FK6PKqofRUoQ@f,no#VQB]_#GdJi
%WB_Xn0t]&jGEoj:J4qsRI`PLa00tkY#+PSEV9`'qE<&)7R2c,t+-o5[b$];$gS=rV,('1]a*$_Pc]G<UjOoTa!m/!uCIiAUl,8Q5
%>"!<nP80Z!,BD4c/@21=EGo/A/D''QZ=ob2&gn[q0344uc3Wk09u^@PF\6SkWDdkKmkq0,Dls!)3<LZ*^#r.?Ur-Pb,oV3O[3@db
%+4CeH#\tU7GjWFP'4@9f/miUt15c%7"RieER+%m)PbChD[B)r><?b(*C@aZ%pkaPrjl1IDVA#F>WGW,A$)h$HePFi$32>0Xm(]D(
%@U.o",^k?+gq8V0f)m\!V37fa,HHm.RWnr]<6E[X/98%ufie+dP-cu_1[?/,ZRgjo[?mA/XOYHgQPYY+:0lNo%S<l_T3X:IdEQ?*
%kD8lm%pNVOfL6o"1#G,b>ImH=452i(GrGn0oS>JT=tXElEOiHd(3qK@3=iHq"tSbO)#';hkCn.Gngq\aVq42F!%_nn9!H0+GE0`i
%CiR..ndiW[gl_<T:'#'#;%,$sad%C4I7u\sX:o@B_u^bYOmt.H^&$Po\e/>qGr"R/m(M(%[I]l!hRaPmQ/bRnZotCo4^$uJe_o08
%f#gW='q+DW*uNp&h]>6-Eh"0D?AgjCQ#=X22!!<DQlF17a7R[&JU7oTl`LaqK-'>P=]KK6nQ6P34:"$M%3=+_M-h`=,,;WS5/"k#
%!26',KimK9C2(6X9?$D=i6upUIe6kpGdH*T>?VT??dj@_pG3bB623SP9D>SeEQ;kWn1eNnHX9mc1k1]&RgMES3A>@2&^U_.=:F@"
%9(;+qdG8!LdI$1qq^L*:rtaj*>1,3]9L]B4OCUrKJ\iHsfWJA4@CB(kbM)5[lrH!A5Xm4;P!I2b+4:U2dH%jh&gjpF%U_B_W9U^9
%W7jO5r6D=gcJ.rHr;@o>rkO4/=-Uf]s4+[M9h(6j]8V'(Ed&LEV1L-"cB]-fQRC'bPBSi4md>X8K)lT&Mu@?doWPRd[rJN,h&t0W
%`1IHhL^DhAh3LYa-3\_q=`mTu=1TuE)d^Oh<3b*'em11q.^$&C_X(`$I@PUo+,SUE-pF%LlT"@PqeN(5UuW$.gP&:(kN&EUX\8k$
%.HJBkNq*"Eq#62Z/QaZLK=,a9Mg`\4D3Vn)Guro/n9Ts:YuUOG:h^tdjNSDPXA(cLla@eJr=G(8E-5"f"XkMHcN7Y)6*kMLVXgFP
%5O48K8H%3J731#!QOfN)l<5L4mML=pL^*XXU(7h=0WsAP&AafscI*FK_HoaggtCFd,t!N&Q>6!?NI"^80JHQS[u>YoD@DY(+?:<"
%oOr$oa6g=big^SY]8Wh"90)rC\)G'YAYYmN4mjfJ%)l_u]52gk>'Sq^#_eqeJ!9FCq,:IM(umM*aVMtL6_^A+@7Y%KNIu'\bX5Bo
%5k:L6^X'8O"Bj7IL:#@:_J0GNfuMj%+m5,V,GA"mJ!9^LG<$CLcAPc]3+]/9D.U$_;[h:..BE\2[M%8_>.Am4ZF+,@&g(J;M]3/a
%rU.kWmq@HAgnhT=`c,.>A"t>t)76<OM7r,l$X+[gMq>5,EQE_hfo9^eX)@Nk:#AWE`H7r,<q('7_^J<YD))ru6Ug%<1`f^PB]qCU
%Wj[UK/*.I+P6DClU7,nQhdEUsZE:ILnl0?B#+HYr:acbF<VGt(2/TAaL\,$:WfjD3E7!b?q,r4IptsAZNRjH<DF)bdE1r9WTIZ]6
%lEYTp'98O93q#N+rIRJ@RAPD"k"l?I:>OL+.XR6"!WV;&O8G7-j8Bk=8rLYd,TX@:Zi,7*+#eJ6m\b>6l`m(KX-`]qD#VZr_@Rj/
%g=mHNf!dBHXS:)WitVRW_mF#7GT0"P:Vqn[\D1=tr8YM&qKRM0ZG)=WA\El]]#iEC5L%Y\O8Z^r^"bPVoC'[1XmIF7=H@[jf(Uoc
%f#Q.Q@lM,]._3Z])83.??/g\.X-*%]QuLrkS)/q)>Mk4?>9>*=Dt5SFT&sb3;a7G9?gX>Fq)9P>Bh4ZMD#h3<D>_!8*Ypb<3UCVk
%\]Tf)DrXgLbPP1I<HmjmQK;uI]('Xu]($i&If5&`IZ0&eT([0'HD@[=n]*pgs!GuSGYJ?9PFC_ket<=W^5SqKd1LZsAqJb=OKp4g
%AHI"\AB8d7dSiIAY5<@ba7IEad35".J(nhQ\;0g$q1ke2_enZLH<mG`bL^b/_f.3D+Q=q=F9r*RYY]b9ZI)^fcfO\]XeAf<JE-G.
%o@#sEX/PSB>A*cuQ_>`3VffaSrVPXF6tQ4_l/C#mVX<@CWQX.Qqqefa*q6a5It]QErl5=V57%D_TWB-,`U9U@qO(EM1V_Z_D'?ro
%2O6>JgMfQ,h>o)F9hNQ-oZPV:!#o=\<WDg6j,(@LQCbL=DY%^B3pTk]%$00#[X,sZ1Arf=]_rqlBMRRkkT+-G)C(Y3]<,\-FI:n(
%l\7sO2SnWlR'(8__[*!d5H>0O5SkRi]P_pr4s&$m)/H/rUq_j^($dp4ocKLs0cn=sluf0(3a]ncgX-oH#!2U1W!%5knl/^==aCET
%]8kig_csJk:e9_RKm\NEIh^hWI-tN]dnINW)1[KX@ca3gm1(/qoA'R#;5dcuJF-mf/fj?[n0n#0q"e6F;df)ZrmN&`%Zf^USFU(t
%)/H3Z4$PAC!SH`X%;WIddr@3t^XOO63GUX<"0>[1@HD&Z'q&UKVjC"EHVGs/.k%Qd3MS=sTbn+>!E)iPPB)g%/84;$5iC9!<E-3`
%8qjHA5ep@q@&0VFp%30W.WVS05NITNU-Po!D^tEPqch.T$=B?iPQ3p(.1G9SrC26s8Wge1XArKuC(/aIc5_3*%US,B.?.&bm9:)1
%f2+Ao3&e1)'$YeGNY6(e@MZ5i'EhZ%=65SjJoMICkNZbJQVftmROY4.=_K\%0gn?i>c;4]^1)'nM]jd^c,V`@+t5XC/Emi-bIkrs
%N.sJ>H6S0%e&Z"uWk>I(Zr@^J+ZQdkM+N*!-bUC>*9FZ?&d0>./Yi(._DJ63o20Cd.4o&M>)9m9FOAKk*s;,"%E/ZM$:DWelpCp5
%B$">fd_,lt@H;kOe1Q%4TR.?&ZJUS6,&!S!.j\WLO!rI.o[q9bC$mJKo_ZFO>UnrEp9Xc:.7bDa``1fEV;YM3nSVQ%K\5K%Cr[aC
%1T=C.E.T3`\8;?+g&gA?BWMtAYugl?p,W0p,QmbA&G1JVk1Mm)/='\8+ti1Q,S.sR!93JNDE#d.a`Q9Z/bJXoc3L)Z8V0]7Fb]"f
%q=46F.JsbqF,J$jR=A1aXn+,MOCFaFoC+QI]L_9SC+BBKUB)kWE_eq1)8Yj)j`+(#c=]#ab*0`N<nhr@1t"Yo3LO7[8Lal]=u'l)
%o\C'dM!XGfcTuE2k<,gTE2Lgq96+[DSmm!NADprA;0$ae*M0:J*/0=;hG>bCV'u[T`!Srg_'pS]B?KdAK+'Y0:);8@ClU[<X.N8*
%4V+720djS!rETF9^'_7s&1gif5kaQ<:Bk`G/f?YN2&;K@\H%M8/DWbF&R[-VP'i-rk(qN*8q"FCPu>-LO%C)5!.uC`aY(/l,GdpV
%p5so+r,XKA'Fg8^J2-iP`l`gL6($*n*5j6bXgJRLes;6Jc)th0ruC`R];Jr,V>J3Ep;M`T:#u,H[G`Ft+=ti]pV&Q#oh(J+V1N3?
%I@p?Cp.F.Q1Hr4:FU:5+dZO<?9C#:](pd&e>6eieWe:@[)l'h+\[3*2Y!5hUj'7O!b"p8H3nURfib^Y^3SA#POh9>k,1#Hr]8)Y9
%T"'@J,1Q^KLs*l(8k<"]/do]Ibkp<"e^^>l^ju0HP[=`C:meJJZ`#hdYsi8MDbpE`^*-^d>$Bl/QB=A[oM$qF"u#^%MV6?]>I,hK
%;2K8Z"V7E_cc*cS.Q*&kTKSG50kM`TksA6(+s?jk4$(;/d)<7>Gcj]X^m<'U!W3*DhAYnEZB\slEZ;,m,le$3+j6hYn&+^B[#8,(
%@ABXENe5+#ISZ0bk0hj!pK]H/d`&)&/bl?\*]?H(`*P1C6gPt3.^J?^6?[u3]r4]o5?cV,\?D'FpH/2?1:7*$YA<KfargA;]&C!F
%^ZG*tri!TLFd_,nlLVcePDm1T;HN^QNuC*tiT2ibmfmDX'_#Q4fs9bj^Q<L%1KsMGgp-P^]#hVEr(?M\-4:qZ'aN7p1QeOdFZ]L<
%gI,ufEIa/DU2`s2@XOtIC)Kb^ci'#M4Y=@/G#V[#R&YmImW"F/,EZlq3flio=:]*aRg&Ek9jOMa61Je4k'kOqS]I(DF0N9gM`$ug
%S\NDee*3<D)Q(mUbT-oRHkrJ`-s5<%U\LHs!!RPOis;eUr/K;J;f,u/Xo8;S*3(7febp!F<N2Uh"OCdKL/-uY%,a0cW/n4V?gZ2k
%n'up+XVB0Wg-7`lO2J>dDS/B9ng^S@Ue$*SBFY<)_(fd/)uC[[2ND@"8W&EN57M/daGqL;m372L\LXcpA@2=d2]M61K-0F#2nA,4
%DtE\W_l45f_qi0t"U4oV6l]jXZX5U=6d.Toar'pB"W*g:bb#JMP1<Q%M]mQq8-#f)APgdNib0Qu.)D(?cKYmnJDsI#%RWeL:TZ#b
%#iNlnj`UjEi-l"ja?V4OEo:GI[U9ANe:.)hBPWf:6U]Z+gU\s-6ENhRTB>341;%LHN6X_o_btSOR?S%#q/DE?NOMe;liTp3AhrNp
%,:qG_Qbrj18pJC&W4JsS^nfC\1jWLC;JFTj<=ui%orJqT`3/j;C)-h.lZ7'M`)F)d"^6Y*7@HHDdS_W_`<AbaX^ILH"\FU!?%+m1
%:-DKao[^/>B'6s@fQASiEZ%/Ni+U+a\p18m^'KH1;5H8)hnT]"l8<5&$N0$DI0ef>V=HK5=,k<lhN$Q(-2,IUA]B2fF@d'l50$OQ
%[U0>QN$Go.#8kgV!c&ouQ787rdWO&*"=T3]"r\5;/5I_d%uF5A;pP2dQjXk]P$<L$Yqa6=IYpQ(nKc\%_pMVMC47S!ORB6M^EG]D
%fIZ[lKSf3laS_f#k>uRB]X(?^1j=par,55s]ILL".'C20o+ua&)r]5;r\lAt,Vf\9[Nh"(J<rS)ETE7j'&O)TB1to204rG[jY<^K
%NVjlh@\mKFauSGo02\Yr'2M:h3^bL,2mbF[D<RbHH5ccArD0PLO_I[W!R\,'4>hsr0\f!8qB)NFf-+hT7?N<BALoleNPg\p_4D[b
%d6ERr1Vc1/cJ'+AQ_9<`*csgi964+?0u%bB/Da"$l#WNV&Nen@0_SX_'iKR(s/UI^0^Xdmg@FAZ4cr^g\m0:q<V[tE>5*RN'^\SU
%3Kcq@?nM7h^5r#\^Bk<$Hr=FH?Qf_KW)GU+lP8b'h,U,kQ`ehhSBk52!E0rj)X.=s`VGm2MJh<+!MV*''ORi8n11c^,U-Vs@7mIj
%"&m`ljQ?$W.3L]Yn[Ng)ME&Tq?%ib8%sARpKb\S9IT<BKM`EH4WPDD-ISMh#i,>Y.71nK08!k\%eK1P7R*bppn12>#o)-_[OL9L[
%/;g[g8B$_OM_L;6oZOO&L@hrps8Jf@B?GUHW@,?CRWMDr>Xg#hWD8jq*hpN_+kHWrK89A`@'W*d0=lL]@lKT)'\8?IgXKYM_8_Nk
%@@&;t^jCGU!UK?<I]>.p<!cK;d_.>Wa3P#bL513f6-o[ZIT3QQ9[u/sHhGLM\4csEl&d!W:FNt21o!ThQ4A<BD3?5pS\Njhc6Wl_
%Rhn7NGf'$WF9,1k9I^@]TH_,G+*3h@]E?(rP+#676XFnYAjtA+?VP7'U)<$E4,/bg$.0KS;=Sab0UG!j&Iup7i[e7o5)[]m'LQTr
%hUIhk-_;J'P,8>.33OXO%XZd#?b=CiDK;7:ft"IFjWX]>78jKh!jdplZGA(76Lh03`-h++`Hb+%pB;bK7>gi,U]MlK]gn/dC#^!m
%LQEL(7^k@,ec`pN\N5h[[u'oEJ%qQ:G2c*G\4IX-]^^Gm@b3B(l^kff[Z=I#[`FlLnBn,uhq9IX/jAV^Q!;](k)E^.lKf#"mAJ@s
%2;&=BF9'P!fuYmpf4HD!I+8YD\"BNA9eG1e$J*]pZO)u#K)c(Z1L`&`0cE+ZGX`Rf1=JP<c3j3:S?dEl)@6[PWe3;pCG+4Z95)8O
%#<W=_V1\%ZA7<;^=PRjJq9YsrfU,XV#uRj[!qP89?C#gr`7D&B2)\LF:>-8>TV]hUZZk.Xel3a5[Q&))r4Z\`c&u;*TBq/1eqNm)
%WoL'HaQd*38Y^3CGjMfETYiUl%gfXL6hn+W(jkDtPQ:&I'Nka<(#P]HS0!>PR3IO/oQ!njft2N!H;6^h+#JlDO:0g;Sh<j*`bVt"
%[&-;i&&'t!6*%8ZJGGe-?RG=;#Hlirm#81C6ir4J4ZNbYbr3:54eT#j@2L.];l?efRYXqK\#NI36fpA[UdCqtoAA!*cjqplQa5^@
%>63qR5<dJ]i7"--2X];CE?n9TR<F>S:@(Q2faR1TYZ@(lCPB2Oo"3EhcX9O2a>S`K;q=!$jJ`E\hf5JD67Z!8M?"1,]\eb_kU],6
%a,hoZH06TT<u9h_o6Rcn*Nrng.4Vq)"*H#\B;P/@/]2F(:J07e0]I*SlGVekeI=e]V0eN2KnZ?reh3h5]5c?f5meNu0jN!%-mDa-
%lHQFs$?/)VkW=sg_0(k\FI\7aKtgLNGbcbAb.T"=7TId@A_<36-GMpa_5PqRKZ[\%.=0FLG6MEn`fjJtJmN`oi%*;2;8h2B;=<5*
%Sol*tR,1%PRZ0e\PS2Jd+IK;R[Ob"A[`FnG4N9@"1\a`KYj?^?/q#0k>H4Y&!M3/NT:pFjAOsZXM3pcNBhaFBI7@Yuf%P\9=rUb6
%OAB_&Ij>qt,([M,jV,/Q=T1,G<H<o9<6d$[?+N)j/WTL5[I.9bn4Fd$FhlF@EdmI`A7U-A,b$imVR%1O9"UNh?($opeaqn_6/"/B
%6Di8B82YFt^Y1:5OnIbSV;*R?pdeM3\E^0]fe>N6BTZGp((dAhH6-!l5ALZHl@ZeONn[a1-HBRdHN66V<m)>['Us0r-hrV9aJ\>=
%F!nT"U^V#^U+iumO/FLW.Y\FbW]L"CkQTnZ6nd*6*.*]0iCn%g.bN`e[;/u+'MKR"\^7R]Sd3<Uk^1Hm2%AM+nQ1'h3N+TThgI/(
%mlb>!IV"M0?Z3u508QqO8Z6V`\2W:Ao5C,npKKf(8R9&O+,3[]XaW#g4'a``]6Q-mDAc,m@H;$3EHOG(1"Aj_)"C'O2-:He^#PL=
%$EYnR\\A2X0Ujq^mW_S=Dm2QjTgoN4ndd9porSo[2c>I_7rZgpb#cl_=sZ/.^"94NF<or6>RtU_f1Y&iXjK+5PL-7nA2!j[#L4N0
%)e.SOUW^"1l`T\=10>WD^-Um)5jh/),mmii^#/XB6lC&$31h)[M-:_G_.Lu`N]frtC#_8&W=CkC)TieXK0KsthSO\oVjF:L=_SHH
%4cMd`5Zq>pGblX_aD!4]Nj36bTn($7/Z;GZ\RTJa6B>eE*DPQ(.GKiYFhVr)*b'e#ldObE&9_?RM3e)=mW@28;Y:8A\Mrp3>Ku\&
%Vu2=d/`iF^^JESPV`*@sA-D6jhbr>Wq5c>Efea+*3b(u=S@5kiNq.#ZUq:>]flsn"fMXhTU/\kjFO89PKI=/SWOs5K]&=@mM/?95
%_f$Ua#$WG25E6_=O>O;$VDUD7OJ'm'q$:YZ9OoQol(2S_psJb*(WfK6G/9?'!i#HEX.#F(Wc(o)jJm(@8`s=*U+&K[RVmBd0Z-#N
%jTh9G8/r-#rje!emW1eRLAh"N!Um2Xh77iDd3EL+QZKfU(rj4BSL&-1f/oil:OL2t<1LSo:^fZ2\u`'d^kl\1*cW.+WCW=O\`L`1
%)A(iCT^[M6bL(f&h,IY2j<9CDr;9G<"=N^I!0JD7$0h5\i0C4"4unslQ&$Ph==q-J`2RU7VGa6Hm"llGarC4JUF0E3B2BQf3?C9D
%)l"Y@eiKWGe##a-S'NBI=8MC@;H1l_/82F/:^TXR^.kFe5eAk&K9Vgh2b+QK5O,)hGV3^sjs"uV93+V`0*LC,OWZWDEUM.c,-)ND
%I0o`W+no-(R+l].8%H$QVBW(FKc.NX3ro's;lBj<Qph!OLEag)S=%b!L3'3c7ifB9!=):"/?/[`_h4R>=$9usH$bQa/_:n)XmBig
%"Hkd\ANi(i`XW*PCgVcPE]g/VDs()+UV]ns(5h20<08IiZMM:PNk?ViZ7NVF_f*-R7hB<8Nj`:COF:6**1?`O*a0ckDWA5=8V33I
%-0;*`,NiL"JFF/?Cik2Np9;$1L6P8bZD:*K/TS=Y&^K;V9i8hTPK!91Sc'/qo!1r;EXdiLOKrD31:uV-"*Hk:hP?O,K/P?Ej2V'h
%`>F_5Il3SPgp/6[Blf3YCMu[BJu#8O<>,ZN;3NB/rCn%@%-Qc;'5O\f@BW5^7T%^fTXa<Vc?\T]if7dma]ni(+S<?`e)]CBMu);@
%hKQHt\%jN>TAA(I`>%;'R+*\V*Tf=D(o2^o99*4m0o^.X:/GR!l17^5G-"mjUHigCCqY/P\j/DG@7L+g.jDXh?G8gQ+k!N?kVVQg
%O]^JhqqUi9GI+(!=AO8HFX4E.Wd7-'PjIpSRi"[XL>r<DSfs2>,Ai',d/Z.1Ot5r%@F"=G`>4jM9(2(P!Y9+1oN:PG<c<RMi<Lso
%_>FWD6qVT1N,GLP2rDL$R;L&%KjU7smf\[")KqE-%Fhch45ns5K>R)2"eV1?%s6XaG;@M1[7.:OKh!_?h1B#jK1b*^WoIE\DX/B1
%%nO,XG<4=*3i!1=3NNts4.V/R>s+TQ-pH=iD5isUPi$+T9CMjm:?451=V<A1^L:f,e'KK&qgA?k;@gc7m(=I,Y.D;hl>C+01,=q<
%&;Q,]VI%5hFfSt-Jfi\&IW1F@'Un9[jA,95FT:GY&sr=:O)(2!,NuDN5lcJP/=&=&/EP;-cD6m;I>"@/H]4h^ai8VuW3C-nJk-mT
%]8/T3?t;thi*tFTmL0m?gs$ktf%1#C7t:cQS_X+p$>$KP)C>s7Y/jJ@6%R3[lj1h!E@^r1GE.otkqUXXri#[/%1ALBJ3qT&C4rK1
%@W+"HE`BbX7?G'oe<*)-nF?MB^3ng&<p\*DD*]R&.G,Y0PT/)2WZ7djZ<YUi@tY8:JnLAu<7*5tXEsrcJVo'OVg.;8YoGorFAS[-
%%qm!c&N&q]2A7Q00mJJDWN&42jRJh=T4R<*Hk>R_C(7KJV87ssVThk_?GR?.(@nGbKr+W,mNu]$@[iW`&Mi9DVoh=I&Tno5b&UUI
%Go#bX>E0<TY<19L$`A/i*heB#!/MGt+<#7fn<5$+$KRj`<MCn8F7tRp-S.]gl*:uWlf^SI!oYdJhm9>:W`Y5JP=/uH1Y%pA7jT*Y
%8)anLY&g!s4!ot+;OUj6.2#/OcKcXh\ODbqMZSjgb`3eL7f1=%9YEmFF!>l8hS<tF/;"YhjpTsQO#?K7US+*q>SD<e(BH%=30*gs
%$9=WGo*larKGZ`fiT4U0p-"q:94]0E&ibW$$aA"AVbZ4lKE5)<>Fg?N^/]_D#+3iZ0]00.O+m+/45V\F!'0'"WhB5>ourEYkr&r+
%]UrR^a;l=fJ&JZG$-[iWrJ\k`a['<1!X8uX#Z1Sf#[rGNF3S'nFnd`\D7-Tg8?ulDJYr$/c-P5Zd/qChp'E8-Hkei<$q1"*.;h5M
%B%<[-<1gCrCS=W!>1u74cbk,&MacYF>Ril3=<q\u`_qWL@kE1f\V.if,)-Za.*aV;Jg4B0(g`M#_D6RcPD4%HpHgY,*pDLq`n,/&
%/c'T3e*++++^4p=YQ=bB8DW\l#VhkjF(UubOD_#U&6=5Zd2k('q^Q1@\+3VVf#6r\=&B-&6f"a]4p)e`EULU+n'E`YgH0i_2h>=/
%i#4N4l=)(0DW=U'RCD-r+=jQV)k@d]EF@#Qn[HFPD+D2EN%G%K&I>@)Mmc,gB/J@M8G!+c%9k8q'"^^<2j"Fj/f@dG"RM><4o&U6
%-ON.!dM0Uh?t^9Xo_JS2P8.k[<!KTUQr").GGju2<6bZSUQ%"Ibdf#m!@3(A)897b/k3Ym[ABL\8&42G--6;1D6K2UCno9=P]L$4
%h[IgAn-<m9(#3R5&&GI%,T5o+"i\U6B\<9mOOdnMS`",eRZkaH'=Ol#?4bjO"Ul!4Udk-d;b(iQWAq3d31Tt_ie3J/O%_85iab2e
%N8+5th0!(Ze>(O!e7*jI-CNQjA/lPJ1CIM"4qCG!1l!&H=/?03*p"Y1E(Ke-:Li?VNbVM]C&Gl:9JLgMR]jcc[/49eID()a,Jf,J
%M^DRo=a,qnDo;VR=[N,tWD@:^q+/`;`5Q:$+\]fSK?deX1ZG[l1"=,gl;06EM!0aG@3!cA-^ugRoB;r\Tm'(NpJ8?;QAO^dfp5/]
%3F.1_E,_NQ<E%W,bpL89iS+)k2Uo+0E?-F=TmJM#;/J'mRn;"&BKT<+a?nlp2;(2nH"&KWo>>i-$)t9m3/n*s=X6%P'ZL1[i?COe
%8/s&th_K9kbSn[^#Q3?&6I.2rQ/G`&P*ZPu,)P,er#%nZ.Ds=WJK-M(0DN'22ErdDW?SEk)+U(%k0cf6NHeRSO6c@Hmu?TCd1%1Y
%VsUpb61,$WmC#J["`(EHI/gfrmtG5_T(D-o<c<%bq0M))U\40@qdcIr-M,rn=(Esf$;5R\Im/f9Kgqg"T9#UoCOH-Z?a`YrU$i67
%j0BI!]>eX#N%CHkO.g<q]WaodK!-s(K$fn^-h9@Y*R1^W:9`F`?=ljl!;2,a#uZ9tBV:M3=D\D%W23f<N5oI!cTeqp+-s&-NW?BS
%N_N?A#M=ql`\#l#`&iq,ebq&_gJDB4/?I(UZ[^I?KA@_UVpplNL\TM'<jeb&7Z>8<'R>!)]$6-aID7*[;U]%f!^c4kp)MO76iZPJ
%URto?3Di;F6t!)5".mq?X9Nj#Pc5C7g.8ctCi_PZA%q>C3"9>lGXNs.?"KT8l@7Wi><\X>e;ZnY0p+E.N,TNagNm0*@C`#i2YLds
%09qn"I0fg+:/a2S8+=Ao'l`k!"Q,2-PEDqD2aW&rXD.%.LUU^7@JLe4N7c3]$lS)1B5O>2\8TtN+3t2X`ZfpEH$^EWBc<#7lTZrp
%;`p$3XS8Rfl[0_15AoXsi7aoqo/_]9=WP9"gduRa*hPfE99We#@fES\R\\2;`-JO&Mg-#dGaX\Kf)6o^R4HLSEBTg_`LXFt>&>oN
%TR$%,UQj':q$Rnl%V"b2NaZku0.l_/%bN%[ja&0R*'.q8Pf\.s8UoR"G9OH5&L$V;:Y0>Bl3.i+6a>a\%kZ$"03(p^6p,<bl3f_<
%c0Gee:.GCPoLkM>[`2j%a:!H:]<,PsVNOBGS3T:.2ZG>7l6,g9:(M_I';;i7?O,=88$=uReH)PFGtl<+Va!jqJutq-HG1Xdk#"#A
%6(?Sf4OXS'(f6cUBC5#_AoaE2@p58i1Tm)I+$76X:`.Q!56@tZb71SF#r4/tG(04NZUUCH8@JFS`I=;9Nrq0oOF?#e0)ukF=indn
%DC3Ce69V1ek@n.YCLul"!N0dk<nq?$S"`$j.iBm5gQ]k2q7^(ef1t(fc@jZTk&BlAU=2_\k8_PYl/\JmN:o84U"6.Y-\L>^'.%pQ
%=O+\+O16QslpkU.`sps5!3i"1$@lfZS-#(J@bp*=B=a3a^T9ZCWZ9T$e^Rj;R_WJabTuFQ2eAFR+m+%KiAL4.o91gu3(Us_-DFiF
%.5C=<eG@$6GcA\P_X"Q\8I3>U-u!I<]o'4F%sGtJ.`9RfpJ8WL>20H#n@1tPUCDB"S`-$3F$Au(rI!:p*:!U(QYo$q3%'hb=LU"N
%LA-)mpjO.\dEDBImV-r$7=ni98jpm/\&?`'3,YcmB8ZLA9n?B[`&5`HjXs\B`_4*eRq,-,M'HBCS`RUKa6(Godq3#mS#M)=SDA<.
%1Q6*u%9dhT!Op"/OTk12T,Fosf2LtkRQV0:i7,$E;>Mjsnc\]DrOAGI$4h?p(Q!@FDTUX=Tj,4V&E`f[eV@u2q1`[*i2:k$kI<4*
%g4ZTBE%j^JBiCc_hf&it-g!,tA"!Rggh-9^$*nS!X$i_I=DfeAU#X8)_=Ycd;'Cm8X9g;:(5oH$2EN>ac>+ruBqA5,f4O>q`e]Ch
%],GE<V%^Btf[7$f&%qelo&KQqW//K;Uls]/)4C88JD0nqr"Q&G$?^9YZ?F3^'D"p!-hmR<eT[q\ZFX+T@t'VUD:[Jc+++r.1QUmp
%I\:Lm=TJh>@Qp[P]&65!mEP5!P,ctTa&U-]']+>)3R'[Qq<.L%rUY="o[L&DH._S$c#^LVAT9/[`Tm0/m?md[rmRKg^#8M%O4P%^
%mC2>RA'E/dr&n2WfUr8'Xj&_UA1jqK7Qp+!J,8OYhsZ"W=,Wr1s.s?oIlERlq>%`"].<g>heoQo02m]%f+*Er#`W3&FoWhSLG]QK
%<=s-?$UX@eV!D_nZZV8p(d3J[7!:T:d+_Z]Y\CIV$c&QYd:m>e'tkfk4o=QcGm6jM]D$Tp*GMDIWL6r@YfFE?b=EX;kN"2E+DoDi
%gQnmh0ph:pkPnqg3+q1Oenc_&h?qr9V*BLme$]LWnCku12*5jA^%T<k.X>KO+L0hjf"UOcjJ"`G%,KdBTJ5*N7IQHrMO@p'=mVCk
%kW,aD\RsWfOF_KMh'T#^L]6`%5CCIP">+^p[Q0;P^WJ^GA*>g`*&qT%1U9O39j[%+9(@(nQXEsFIXga7PA]W*Z7kIh8uh2GZ[bsD
%\+ura2,0XNq)*?,N#+<^1*aHb`cP")q")e4Z%fCGkANhR%U+T5"<<"W]W^?I?E>=kN1M_fXoWp`W!'%76jq$J9>*j)Hotc=)h3TS
%:a?EJ3M]/oL13n#6FT7A-a7Zo\Z(/<"gn!1>o\0q/NG8$R<*YW?/Y[m<uF2npFfa*AdkI!3bQcc1VR6QgZJDcNBFOB`V3CmpP!2V
%Ad-#[6j$5\L'umVX*\G`VU$C;jUce<iDe4`ICY-4me`,1Lfgi`nakR?oB3j029ik'VuM)I`7JZ9l7g7s'B/]Oh+Z7DYaI71g/<AX
%(&?H0pE$rtATRDKO<\pnr$b/n7fI\TgXbhbTASd/7snXK-*d'SH("U#rKu1Y5$mfkhU`SDRt\jeP1n*[[IeG;qTV'4MomiYpl:>t
%N&BqUfUm9?Y+][PgKu]u:]W\^porl:f0I?eQHoHhJhSh):AVVG[p:5HVnE'%I[g4l?f(\KO5sCHMY/C7qd8f(Hs!u*??UCPd6;F*
%g>$dMCU6I=gG0[!GfJp='&qh54K`psNgjkbBrqTga7ZmJ(QQgG?a^ASJ',g(5$mfkjOY4JmjWa]$3QUX[<2('4g6s=UpnlaPFNd[
%j^ikbCM7Bf=!QbSeA?s8qfQ+93qmp1.8>NBqj-L,m1INd5)^uWe+54SV8n">LZNuJLU!HGEN+8dYClC_,*jmGCrM\ErYi?g_#J8R
%To8)_=W*>kK84f9i6nM0Z.Tg$T@Q$jrUY&>7*M7s/^qc3$-SWsZSVV>*gQ`9Dt(!d&+VF*"$\D<DtR[4^)sk#Hi`ToTY=45DLJ.!
%h>3L3A@kR(5"p#S(#LAZ`S@0#9fb=/_#umh>Gel$f8X^4XrHi_eF2n2ge[Jpee:8#<Nl(<:qdr3fU_4GHGOPTJba9O[ZKq6<l_@"
%#]At/CCm#5.D8n\dh%g"a6p7Y8&2$`bB9u[a*kSaj8"MeaOgOnS0'XcFeE^B)r-b"K05+c^t4kJ977hD5E4HO<pm#>OMrNKOgB?)
%[arOa6/U60g7D\3:D5<`:P8/^'N:XT4^e*+`RZV;VT2uSl/VSih8m)85nMpC@[_o`c#nesjaNBIR-2.9e6hJ+JGe^N\"XVL76geN
%nsB#d`a./B,-@)5r5h+2&0RI&j0onMCl-[`1CdOGmdY>B\8HV^ES^D[ESYe6V1+&PjaN<7GWg#\de-LFLZJ>pgVQke>2eHAT`6P2
%.H/9`rL%pEL5!hI@XkgA[R.23h2'fb;r'HX>Dm@bH+@*Ochj$mj6[H%ps\1Ad*&tZS^mML_o$LZahq4Vr4#_>f%34`e(@ghfO3EO
%e'Wq'qu(*.Tp#TT[_A%V_KMhk$)>bo`,&67pLtXtgfI[?U0>-HH'pkaLV%@2Rd&2h@3fOp^>i3lVZ5\jrPM`uH!TNXQS/I2rGWq1
%6,SZc&UA"^9`3Q9$G,nC`1l?B\ZNfG-Db'N2t"R?mE*k*o%Vp1V(^bH3L$S5%Ah[)]BSAC)7u/RCJ1MT0'ePa\f&cY-;W+h1_4AO
%m)S5abC)0)Ii(Otn9d1k)OE<K#\'BDe;Z[K$68H"NNCq:=3_1-Vkp5fBtGLP:[;2Tn(5MsB].Hj4RUls+)d4lXZnV?k1_Pa,7oX-
%hr8@]TB0dhLVBrm0D9N^rn[3f:@Gqn^M\IlIbjjf<@e,h&l6u"d5O4jenj3?hbMqNr\j_dl$`DNlhg>?f#OlW2gLk[Vg2J3Z(IA`
%QhtB2^)t8S35,/o;5#/c>K:[h\%lkZR;&HFib_+Zd@RP.mBCaW5>:sn"S/oTcX?7R01RQ$Yk`:rDYeU)`boo-LS.mj.kdH5\8Ljo
%h,!XLemgosf3ds8Z2*DmVMb(N`tj>A/R]UiDX5UWluA-a^8q`q4A_p^IfFD51Ym)::[;[9h",8Jpa;]C/^qbp':,m=E>"1rFbf.!
%P3/obn[.)4o!Ht(5He++p2sX>3!K&m?Znm2?a])W<A.k,5l5D:.hc^O4[,!m>+Jd)M>$c7D*>!iHLnWd-SCeYqmP>Onb.XlqD3bm
%r7>M&&.DdGHTY$s_`Y'oe;qfGGPbu_rlkT$8qlV[!d<o,"RO^[]]pM6:Xf)?qec'"2T!MB8Ct=\InmarHCKB>pceYfoeETF4W^L"
%,Yq?%n)IUMXhKh;+"#k\7)#hL8E9'?g?C./>unuUFNQX.XJi80H!cb=PBlb6R_gH1nD.,I))ddq^RWU(puB)()*XY<=14a/+'Kp<
%)gbXms18!SF?dan>*"#;m!>XL`oIZenli_o&E4[IHQ20'=>.5pr1]ooB+WF,gHMFpY'$!+A_9B1%sYA6i-cnh\h6?O$=-K[]t31_
%nP%cYG\s9Oe8<_7gt;M#0>liL\#g_B\kIU50CSpr`ApGul(p^_HA["?+ieXAq`$1fD0$!DG!t2>HGRM)V5'iI</g=,rOB!T1i`M7
%hlI5.c_i6sGpSVIFPGYOgthj]+90(Dr\2njhUh!FnoYB?bu!([T&f#<SH_K]Qa)9;15*il+P=P[mN(7uITTe;.Vl-.=M<FL922Ao
%4mlF<[fPg7[h7rGHSkTl+-udY*l`N[a//'\^5g2T#7X`)f<Ij:WQ$K.nSYE_PJllEDVGaE"XGR!0KfriRO1>?lo)`UMp1I7W=k;>
%gp&CPcUTKi%9]Cpb(rD8+j"m&LZNuBLTqooEN+8X04XOU7uY;Un*@Pli3L(Vfk%ieA!E*cGrORTf;FlrXeTuFDN(IHo=ef4G^I@a
%^(&n0]a*Z1a4#,pbgT`krOcCKgXhS`irD]=o,?@!Y-f06AH?[aN?J/c[uhsR']o\qG[''"9n[X@eS^mMdGqsnP_R->:!<2!rd\R^
%n_7\<O1LU!(p*7MO/M5gQD_!Zq0BAoZZ!kFhi6NrY$(X=r4;Q<r4;DQ/cZ8nKm]>d5agL7E%h1\a44S>Tmu'Af.t#M@(3i\@(/<(
%VVgEJ\f^'KXf$VSY28Q8Ongp\37/'nr\aehnMu'SG)sd&/toFqRcZ"6^(&s&ksSIHjLU^tqY&rpcSBp]5@.LML@;G)UN52NBt>DK
%Bs":^?7rGTF]A@-2ke@_2(e<,O)kN/7Cqfnrf!Hn]B!gO_kQV_1emefdkp.S5ANcK(#<(Z%Zeea(HZi]+-6;Be&V%l]<T@/`Jr'`
%[MDR3FcV=BnM!aS4n[iUrS>2JbTGlIj9h"6'TjJj^efR7bP\\#(s6@EjqiGAEq-h>2B:<,2qr_"j1h"[:mA_#&r@:2m)Rr*p@8-\
%Ac5d'Zgh`^/#-Ncm!YA$l$f;'[3#9l\U)/3L?MuWgumtDH-a!El[-X"^:JNk6orSs\?&KT'_(%-`Z6*e>ArrQd6oD0pV(Q)4jrbb
%m?r.4N-A15hr%qR+66k3#JMkAhs/CHHl]`s/#']Vp]'hLrf?_A=T+jq+l%e2N69lZf=2(pP$I1944'gOrr8qHIYD<T<O^R.7@uZZ
%^*EnFD8hU]#cnW(HI;M(A[OsSi74Jhfr"g@l#)@qq#T_&e0jSK*2Rolc@AP6I47S1q6mZ)bsHnnj.+S\.mr!J:du3RqJU5=6$lul
%T`,jYIp>VqZoGn2BoVn8J>tj72mN-FVQolb,JF'0CBK8#=_9u?H^0^Z4t=_PE[Qm=l"KPYOU#14Le4K:U7p"NQdZX./AIAXN'dQu
%6OoWC(64k]Lm.YAF'ed.f3)j)7S*Y[?m!e3'C%'6c(:\U<83AkmWasmbg-^=$ruV/Jh^dtEXl(hI2^-;2#_lOGuTd'jR?_Ar;>;o
%T`;ZjnlP`#4cXC@l^W<0<5+`t@_fI.OZ0MFXZ_VVs3XS\^*jn,lh7]EJ!GW&D<p8-5G(DjoP+3kQNuk8du8H5`F\ji54E.Vl]?J=
%="c)[6HKUA[s4;:UN"3,=qCT'h,s,hhr>W*Das3U`]ub[*sUaO_9nB&I2hDiKTt_K.+f0,Ut73mA)>6&.3CJ/,L5N@^ALhnq"lMO
%ja@iT[H@5rls.#[FA$8ilF2#,Y)iK75/-U:>4;0p7j!9E-S<ffGGFo91#@Sh>P?W*Ol<J\kB2+gYm_Y/g+<c)S[(Y>'<m]a\"cXK
%JXO@5i!)LX:gieZLRbXNIu5qK:_IjgRV74(UtKa>hW?"B.?3o%XkFaYZaoO[?jrDSA6iD<bAt?f&PSK%rB9pWpN/hh-=aM37LfMY
%gO22i[0fDJ5#\cM[?[0f^I&#bLM*[-9bMACRU;8`)'smBobBWZd$#'#btpjDp-O*CSr(_rTJG3WNEgK"diqN]OWX"<qHLk:4eg"Z
%fHWAOE=Rp)a=dN4eUBW`*>5L@*=Y`D'PT-`7']B2L,E83q;2)^Jitn,2R4A&R9Tu!e9K-nfTU?/Gc]bAJa<'\HN0;",\`/%*V*to
%lEGLMI#9ol13.r!+Li(B!a_GeMF!_R>2c/h;g2d#S;lqTN@b]Vbbd*?k<(+;-k'"%c8A%a54tH*(;f!Q+O7cXJso\-X8I)3[[@=A
%V/f>M$21"Ya@s%.]h_KCo1HHPm8HuKSB#ZXn\Ze<I6Q89/-J7Q0X/nUZ4fg^CEd:+dtd^tgCm]U[cBP=ib$jG&/n3aU&)I3M[rle
%>mfSg86761^tafhMsMhgb<4Gn"(?ONQp%62X>j?g7bDmdUp)smFLCXt5Cqn)](+:"[a.\DoA)<R`EKL]X6X#GZ6qh4_BB\^SDZ'N
%)H_[D95K`Di=4W1Y3*ZD:2RZ#DbP*FPh$=Gn)6NK[@Ghs=Q:?D_LMJGU$o&b&7N#'cmPYS2,.L'3Y"g$\"o<R-gKY-f?)V+0KPD*
%*C@r[6n\("`h(aDGGd/Y2Y_kh<2EG2N3`ZUioEDRG/V';M@VA3f(*uq8NUZcHeXP;2skNNRs<GXXaKg]T^QrtMs"N&PQ4l"FiY(:
%p<2M'7K1S'TGr-eBb.]IrE%E]3I@r&h55WspYFT8"FWnd-io:]a!cokHa+G>g6E9P\T,,Z0tUs@juJrM0,j+U=lFAH=YduBRdJ#<
%]tu+*4eJ6k8?OYtjV1<Q6KTt\KdLo1Wlo?Ua.^iB@X<uFIJ%L_q"*s"WTb/ij.Tq4qd@:aVR9d9V?-.k.L0JG@-j&-nk-d@*7NQ0
%D]ur*iF-jB`alGDc`8o$/*A@V]bX',B-.L7\'>:#2)VS60]5nWfm#usgJS`,`c&tgZ7/.-0<'K6+F"NE[iZq$Ej(MZb=[Gr/^F[!
%i\O<TRG'7<2\\j'jnX+AX#@ro@^kTIf8$bf(S*YooZYV)aEu95BMTT>-Hf^=fhh04#6d8#BDE,Q/DjBond3^r=DH:bca@9fO.e+V
%B4bN*p=m(UD,NLoB0Ah"LX0`Iibp\c(/C[c@K$#hhc;E#^%0@Co,9u`Li+_/65prj4lXo!jm=!n`]8uWUKSi>o8cB#:c5FDV7:m/
%OVi/op,u&f)OKrnme.k]S#5!bRA0-5#^7V"l0".dH/Ut\;kkclR\J@V$.0`0/a'kWINPu;6u;FL.dK.`Ms5&r1+/.@icFiM:66FE
%IAJXC""m%,W_S;PE<\jia7m+jc5D5/pfH;O4O#.P#D0`lGO0bQ`jST[VT1CJf'@C]F,nQ"l^N=u[[B9GZ'L&Cf@d29q6.)AG^PkN
%kI5s<a'aOr0M.]u^2!?M_Z(UBn[>-1FGrfCC]Lfm+]oTZoHTb3oJ:)q[Y?DKcogB%IEg<?%Y38_)dPcVgcG]BJH#0rEGFHU@Z$NW
%,$R$[8s&FK%R\P+"uU2^9W_H".>O4u?<\%1GcuGP=.lu9\L[6[b:6=!3?gCjjpGQ9Y7C&28);b:n9c+W5NIA';$=_O*fN/!NPY>2
%Z2mj:W>UA_&W[W+JJWVQ>7sNMOh%;\#WPkn_2`O/Um\$7UtRdjoO^tnJbE[PJa9U1U]St1)199LC^OjD-AFO4hVcWYq8X>+X:O-,
%?--0?9*&M&)"<.'I5OBK;Q2<g"u\NZU0`+6"2E1C"3nMEF2^eXL!8:](k*R-msQPU(q'jc)/#iHhG\@K#ciLHZ@(1jkhL-Cf0c+)
%C]sXcGf,B7+=Q$bEs5!b,!d7(:ERUgIY-%pN.rP*Deu*KRg:,FSiPF+R`XDs9?N?4+'"iRKMO$LJGhc*WgPT6_i;m4mBJK-)eUhc
%cHIbY'4DP"3ji*/rPgj'`Ya?#4d$k@BHslCp[J)EMVerQ!dh98U0rM#-0_q#lZ!m">'I_m1+,OJ3f0kl7;=;)#SE#I='J#JUsj$k
%>Dnte3m="n+fPC=HmTi3"CYe`'XF,J'=cs[fO<01I\7"E2ig/6A<]'N!HjF.0u-1/"7f!8^Ln%Iihp"giApL="$u%SN]dPV*!A"[
%&9^*qVS-;)hA9Y)VXnp@b3rj7r=DVcRPrb'7[,]jNgt"Jr,g\?NO:3>c4?C@;L4pk&:Ec-OT.i]&_h?o!om/hVNAp&GXmF[i$MR'
%;SGi*32[`);q`LIJM(M1GVDiP)GIh?9"a<cCmX;>ok`eR!;Ngp`r;,OQkORIk.D]k?j:diJ-M?XSAshWmXrm'3WE]:+2.]f;TSmL
%X!.K"kl:U\k4(cM2fqTcZ?Sm.[")5Ur<I&+2)X1@N0"-0T<*;Q/@:E_elnYEH=3-`\?I#(OjPF[!mN=\%A0tg1\ElMrc.o`3>S'N
%M_94_q3#jpK%-+:!"_L@Lm-kK$7's,6b>0sTf&=jC.F]B-oq$;DQp6C):mLG4d,D6-6,4PQt)ADZfMGf:hmpUkII!,qO5t(D"YQ+
%IlRb/^="4Kmq2=I&34f\DW;oGa#SB;Rc<GJoQ_!<[8$1`hg^Kt=`KP4&C1^/]QI8S\K(d8WIl8f6D\K\-;KbDriQ*rq&I8*$H;$)
%Eq0LF>S$ColP+e&k/dfNkcn`p*!S/M)g'15M6^,nml^QlZrE*_5QB\DJO#:-&_(AQ"WOfqXVt`DnU56]e"8Q$DHIoY0?WGD9X*p%
%Q#[d8fa]r(crJLt/A%aGjS^)<-diZ,3B$%Vbb_UE_KUA5=P50i+-_M.mHem@;8nWg-Kcrc+#tlm0C"Fc->8YBl.e(F42nPDq7i4Z
%ieP;*bMsis0DG'P4!Ko63XU5YGlB=K1QsX;2$R;cK(O-0mtcH7\Pn+*Euo?3Bk&8V?VGtZg/`DF[+jER8\-4sL#c0igH]-=gT[NV
%D=3RKq=t@\pDA(c[Vt`P5X?M!MsQ^!NM]"+S1=RU=t@V*eng%GU_&s":AM'!4^`$:P1nY5"s24+^*IiDcEJboMR=^bXAg,4Q2>mD
%>-b8_=DFj&o8tm^`VaLWW$o#Vqs>fOTbS:eC&)/r4167N\*Db9eLs,$i]mCj0hdFe#H8]\QFEU_-TfR@2kH8ZlWiN5Y6dPDo25PH
%"jhm)",9rUL-/1a+;LP<r]GCn.PIa?R(le%Q@bNS3?t6W2,Q_E.t`sr@<rk&W@Q)'<]^Q%oe7t]QJBrur]6h3d%?5YPN2BPk&uRm
%:D7G7pF-HIL])mRc`<OulA2G+4Z[4Zi=4pF?Ho:u*3t)(:JsKj.H@,CD5c79EH+)%)jAS\bd6B]8tAo/"WSfV.,@l/.7KQA93Db0
%$i"hj,n3:>k<-Ti(B6/Ocn:JZ(-Z87NWGk?PEGcJSoWRX:`Mq$:gu?EhTo1kQd(Xjhs6e.'&Z,0BOuX(>niQK91dle&JI7EFlpM@
%Q+9adk-()>*3(=to;l"6IL$&>W)/k@#^A))!fpiu;)<u_.etZ+d:09RVD.b+fiZ[<\KS\FY7,3f'&)*hg7mhL(=IVJPsl%@BH<!\
%p$4@%Lu;PUk?llHNponj#'_Ut<j61r[qkF:+Z#o7]EF1".S'fgW)Y-(XK+?tfpLl%fh,]KSCI>]D#6L6pJ3OfReGHtN;2?50mFh>
%gDkWTRuS1->ho;g"\2Y\^(j_k8dFE*Q!)5C`[$Vs*4=g&2h8SR$W]jD<[\Pl8[k(nXY9"NL`FAoZc'Qfh9G-Vs4[VU&p*IY3+mk9
%QbudaR(XU8>7Q#+Ga`(hV*L]i/TNg1;PHJ!A?j[445sSQq6`7@R8erNh<Z',"1oj36hW17SELl2_dJ4oA3Ztf_-Kc$BiN^8U7b`8
%[-oJ\mcF.&Ga;4*R'sF&r.rN]iMLQTk?i*U)ppsY,a*<=<TG"FYdJXl0`Ek35Jo[oqp0eanP.W15<6KHe9;BK&1pQ_=d-AXriTYa
%KL&2:hDWk6k=:16r`KV(*OF@j-?m,eX`H*>KdX"`Q`ot@^ZQA]N==);#%PP&[YU_ig$Y!3KH5#[N8?C]_oB>AR.E<D7705qE.:t-
%::Cip#jnU@e6QTGVLAG_F8GjLs84PAGX7+f9`&s>aERGK7SmKSj.H;bH&Q;R>T"380)oFRW8_A^83-2@W:HO?;lp7k0urn?DE&4q
%a=C<^>j'mM6MKoL,:G,6<85(KrAR/tj_`K(4dR:^[&2VZO1hsg8b]=8`@5j<0C1K!;K[oX##RKKdO+^$X%e:(BX8.S_3_meeCR$I
%ADV&>IsJGoDk"8RCaSJLErN)8,\\rc<3f]/+LE8<+\-C<(M?BDLYZR'3g/&O'N\>^a":Mi`LinoSD`]R5Q:Z5VbaRsh\-3r?PUAV
%dUW+cs-#+6em=n;s,b2hF`EZO6]a#qr?mOH^<o.qmN)%f</0;LBGfR1<KCRjMuc>88X5:4K<lJ.2OIm\p./*I3/_DMNN!&WXQsB%
%`?b]anNT@b3TnNX&@\8qn!`7R$OQ=p,b\$"!-_"GIuAd7DKVZFBMK51Vp*q4M.173j0_/jk+f?P>@Me0I!SCQqL.[moYuh[p!7Q2
%rbof]YD)>P]qAn^[\sh]MNgLiAA`^^$H36W<Ia4f1<itO.#Z1aj?HU&2`h@i_bU?KOp&J]7oW$q&A8-m;JYGXp'&i,g@[$4D6!@q
%W)+2+g/NOg:lrcI]ad)?d0\<`RGnW\,<"8&9,](_$fj6+!!"/1ad"DVbpMJ)P),Bp+k5><LQnXq.YI2'5q"&PLTXAaAdh8=GX\Ku
%@ffMYKRs'0hB#!TR8IPs*0NEL%GsatcYL.T,JW7U*RUXF+f1IU%S@!:a]BL@7KtDdZ(gFVYN`lMWDI:XNQbp1Y.g?=\4p9qoOA4?
%NLpaZPbl%]k.,u6-%GNZPk84OYh->6+>`P\DA=1&`&a7&Y`%mY`&D3HSI.H7O!UM,H^O<I*&P+kq+,*@lkK=3hiV!]ZF(S#QeWJY
%^nFIX6p9`*Bp(b@b-o^j7@WURSnT!,`(\q)`?aPm#2^`LF?X\O"=P55cLQCEb\TUiH,-rjBH9GAW</lGhY5_;IA:l;/s7=D([:Hb
%%uGGL*MNcH'`3?4"]Pi`]t_uM&1<o46"9cOG0\"/(Z"hJEp\ckL%P_"kNf?ZX4;HK'DV(LiuKFA5Dh@JJIB<q<0/WF7OM+1?\m@`
%lM't`s%UPp4P6PUh;:c*DWP?De_eSli):HD`+bgl;h%Q=1$J-D!].G1]a+610K^PYkcD$EDiiM7:JCb0@^+62/-CJ`8ZI(ie?;5K
%:X=W_P0c@^l]Ha2kMVFI>!@?u:"u4jC3/"&@R6q?HELlN'mkaq%1ge;%.SS?pj/`K3T8Xf^"6M2Ld*_B/@WjUI;tn>UE@c/X4NcX
%X'DFPcL7jY!a-Q%gb66E/;6(Gq^.***>nl.l!r6NYuJtfp\".Ubn'fGN4bgIT2lH)D4P]Js/L4(I):UBDhKD:rS+9%4R5hs*u8'J
%9@bYl43dR1aOHT@eM424ArlMOgD=`q"\UC;3VH1Ym[NO$Kr[gsM-0%4ak0O:Z)+6(+e:M^=7W8)@3c>5B]uj<PNa6kSYWfQ;\VZt
%&B_HrApo,,oDe`;>lLl^Z)WiEQibE>Ug/f<L-uQWk05pdXDEDI`H/hPW1UW09R6M+>?+FZ!l3do0BR=N(o1Pa;Uk@5rq$"WpmZ1j
%Z)!N1Tc;k5&-[k-;Wr[A"k%ON0;k;XIpu;6*13&V[pQ?\4C'hdbjM+P#2$`U>dj-o]J^8$b/_dnl2'u:?K?;dAIPQLjsbT\YIP<;
%R6H9(I-LNm<0ue)[RQ99Rfs?r2n-K`ZQ$,E':DQ%bi.bq.okE^^Ba@iH?S1Rc=fj!k"qTu`tj'/M?!3ASWg?]2E*l+6f4K6;N&`\
%_hU-ujbT3NNmFSO_eElujZ76Ol8R<9ZXl-,=_$V3nL<tX2rHR-cFT%LL-_R/kh@%\mkbeqXa()*GVuDFIgoT']Y`=m;029eS`VMM
%W7(%W!NN2d,tOIS2t;:7T+Vb@4'qBYC9SD29^p/u%Y]+46;eqjQMHmeB505^eLKIta>UT&)-O5rWPQtMj-lY/H42\,`O[Dl1Clu<
%WW3LZ\M2'iDBSSqLp]jnTBEUH0.ms6m.52OC5gbS8EsNRB:8Tk#l1ET8URj)9HW"+2lc>,6gXtG%Lr.o*<u8n"\?m&gmgEIAu#4Q
%eE.\4j9<hi4@cX.II*JlB?YjYV'OJ:CtXC(Y0.l.Ip=G?iuaEo=[Ucd99*!,Udl4bN*^k[ffc>f"6bAIT%n`CBhbm.iff"3P5bQP
%(F3`5>((TE3*Sq.[t;;CZSD@o*/l\"T8T\9OjF6cOmNF]kXIfD7WIOb,T/D)oG!Ca@IJJQ]VgkO44;Cl,pZ;kZgM5(&[CtG0i*^X
%2pD*lT1s"<^lH02D<82W!9EF#Q]V^U<9qg2(5Wtt8$^qUR\\d1=ZK,D+<H$@#!>E7AR!.r?f1Bl6@$m'ck7m5MekP-Ka3(PS.=<L
%=W<+%`A"Y%hcNnD2\+3#03eD>?=:YTEh2T_.gAqd,ldN:H>eNIU;!IEoO"3PmnT\YJeT<m:.VGt]^W\(7hb"q&GM\@A'VC=R"B$g
%[8?\Gl#N/kqo(,Y0p3Vj)^+M2FWY2-`"S%6?O),AK3DoM7fQ!Qq]"W9"R1G[Bc=hYJb7::k-o%Ci4l[+rT)E>eC0mdkLDIZ<LuF^
%7/YAL?i'4M2ZDO07O*_o[5m*q[DIp&2e2,j:0?2\UUDZL6.@qK;uM(LiR>>S+'"NcCd*N1WadC+%"!/^(%FH5^lWsa@G2Kk;BjJ@
%?J@57#f8J`[3R.MV,j<@*^cH">B"ND2SOrAA/u&`H('J^g#Z=28%p#*6609S-N3Uh[`<,cCoa=B#I\9$6hN"lUE*#X9kriOYXLCk
%TB#HDjDCQCPqTsce`O81pCV5Y8DB9692d0Y1(6Seof>#=)Lf"9?p6pd=f>!W-WU1@Hjce'7A1QA8UEm=HI%BB3h+E'ngIX>p&*L(
%XMYGn''`E$)0>&IJ_4*PUH\aF2G.F?QW2V0<S&,.1@Og8MEs:9Zc0DM9S#*KNm2W00:AbjH^8.9b;2k<5[Q#+B=f0FHFPd5%]U@s
%d9:[4)5fL#bV;o:<22Jh(BW`QDC0'aUQg=%:65U3iml^?\!g,&#kr;f-TrMmfJWch(51):D4SaapPb.`c.$DeIgCojO^"l<lM;U\
%F&G\D!ON+?SX20G6_R#pc)d^A+(Y&E`uJNp<3acuX/_mbXVpDB2DLMJSO&eEJ(n.KYic`_=l(L]>nTWU[>JtHa1=9Ya)U0[YluNO
%m&5`4[^e#D6[/CU4:ifq<Z6]<gBsfF2qS`;am#K?jc[fQ]NL^Y3Qfp$"@Od<,bP]RYN3dpe-GG5&i9LhTVl4U)ShIajj-eMS>*dP
%8h4nNCs2dNY+HE\RT-n#&k+X(ILX)+k\(6E6FMG#^`f0a=^22YTRfk(o)mFZkX'!,a.*Ht<[2s%k2#W@6_UVarWEN%GLn4WjYF?E
%]EO\f1$K@H3@A'XRFDq<g=5Sneo$DV!rMKhXO@cu7X<_/^A2u2Jua%cnYjn"dZMZ*c7Ml_K=)JX,?1Z$+ZP#]*+B13j-#=nYO[Ag
%Y^2>h#L7SRaOHCd_WY?1EG(6DSm/E4[E5ng`148Zo_BieYK+hDm@J4(*>:QEmANEVC+53Bm-B5s/Vqu&i=%Inp$C'PrDi!!5[<F_
%+QeSto9A9.c%.0=e#:_e:@&PPn&?Efin/'&Y[B6[n?[S'(e%"gEm`r?k&[4#hT3r9\kAE"mnkJOh1&!3fGCMC%#/:f%UgoO"],CZ
%%0<Ad!(hRX5tS,Bc&hV)]=$&s@BOpmZ(s',p+$M][C=ng"=A;0lLjbF3b7AJ;s0]@&$\h@7eTCi84m]_.)p`-/n)dC'qgKh@UJ-l
%\+o?sIK+^)gkXt8@*=r"32(-uL?k3%%"5TW<U9J!FHffW6*.AK4sesY"2BDY(VrR`2GAt1XuZ<1XkIbrWC2UuL:"fG45(&1,LO6,
%Uo,kN(FiYu9hTJRM*b@crd:2men;D2Z4ktG@'pGZci*"I-1)C%0k1I(Fa#Q[jLdhec\#imD^liu\KUdRD77KfWA+"Wn)@=9I6oq^
%egf=HV,J[S>:3#+kPb,/!#MZ`9=[`U*)g0D(o*52L!7Qs1:LA/moo>@%Rn.h-<ob;aG,r+FCd?h)bC%JSLh2)O.CR317CaDhRi#A
%Si^_1mC=b3?8TC7gu%ukrke*_&@l]0/r8plSj@q&51=d_l*(UknGM'jOXUO.;YK7.>2-1jR5EDkmO[TV@EO#<[FM5VjDnGhmf*!'
%R'nU<D63-]oLu=aKN[XJ`,Tb!VC?RL_?q5COsXPeMlMN-R[&R(R`7N-SV0+^Y']/#i_gMjVQhPYaY8Xiq<SFE@I?_X`;U`u6g?n7
%@n1cQ0$"R=jeGTfbic6;/s!kjAf`2ripr>;k5;@co\tA&j^,=-b#EWS9**^XX-p2:7jjj3b]97+EjkZRViKr2QSqi9N-\Be[4)PW
%m'P1smUe)!EiAJ^TJSYb*=7Z"/+&/$4.-+aH_iN1?/bC*2U2(qq2Am(GFWLG^Q;T58"9'Dd7si1TSa:Y>XK&FA$jLgS]e9%"js[0
%XgnfQ\38t4S-9r`e@UEGH]u,j/Vt^l&@gT(Z@`)RP(5U=aIT:hd)mLpf28bFF-U@H>c,29:1m_4[:hN=kM3<]13]=Ak*9.Ek:X<!
%*7hK?l5\&\H+1.t:PQY\*i4*n_4Y6C5.`o`rZ"7LHSCgVc$fb8h6Tifks_)E]m77Pj<"3m<H:MWHb<rHb<dD:<X9FVY`1W13G9*L
%YMFkDe[TIZ9j!u#%'JK1T1NCNY<Ve:?j1X)#_$0)8qg\+YO"#KN7JFQ9=+"Oi*Z,ho9S82ccT@ub_8]&b1JY;B(O[@InX=JkF"+Q
%fm9#*?NH-V]lSbp3fF>FY2`@se6jk?n@_3R*L]C(r]*n.8GQLFjrXrM-i^qgNNk9Ja8YjRj;DSmKukkM@J:NLbI&I%3t#o2G7^GH
%<oU^/L_:n0Xdh]f[M?L@6lW#GQ*q`9N1l0KD(s'8PcnqVJH7'&#"sQ>([7\%j6*+K_WOI`qVuS!L'"s["PI^$Gf_Wq3_g1s]XE`V
%)pdb<8YZG:WM;pKmlU_if(+`4O[4eXU9U>JKT,CqWlMYN-1LiH1ih@)R@6Ls!Jbb!k(apP[&+8&EWf'eFh(D,/s0>gV30k]J"'to
%(lZrRN4#K(AB<9'fnK.Sh+E%Md8M^]>Sq:M,L4r)Af2dP1'*DkJhR"iHeh(:Bs*6"Z,.U#A/:8^*HSN&dXF'\.e^@HYihgn[]<\h
%a8MJjDDTY2`%<Rk_3'"/PB[^#@g`nq5GsRfF9We\-T8D(j`0[-XIM`)8IKl\WSD9tG;fCAC*^EL(o9L5&W(!;R5o\"FKh+oj\EJQ
%BW2W8&5%>tE?l&N:(`fYNWC94F8MrC@q#62m(I;$o>HS(%m!B"V9"7V$"V.r:d66j:GKr**%J9@+BoDuN1e2E]/d0XZfFRDom/rt
%-1e>Ul($q.!VSWLU#til4L_@pi0#AYi]o8#8m/&K2p^#5$WVY%D7F,l1XfYn7K(mATkBWL&UeK=HeMFb=6/.H1d+1'78B%e^'#3,
%3Q4t]#GD!,CE;F.B7MP[Gq<#P>pijiqU3b3[$]p?JA/@&Kb;C"$cH+)e6fZ>SE!G%iqo@*IX/D6ErG_'N<YcPbkkXV'`E1r-s=3j
%f.;>n'2Y=7W$Lkqf,Ot^q^j!(N4VCWh0G7DTSI1D16EQ=i=7rE];h3;7&Ci;,%'D[$sk&f:3LF=ZMF<^(3mU`AttmH,X"ZKIo_RH
%GaWdeG11lRIN:(PVWciVP`pdMr>P$@R8V$s/p)aKW(1N;1Ico=m;R[JkXY97%q'R%9HhkLf;p]PJ+&\X/df5u?7\_]%*^[F=mcLK
%Z$DKFj^7Nm.J+dG]#VdP+NaEVi<=W%(]Ft1;gFsuqFj[\YMiH[Z`Gn#R90fiMeTYM(K3D]HVt`Qff69<F4MO(O75,kg2h4"0,/8Y
%Bto*8&f#_f_R.)1X%51\GK;8jeM*U?[f"N3+A;EER;:dHkHS]_%/u3:cFFdiE"_cIQ4#SlF1#iYV/\N>![N,XI;A6m;_MY5M/7Os
%*'2<(Y*p.U!1#Uc]u;0JM`=I]5*+5G%]8'HJ,K8ihSF_4q\D-#r-/&$[u="VNScqIqmZKE:5n>nS4[iNfZtFV'\up$$D.\kp"]=5
%##2q[=o:EaadbLCILW+bk9-lVjt<nfEoA437IB[;D9-$J,S8)feX>EoUBA;U,Hiq,icPTTA7`>936h>hOPt&XUS]Bb0c.EPK.8El
%"PFs8So#J%HbuR[UG9e2?8!'XNqa"u@78fn\]qCF<]0#Nn49@W`Q>e'V8pJc&9_+G$T[m<_CF6)6!a\dEfqt$'k1T=f6@#\_>^g/
%WAVk5"#\Dq%,2,pHC7FqE2s(PfhHXLd$JH.=6DDAPQ:\qQmFl3ATLp-n-I'p">`UkFT4j^kq.9"(*cS8^b5XInWSqn0NKbKQlH2Y
%f1]hHgH+Jm`^sbfUE[BJKJZL[k^5AlR![&$IX08M@c:A'Fk^aA+67qh'2XEH8Tr*I,9+f>mq`1'BZ"/j#95!5:"pd*=m^JLHFKSl
%b_""JdY\`fg(3p7M4>nb5)-?7GS_bpI('!\jP]d>\G+Ncf%h+Ta\(Y=ikBO\7Y;%O%R76HZ]?Zt5h];?>#*$e4:@g7O7IJ9j&ZP>
%P:#hk*2t>m@us@3a?Bm_27aCAI]S7D3G?boSN&BaXR_Ao,d&IYH_^*`H_uAYjRu(s&92.)IE],&E,#B7E/,r7l<i`f`Sp;_[u71j
%r`:EuSuiR%AL]l:P"'=.'^bdop8-rHf;fP0--XI3A[2G(OjK?IhN@]R>JiF+WQIJmCl.Wm7e%Y/W\(Mg!@8[W6g]8[ICJK3Po[p-
%^'JlJ$=Y`8:i=n:&ar_nQ*NhW<c.XcjqjHh:]*-P=VmG?h6j(g?8EXtOs`46bVM#R<cW-poTg)V?R/aM%^R]L2nFb]8()*c\Qk>Y
%?"YO[c"buH.%39rX??EfXZ<o.Y_gPm4U@5N0dn9/blZ694kT^+\aQ2)4\q>`0AU%;%30FLD,$"0IQA#<"CCPDfPAit=d'7n`0!BR
%K235^[:X$<jbXqdgU(39r)bIR/et(LaDTmW-Hd>*-(#d.Doj:GKgoa-*#Uqg1%B^.E,`1?89iL[R<,Mae:tuscA8!R4kr]4SipWA
%UP0V`/U*Y):kaQ8en0dl-j6$;mb*9B_ugP?fBO18D\k3`UfCVFZPsj[Yfc!(LB_k5'sDOH/K=X[@M46YmM-8;h%%Co1R?HS1CR0s
%K9XkJ<E&Tca(UC\PrK/f9lkqMie3pieFn'7I6Hlpi9\7K04F]j/uZ?;2^rb6p[;^2;-(^qDm#pH#jI&OBfg&aSZb-adUeWH&5g%[
%p:Im%-p*e5)Q'18,_TKj<d>$-/LIF[/'N1MZ[Rs7Au_k$-.Qm)^Ag;q??CrcGqQ\+i,]B"<pWud.iV[^[:7eO>/hN:nWFRtj-rKn
%A8Kk740!db^R?=160:FF4ZD1Hm6F7^RafVL#mI8''IjW&.#3mIDlokKEA!=Cc&kdVgtH9Hk!YD284$-:QD?Ak8;)_7XmL<#h#Ebf
%jWnQ^>3-gI,#d=T[q+4j.W+FLXF1J[V@Lgr9\$$PfDG+:^J:'_kL;7,Kdr[kAG^h@2,+Y<W[X#O9N*kRe1W+HV<Jc495Ah%f]rn)
%P_bM/A/Z2n*Qs3X=[cW3rF-Dg@C"!kXCAk@+1@@Jh!.]\29l:EEq2"m%`gDj<sP"OnJ;rS@9ADi5ZQg7:J1nSEu&kPP@q9//Y6?'
%$7Q)l.qD/-2PQ8(b?\9$[XMO<6n"&@)%P+igj-?T3Vt)Dm4j==3="&lQY]]Rp*3-[iSjb%K"RGGkYO,:T]tff:e"4m*SjY2P[ChR
%U;Vh3XV;]VaIaT"DDn]Q+.SK2#Tt>jGri)M$@)5.RSaqK=o3c*5Np-YC3I=u1S?uLPZ>r/Ytke-037mUVQI+Rr\cu%:TKS2G;kUn
%U']O?##n.H2H]EKE#XZ,F\&:,*P4==p8%(lWamX]Ht6HhIc8=9joq[?T%P#'0I0[l`u[<>Z]t]2UkU3UH<RTYa$"O8R</Ea(WWUU
%Q%33'hh)g+AIP[Z?XmI3jfouY:==NrQ8`oPAaF77$e;lYO$L?]a[N;IEtU5bCX-lnc0Og+omK8Y^[cpcY0B4[&&m_8ZE!P:=Z(n4
%CTZ89)2_XeVN.jc7[Cp]dcZAkWR:.dEm"a$``VTjkt-G^J9"O?3>ImqltfMCBrNpTqN+jdgZ+X_VkIoEHbMA<#VMBAU*7X$5?!32
%>[J#u>o9E&X(*JkLu@#/U'P+U>*=";(Q@sFrjQ//Hu]O&kS4nJ"3mm#%8;PjQtnQBoq.93fIAah-!2qpkI:6Ko6gQU$2!iUUYM%.
%N+N79Vhimeh[0lUW^/2@^RTO"RTf=8(4.g>lV]i,?.SBJk@)eei.WUdF;2'rKIg_4I3;KD,))Q+5eE1UJVIDf_X4O9^pC4J?6hZ.
%TMhW%T<6^]Z9_qs-.*ZtCU`qH]X;37'P&dTlX8!tEiC9g,1P`:esG;,8qj<]A!)a\r8Hcm[;$eMDRZI%+MZZ/ph(j@Z7kt^\@>V_
%K/YpU7Jd)d@AsAh&E\Bo#lG*bb'A8U<rGd.lGL&((Did[_ti#7ph^;W(:=gT!/FJ>ZJmi5JHM'q\N]$b@9YY3E;f9]PGqR7$;Arj
%\J?WrQ9[@CSVr]'mpN.';p+-]l1Fkcqnr=Gc*sJ\S0Q/?H!q?.BF-'A&b>Hp/Qn*<;UmU?VV,4;mR2AQ?]aQAf!&ut1BFhD`#`/h
%]eD9a](fTJTC/KG7[?`r!\dr5$j\\up2s8lZKDlt(!7ZfJM-Dn8r0$#G.,IFXGW6Gj`+mS/S%[^Wt!Vd5:8Bi&&^Rk_kGR)f;\Vt
%49^Jb9so)+Kmejt,T1=B$MK6<^D3X&?)`&d9/Y4-WH[`nLnhgFqTPM00?Ch)FK&NWDPntqTlq&&JZE!Sr$3Jr4qG21(I*A2"1@N1
%='jiPm%ZatrI#*'pAR/iSjD)O7WDk.N:(OH@__S`MPj@EQJG_P"&>F2%#D^G&5&d-EIK@U'W95[\8gY?hIGuIZu_OR,c4#Y\"uD4
%/8"33r2GL/r*<-1RR32cd:b%o:o7QVpoJV#R%[nDVe,+8H[6^F(t$9a;Eu`A$.hV+2;F0<:Yg^a@NO\Il%`$b"n/aH*a5<4PjG0S
%b25Y;L:oVb8Pl\i&cW$E;1:O$pr#Y5?JLpN)99bL%^Lj<"Ruf!RQRYAAetGd6!6o1[sJ;l=\"#\kd-+96\?T2R]RN%'L#ML/dRHM
%1.SC;GQJC6ABR$kX8`rAR[QG;/5)o2pQu++/.7q`npXkKTPqM(f@:LQ=##PAh-5&>5?Vti^"@:-V5Mth_L5kA_7le04h.Nn4En2B
%>/cQj-DJNGj!G]lOOtSFJu3!%*,BmJ`_ea$'#!W(>8f^UV03!=,%8hqkr9VEH"NNMaQEZGasT5J]4.Y.@G[-u:"l#&<o!nO2,eO3
%-K4jB%9.R&nm;<1Dags0PV`q8%WQZ_gA0i:Uheo1p>s@n0q<KY$bm](IlM#\#:YY1OS^e?,X3$^Pr0r_[Nlrc8]s#]1bB)SCu*c6
%ltHjPM<T<Z`GkD;]J^;l7hTh3?62Dg:U`((9Z.]po*'YacE_E3Gmp(1E0q!La<P=l01bfTV-(X*-!RkG&%o(75G$0MJ_Q;@Z,#%C
%?214:/WoQO-oOh`.N)!<Gq!o?C=%%IPu[KBiZc\O2io.egYV&beu3oi]'q`eO21_Jbkt%[)k>*^H5oD-Y!\GC<-bcj6^=nf.?4,Q
%:pN#P0s/HQ7*;A;=@LD=CJ`e)j)0I\=n=E-Yh/&U\1ke5O>:)<:T8GopMHUJo'b/cg!Hee:%"D2&>/AiJ)I*3N0g5qK_3lNCNL"0
%m!R>@!t0&DhF`-9n*2-j9n]X=DHX@[R&"\Ib'%2_SZI7km3K+)3CNT(#Udtr2>*^U.Cd9N]7WFK[==Wk0gEg*M+jECdu-n-:1T6A
%+\=S_FqfI@#*3:0N)dIpem=;Eaq)_\3Y5MZd?MSQ]0-a\K/k>*n(_HU0:#oR]Ob<t=J0iQI+CEG=WXUN3gn\CE7[_]]&`l&k5r57
%fks4oql?e2/mm0d9(*?U"WgZ(A_Hq$Mf4"N[,O@(L2[iBb-jb=E<+ZkPf&3`V'S.:m6%DamIbsG]!.rV.1+a?lPu,0;mdgG>rEV)
%ejR8C&Ki^leqH#;U4-PU8TDNa(p]1QR]<q=7pV2)HRl//Y87neZ"--Mfd6i-Aj3W8P'qP0f0e9pQ?B26CYrtXWWL'>m7^0F:jGZD
%gs.Ksc#,W84Tsi/n][_pe=>E.XCtP'o@pfDGM<tGdd+Wu[7h<gUl&6^A@g=ja"rLd";7_[kkVtobV`SeWW/[,I5AuUcqXJQ_95%A
%E%HfFCP?#YPfkY=#-rPZ8.Ka9U#=%T6;*u!AUV0N9e9s@Sp6s$[82QL&p2*[;-Brs1n2,N+N$in4V-fFaYn/?$)fiE)_BP$2]Yf]
%BT\7C@p_@MB?c>_O\h'1Z3r,`ri?h_Ode7S.P\&*eBIR$9B;qg$nkKb/0S^dDBjWMLm6E4IETPr$.[[-%;qQMla1UZH<\3e7gd<-
%rV#;WcIkrMl'<2]347tihSu7Q/noV,Di8/"93H*>>-'0+SJ@bl%L!Of9PJK/oppDde-'i%(q48@M\lZ[ls41jR@9c2o+<rIDL4B8
%>6O!8Gp8O&Ehsa0=X$sI'C,L2oXU72iDM6WV8pW8$Mk31\<LqOH7`]jh/i;);g*&(h675=F$YtC]glsd9nrS7;Pj`PAG#OK8X!n7
%^LkJjr##Pn.gn^3D)9]HK[l\e!GqKt6_o^NTI?:I$-p>g,%LC77.WZD=)ugR5!dTC/>C(c7ulS.W8UG?b,R1#C8-_C?%,>]C03W0
%@>!>rd&+hanbYoKLRJPeXYFXqO=?EU!]>iqh(Z*K9%aSNb<E`#mG('VAa?CG/OFVNBWBa%P;q$p:2*P-[UV2(YWeP3Lpsl,iY?M'
%/*'!p(]'1b20n>Ce)RlG\H$r5![8;Ljih<er6463UWjD%+XenW,J!j>UKb[*fiAg=`qQqPTkV8HdEs?EgQqeI#dF\XKmD.PF(!DD
%4'\cX9kIg/LBoc!2[lqu55)Qf:4ARH,n,oB*YrLn&8(?EO=@nOMcd@eL*Z1?;d]%c:pMeR&*Fod!qT<:\kE`np3cjVh$WS"?Oe1.
%Ra?K?DYgGeCX_%Nrt*,9SL])_eB1UO1&4m"n]r]QV,QAEZ.bY"7*'c=BU(.qQ-58]S*"s,>Sfna`i%ro@6&3HJ",!We,Raja.2sQ
%l-;/VS5cLmL#XM$Pn!"8SUT-%;`[l$9j+ZYn<2Xf7KFt`5_ImU\M%A)P=52>P]564.;!:D:(khIV:fbURYQFoR8-B`L>R(Pm9Ik`
%2HUm`OC;',OP`ef=X)*2V@GLk`WDW.'0Q,L-/H?PBFW1*'(prWZ1QdWObg0[;OP>e@X\2j$<FpFc&[a!L\R3-q,fF.?CSQG(Cq.?
%hjDsM#<;YWTUXuD\fk2Uhl9+a;6;C;@69u7@AdSD+dj3CWO[5sR7g;Z4dR(FQ/(fc'reK);705\79;GY]b?qP*ac>$NNDKG+Bmj;
%"Z?*fq_2*&3b:.6%NgXAN2-7lGlNnO)1+MT(lCZq%>ps!WL^t3gcE`BlR>X2frK-i8_ag9F'=']s*r1.S>VcJ=;@ngOs/<iQdnS'
%4cN0G(R?,>MPJZK)1$I8Wq*DBaAK\]@jKpm0\;5[80@uD1)kBj$bVXt_W_)(T`'9t+5Ek;HucS1MJ%[A<[A8[8n>FXEM'a])N)je
%[SO<H"*G#\1F/XOWp;IE*O!A%=H]Db5&Cd&TT@2DY=4L-!DZ8@H7MQ9qR]EG_KHJSJU*,X?I-P(`7Br62pA%=Cp%4HmGn*f"=6]B
%8KTu8X6$I?.U&EUD+DS#CNh)X:<*.:C$qWaWWuQqa_@a/X)0S%^buC&0[>@T^'`-O!DRQb5[6<CVta(_Y-MSH]4>boSL+A#U@:gS
%;02pu/,<g<;G5D4BV$7$7f8Q-"rSe@DJ[F2X*Hd+:^T$0$=h;p[[3N,K'Gm+@ZI:((UP.bG=;"OOgAR:Pb^1I3e`3:LOu6R)&c^%
%c2j<1H:b96cApb?9AQbs:mOUeC:(id/rk]q+41fJeL_6S.*_$;4pjG3f1[^5lo7DYK]e_?!W/jhn$H#H\B'V4qBje1*a@a@WYDi!
%Wb_iY9'Qc-7cUVEkJ8SV(qU+Xkqh"Q"(c#bm\DZ4!dLgn`PW^j!=+Xb3]tKk01QSo<EK7;5#5VkM8=J#8V2jL'a"auq5rqim$1*'
%#Cn-rTMu_hpS,]-[4gk3T;YMcGJeC[G-]pKE%d.Uc''D7n-7F.3'U:+5UFk/2S/h9=BI@gTQ<.sRbj3_G1$r,VdXX!TZqb+6FKjP
%Lfja)JIF,.THOe)9HU_.RPE\5ci`%/k(8q6+.s=+IO"u6AVX$i*@^Y=,Aib1WWRs`#i*3@DID+\prSC0%bEi,EX&X;T7,;AZ<2c_
%H;gfOd,-t[PqQ@g[sQYTr3*+)KO@]EEZ;&m4-ZgC):Jl*7T&ubX]5BM'L'$94c]khFpu7$^kA)<.i@FV.kfbU$iSh\F%oo_fS*t>
%Bt3Erjc6l^N,(B,\AkPoD+1K9"F]WR`6B2FSRKr?hBn=3*?&s&M/VRPMK.)l^.WiJbEE&ZhbF&lK6qtCiR"i9kGB1IJ4g!&Y;K(g
%-F+@[<^<)Ra139oeA[l;67-S#<4(27r,tg&Q2qEToA\B-R'"iVIA\1n'pi70>"iV#<%eR:ee'q,a7oQg0/A;t+G=":WB'\Zdh/#(
%qA?JTqT$AI_rhd7q'T0L@5_&Oc.5crn9?6N@,KFENb$TNOE?DNYE7Us47A;Kc=[7e1^*W3k)nJ<X2PB,HD#Bq.m?]gP@`=63ilYb
%5LYV]]#=oJeR3NXh+^la?n\mh]-Z6-HpSRnC)n>K7<5,sPK`><]Yg$bn)\*Ce=LgDccPRO`>6/E&A3O]Q[fE\oS]u_g479]iqE7b
%kQnW(TeBEm=dpXL42k#JOK7inYRSc_f<,Ya9+&6QAWnUb]hP9NOe.TFee@,+E*3([cfa0-6!KCeLer,M[A$[ASB,C_92%o]09iPW
%Su$-41,/<<Z5i_T>d:ka9e"h<YW]Rp=%CH'P=jj'NkEE;*Vj=KeT]iMl^<O4V=$67L[H&K^qlG`^,ZNfV0:e^RsRk[M_:J^*m8Y:
%,H'N5_A8:m>=QO=dt)u@N6ha<.3Kb1-EVYoV0=$h>f-.XZ(&uk(6bbU`\^E1+Qamh-=bF2KH@p#%&>]P(MNjIKg2IkaGp^CZ#VtS
%?9jc?ZrdL/UN:\hFo.cocQu&)a3eXYKeB@X^2:W;b4S/'EtYQ\:_k1'9Z^]1oNQ*7LBQCY6*p^1[t:5:`O7%fp?2-'>0Wro[7-<r
%-q"04+_@6m`l/ogY'dC>[#mJ-Sc`]q+5tqG_V.L*R)kd=OD'9Sa3I"IS`49Y"De_CK;d![^C)3oS,n9(*^Rdh.@"^CE0lSh3Y9=g
%$:-k^7OMTI_;Ldth&Vl[II92G:do*ODld"0V`>GrF_U^i[_g^82TE-'ak+[3@1FdjdpNP&cVd=J9Z\E4@qU%&Wck0<f+3lL.'R8K
%3[0c*8'GA)aCjZuC3=HVPP*%[$D'#m\9MnBe4\5ZJnJm#I^^S#XqKp',K#rYf='KcTj\&ZOYXf/]Cf:(Q7Oe"87t$NeD]52i0CTM
%cDjFU"72!R)E86gRfh5t.V8^Kc0=etdX`J-ZVFP0V]Inbg,i/FR`RmID)X*X0Yn7.qfr!a')j$uKdS,2ITqE_b`USYc0R4_GrAk4
%V1b)*K-R^7VIFIdkd;ot5eKIGM/nF,e=Xgq>G1XEjh..fAnsLp8b?-[M*/+[%CJL3J^ENn9GjP%8p'dC?<(WgLT0ku#F^EU6s?YX
%b;OpSLdXbtTj&k!%f8_gFrY%dq8=%_Lp`0@n[\C7;.4\kO7\Gc<QsQ#,sgEAdNa6iXL7>sUc%:j<6,M(KMMt&<(CWe8I,gG2+4-.
%aOKhI.A0ni`U2-o,4+9GFl7Bpr`qtdhP&G,anJ2t_ATWeGS)98i3H=RN5)^5M*%t:*OO(rQ\bb%6`?P9\E#-u-W:r>#g>E?\D>lL
%.Y,4W0i->mCgY$l%3-;OUq_FPVXDls]BGG)9Y.>6"u*/OGfEY/=Sl9&2`Ur"eneb`ALR)\0#l]\k5s,IC%bA7T!"d4m>"_=j/A?`
%V.uYmEjX;^)E^!-$B#>[d-OQY*o=t+fcLJj?@I5ZK%0["&D<)JV0?C8jR)ed=5ht>2-G1!J<4rZHug<SA'<AoY>K(:J]KR<O8@%q
%>kj1R]l*BHKNP[eBDp4&7&[R4S:eE<[RsH@]XC'9b$=Mk`1X:_^<EkGp_rg1G<X,OQgio'<SXM(-+&X,H&2fk9[$geWg:!!dt0QJ
%2P'Gf4:nfP2RO:+N?s&7S5;iW\_V\i)8G&qU#A/aHe>ePa/_VYXIkGk2`mq'-ouqHQm9.`meLA$cn1)<*cp4#VK'Ar;AaF!DoS:0
%coa9<6O&O=lVqteLD36WNH*qsLouBVg&lqAF?Yj\na=c(0"$8&'C)bGH9pK<RF&u:'n1Gs9'ZEuDf=6BajOb`h$a'DS/[)4>XoZo
%O^IgI.=j2f(bFo?n!.S/!pcRk+^,?Rn"%c\B&m:1p+BM8P',/jT/4g=[;ohJba9J^NY):<BjEi.k;;'"BnQ)#WM(NNUn5#rX\:gH
%XE'O;Ut".i_64gH"gC/>+6HR.cO`=L3!$ODI6<n`5^5/'%RVj>U-dUa1$4hu3X'9s7!TX1hM$Vt0:]^Ti0"[B#=j)Zp-fAV;GFX"
%&@I`1Q5XR'ZV]*fc/gPa:D-ZDeI/u1fH&:]#%RZ!1Xm5;oB<5L[IY(oj^Y*t^X(EW+\c%][?_?>F4>MdI;Lpj_`tOS[T@QO<Vi0N
%X#Uo!/bSMR[/@8*+@1rI(tG2<(e9QqGr`EfFH!<_MQGmfaru5a+Lj<;g">YQj`:0>.M\#U#"37S&COo)3R?q]J,(k14^#4%e0FrF
%R5$I69=&7jPP07IJ>H&0P:,nRfq')/CWc2hPHb@maO5bdo\ICa=@>/U%N4=^W?Ni'3-kU5bqh^^/R<q8dURW^@o%aU&5[84OnRJ@
%V53&gH*nZdXRYito3'-1Y"%f7Bob@nDdZeX9^b'Dn9'2j8LhXN-16>f&KjgEOB]'.Yt%"G1==F:=fSt1(3#YdDV5&3@To571V.?l
%@`l@U,=2Q:a8'a6V9MN:^s/j%.\ObAE4td.@SU[WdgeST8Ph1%o?$H(>:E;9en3rHjh2r)bTt7F`U\&\rRG2'o^'=P!iQGf;Lt:-
%Z04:OUdKPd]>gTPFXea*P@6+^VP(l[1T!7m\d^M:FHE6::Sse[!-@K5_/sYpWoI[&Q?`NCe$U&8a6bSrOGnp58^PmSM((NFb0sK1
%Z&:67+@"%;eh$@WD963@,TFCl91gdFGq42HPUQ5tVTS:/rp]=%17#Qe>BgD.PG@gs-V^%fGhfNF>pT5o<!jU-,G+]:"\)kUGSDeK
%Z[+XuFN3gpUWm`"Bn4IQKr=5OeFAs-A"tU@-n4^8<8_n%LSYtp(cnUUSqVd-*&1U=)(j.i?OouQ38.qhnJe>fiPW`t]L9i]'W:OA
%H+.3#Q<Sa_\ZhBY<[o?749J%rp>$D8]96+g]:H[(R9HO!cU@BXc=_:a\0M/<k0ZYn:lOb4%oi-(-)rT,9kQ^*^3\]^`?EjLq;AR3
%4DUN14YqXlkObjdSC>EQMAKQmN_-E]?NO#Fe,Va9,V@XpM0k7)PlW?a]&lkR)OWbP?8n)Q$T:f(q;lDa-]'V=CT)7g6d-<@&55`+
%=k/n:VT3^X-'BoW(S@.(2tY-&"c006eJ;SV,oXDenfTSFXj]=pNU!#XR1=%[mie%[?#5]mi0:Po64)h>;)"#S"i!'gO8eA[NpMqc
%jU+S4IH-+nDC)XbR#Ne`X@Q225q;j[UaO`6YN^mo4R@4a>qFdSOb<V3cakPHhDseb'Z?HP@OgD<M'4WY.T3:\,u04$C(9PcL[mi@
%>a2%9dQU=N9F\rbZ^6Hf<Q7G,q-s\EY3CS<L<=mbQ5o$9To6#\(:N]2Qp-amT@0H_h>%,pa<<EMpD(.dmQDp6qfSO"J=Zo8nk7]Z
%6ZDhn8&]+)?t^iUG5F0Dm*7Bn:%!CD;CJ2]:*nJ>OY35Xk"&B)HZrd[$>G;TBgY(DF2BcT5OLZ!h(nb9`I,D,Peu+kP2RBP.<\9,
%RAEnqM_MP"_STE/$fUO1caHM^!_F(M]R(F9q[4i4XB2auO94Yi?.(";T--X2:n3J:N(8?l>(A7uo9mG"+0\OaC.69N7h0asSKZt;
%-gjDa9M$]RX:Q=2D3rZS%XkI%1no7\F*Bc^!sPV=$)mdm*isF?(DD\JI>0;ao^t]AZc;_W2=NHaVqY=E(&OG55d`O=mZ9_Qk?N`W
%;a?-Va7FZ3`""6>l7bEr<(^rP+lI+mK8:jI$Qg)R<g-<g'Gm//,j/1R/PP%Tlepfdq8M&s`t.K?LWlTt/C'D,+i\d,s1JUBp:\si
%22OHLa.'dOo^k$*`)Eu-Jtk%tT^69+$*f(M,-Cj\CIrH^BX5kd!<2Lto`:Wi(Z1F,'7]`(G[t[.":.#"1a=>UM?nK60mYDZ84LW%
%-6^H!TQrbnF%Q-D.81;lXa3C<@EY/Mh"Ep="e@9s8L)4@6IgU%".R2m)A@NeKuD!&WTRLn=RYtLbm>#`SH-\j=<#R\O2bPKH-oSB
%4Pq'@VJmrD<?L^0IcgRg3%Kte]]?eLk>J/cb`nuuC+'o<2R<cNfqEWQ#LL/l/\5(lSs5&S<7;%Rl(tU0Nf6@p],`>Q%!+4&4(_jg
%)'`LT.Up2n(;(.+Bc[i5;'.5lAeiRqgjSnO=@Eh[Akgum;5mIH(ROA@8JIRYasD-!Y(a',B6deU^XsM3nqK9_acj7uPj]@)2U0rB
%3uja_k1b'IA86J&7ne=9IRFY#;O76`lW16a0WXV?:q1HX'bbOHmJL>u_@MFHeJ!oq/!+Y*TGc?-dJgd@nl3irc3:TT)01R)LQ5Wq
%CIi&3WA%C@WH]3F.PQ@%H4*_$_,<J%(Q:lHpT6iNp=imAqFTl^MIMskftJCn]BPdD>NBU_q0/7#2OB3]S!Iqo!#;^O"!X5L#G.An
%!QuJ1!hHJC6n`F>+#.ni+]`cFH<N;CAI-i(2Kas\1>=:;MflYW27\HaML";e@_J5)I/2/3C/7Sh5F)-$-gPC@Sc+u%@<Y*E$3"X_
%AbH`'31o_]eEc;gqooFKh2@I1M4$'a$&`Tj[$It'BH35n=+9=4J0W&BUb(V9LA,;FJ%T)+q23'9JH#t3ER+*PeZ%/3O"F>G,.=Y"
%lfU$gK>7ZET_5Em=5gj0_1h:AiWfL.4]f,W5fOOZ<7Y*q_"ZUPVk*[B/I_g,(3J[:>E@LcaLK:q`4J%,>dY"snJ*6,VS)*XhpU5;
%Q%[&0-8=#I1cuc);4)ko*Z&Im)HSF5,u=B$E]K)qXich!Co@HgL5jXM&It;jRYjkQ@@:LGKRNW2.CBY..U,2ppITDPS<og6n.,A)
%g=tDSI"uMe:G5sj:NciiFCDVqe7i[f%I9fI"S*\q'<aL#Q#)E<V/[h""t=!#6!cd&6,7\l&(8Gn4SHoAjL2RESP/G/g+V=N[75^K
%1u0S0SQ<)GBoP^Zco[GdlS2,J>&)@!Wbr6MF1>,uP?)qu1SWTBUgD/<SB_c@g4ANh4(lW)nb9V%hV=X;hLI;QiH#\gK#j&#M/h_k
%lK'(49jof6.$Zt]cgi!<(JjJ8nHWmnic_9Se,*k!$t`)sOcfUN?/a`58eP$rVYb=f?,nY"L_:V['$'Db?3B:"'toBrEMO9r<-<jo
%Hca?&_q0j(dBXhJaMugL*.ZfgaCt/#8a"Sq`N%=]a=5t=dK@t0c4g7"B>W@,G=rd@Ab\6RIom0if7m)[)qK'_F%TUgI]+gY%@o@3
%W;b44;-nd(A:E0Af9<Y23Duf2.ua`uEjB=!(Cf-1np-C!?H!k(36oTgL%=klb5!+.f;!>(4dil/@e'%oH.s.;F\jt'O]'AG5=h%X
%Pn:\.G!!4o=mJLLjLV')*;%i^/+6.m8@h+9K/jb"k`dUQj>+E8)iutsrR_>&**o-rGQu`p%t5-?-(^_"BMI;02D8GW'ePo&Y!"+#
%3<e?eS.MGZZ73o`SnuLdJ(hI%[eML\!T?'!$>iKEY:%t[#&+u=eg6.U'+psLP^CE`7<$cB9?bre%,7-A50bql?c\0Lds\Pa`0HWD
%-b7s=M4Rj?ph3XDC\In*i,@uk&\M[XZog0a:n6FT"=WbJeg6"t??3.dln3_L]sO\@_#-+\7(9EtIW.bq2?7SuUZ>KTW8NGX<RWck
%$4VIPb\p@O%PY"@$7$M+L"IR#p%DKgFqEI*@OO4+'mD!mf>A2`=Gq0JACUA@2$_]Ifd9RJ"gZBuI"2c'a>j<#iq!jI5_[[7?)!D-
%4C%rj#ShU&rpWVKS/GDSfEnn9f$3qLhEVe1cO%5aQDG/9nTLTL3fV5aGXO*lpKK$@ZJl%l-n%AXZQU7?-PZ"kM$)J+lR6aOFV#DO
%^qq;AFZ#J!V`8E3=5:A<_+F'QjI2G,^f]/Dq@W$r;[1`R<l.r(m(OIO&GNW*GFT&meCt#@=p0WZc^96-9e<2'"L,`dg!\X0Kneo`
%$bM<+a!\FZ<Bu+k&DV9L"Q@Saci*8m%m#R[+a<(cZSV\7&.r*pOuR'>Dq,+obTj*2/u0,9oN?5(aV,,`id@OIG"48MOOj7Y72qbX
%T;iU>0ERh+ma%**8_GH;KKS(:jdQMNg!P34O8eBnWnWW`M'mMu+PK!uIa].WQF2pNn*\-jr<fsV!hO/0X2^fUT_>kOa9\NIq3:+`
%#@Cj'Rp`#0e)":Vk\a?-FBRYFI"F*XN4JH<*f<PY1)_Mu:p!#?m_le@p#;1&K*skSJtt``-XnDk`?U18-,Mh,3DeD:,+0dn#pZ8J
%g=F;4,"mFfW(+Q4<>+:iC,A_C"Q$H]NBiXN?]9"Oi7#_L75^Cr7Jb.3ZK]-TMKV="biXFQ!(W@H5;Ok#4nD\cmT^M2/BXS.%@;>2
%cAAtfM]O:HYp06[9u+b$.E1ZWeWX<S],^HdT##k,ZM!epfBKD#9l:Jq5i/+"1(oY@8s/=aFmK1Io`.de'["Y3'SE];33]P'@%4]:
%+a=%D6.a:ea=]m2OSBuV9^9%A5B_hT-U2U-3Wf.@bMui2fM,c:ZubIfL2<"/<$/La-,qpqN#[>N?"$,jj'tJ=Z'[eY%:lNke"X05
%cKEU%4V8qR=dgCL>%GTE1T$Sp*lhKk67<lPS86BhmC#"C(\VP5m]%f.5tb2$BD=!G85=P.:+:&KgSCTVf1T?p3,1<\B9l$EqKD"9
%G_Xf)d0F$,Bl#8@QK?N&AY'E*B%=^VcC"kEZ2iKs#?^2.Ca3eoq#`'2+YBbMmfOU6nW>Ch".,%^UB]$]`L4QOXf=Wh+T:,nSGXo^
%Gc)qm3%+hoWZ]]fiD^r_)NPT-_O$V*M29Ql_'7=jp^\3k<3/mSf%PpKckm`LaKFE!:*6o*8"@Q;&qbHU@TmSF10,ne]oHhW#5D%J
%9I;Jd]g<7Ae?jj;S-#A@Wjp(6:kal9.?(*gk;&T2MkYJKg%=G41=R\*8Y<V]lGYg=J^O)"5A?$dhH\c0m)n$r`$.%<p",u!V\:D4
%d?eOK*PR%%foKj[,6_oF'RM*g['UZdF^Q?is#Mh1q6)u2cKhr&GHlfc*5>6elGmPWDnduT1:l!7pud.u:R46!+3Pc)rkEs]&"*@h
%s&!bTPmk#V7`g#si#rRt\T<TcgD\!k6ePmA(gCY^:5Ju973@qE-fe(:PnVNj)6$N??uX%s4n`+r<_@HubhA!i&?@i=)^&qI+GDp!
%\Ad''=+e*Z!Mo/-\oKM%\-f,&o<8&Ze+rJ3bs2)4ro;o7o7-N5n,D/CrU9d[5Q8PBrtDj$O+6l<rVOA,j1kU1J,*IOc+j%grq8SS
%gOK#0s5Dl7%tFM<r3u]os"Q]?hO`e+:NEE^H-?kLTEb$-J!;g$iFUMJVmS8Di$,$`l.dG)m+EK?L#SuN)"t#Q[;oJL38+M+n5o><
%i-Ta$3#k.-#BXV-Zib28`oqYF(c6KiG<Eo&r%c[]dSDg$K#\Z*m3>hr@TdffJGku1[23!'?+=L1KjEr3?/a$\MtrXM#OH9XZ9Mg8
%YaYN!KC_c\j8RZL.5UMcr&`(4?aS(d+REe8`YR0*oOiJ-DVmV<pFkQ./S!cc*69%mg)h%Gg#o!I[#j_]::qdUojcW]4ScA#&U2_H
%iLIt(>F,:%h%8f9g9SF]@=V@uSiLP(b,8!_G98\7TG.r!CmcKqj:&[qa-[LR!WP1Yr*ANUR1/7?g$^qniEEGc`ejOc%tkOnN&]Ol
%jn0ER`ofA?M.qg]4fY-HkcZ$iZVHa,Y/k&LW&RiWJ8+XuG7+?!:lV+moSt>QL"ko*?nZ+>lE<@Kk+R:/8/pnXQ:@2T9rm,_-q#aV
%DnJ*5]ZsP/K<TR6n[)YhSC<kVBD`>MIf@QiZfWF1SD<iNU'o,S:($TpiZMhRfEs[j]o<p\Ycra/*;+Yu.q>h(U>r"4S3"'+F^pT#
%nSu^!6b8eDp<c!FTPi>O)!sG4MLX()G]k[f&j])GUm=0o79M-RP,B\E)@3OerK=q-]g7^/8DXSPnkfeNCZ;P>.r0E<^Z+1?.Krkb
%Fo`t?1aR16$4+$=PS-:H/@2a4]/9M+YBhd-CLW$SR[(M<HBp1PCQGJ-(l%To94ctfQ8+6ASaj4Wd\bqkWrOo30;]*E94f&?gLhT6
%iYGE(IVbBh0hJ+_)p=I.VCfu9b6[dRQMB1q^.*pl=C`WaCoa7#X&Vlc9QJHEbB;?3JO3hac>U>Zk=t]/^"Ecfa/]4R0Z+FHqe=4u
%>'p^kk"q:M+I;29[mq-Q>sf7Y/1SnBcr1B,8Lb3uC:m8%aI.lZQ3jXYL^c`5/niR=^L7;jga6!IG$8"<GXG%Y;A@)M![,@%>VhJ(
%\J`kcc97b`E_:B_IBQ%oiillQl&IQs7mW$)qc4$0=MDD)URVq(Xd8,ffT9ejV->&)Us^(4"!T3q.iMk_ge[OPs87%hnIdbfh"r4L
%ol6jY7m_Q@\nSN]FMq"ERWSD*O"hN]9s*BLZo]G#8@f'S4Wm&%dc7:g3:j\RMIq,L"X6^4@qrqk&Y"0<`@\Wm7=I,3^KE3)1eh%-
%`TE;<H+$6p>!Tcof=#P-bkjN.2$eG):*cMsbcA5:$A-KTGu-oH4G1Uoh*6(TP&dW<&ad(M!GPS6nb^?4giFOn!8RCt/\<3,:L^PD
%/p4FHgtJRkk1DN:3R6WO1]mf3#_$)rV:@f#qf.<TEE;cIr1F/JN_5j'9[%[KQ^WM1-WK9RmoSEn9Q7*qF^4E>k2\[\q<gPYUoZ<^
%I<0g3ZnOo-8*$l3BO-p'HUf?_4SQjZ_Y&`Xj]#QdKbW_Kpp7@uq@q9+fAkP7.dgQb'LYtkF1X5g/c+Ah7^3fUrmI:4VbR:'0D']o
%^+Rq23+"?"h&lNPU^Zu)*0.j7Z0[ca=@J#;I2,MF!e\L/:H5b?a#eUpjB7fpb;n]A&!i,P&Rb5pX&F(1Qtb(RPr2A9[QAuq`1QMk
%+\u]@LA%G4;Kp7IJ%V4ggGsP>#p4lT&&23&A?%t[+(6jdml\dnXLM6R>V9/?4Cue@7astp6RZZ8Fjdd;V%Y<#6)MDGoFPdF=32RI
%`I08+O,9o_?IJ,Or8CNBnJ>-G[$@U=]XB7_>XjP31?.#U=$!20H8@iT>(p1_]2mrZ;+a8HdFI%eNO4JbjNYWge=,,BlaQePPl+l@
%5AHSV`Urj4b/E+XRc(WKhYpCo`uZ8fmE[oo/I@guH*V/$3.FXKJMhhR16?G+qpk1EiV[/=aU]Dgi?QSW<u<5;8!4qbD&[3*WAd&+
%dMS52U+j<pH!RLqb^5WYrSh*\N!o='<NR[a-'O(>QClo2o:]nM3!OH$K)/oD>,Y8uE05i&AF)&4&M^-:hYlCaLqPSJ>,J8nmC4>V
%T119-FfN-BMI-ePNJ-:gp?4X5@a4pO%Allnif\P8/Tpm0`:D?&p)!&(=>*8:?S3G>U@huAHN7X"niA7uJ,RQefF`CQ`]ZHGn?DG?
%+,\%>(H1%b^W7`2F0!6pYD_AW](skX]1T#u6`36BmfM71+qB%F\#iBU1<:h1K*gJ/`<OT.UnfAo;>?kA.()]?[C;=CkYccN(H_LM
%[r"u>1dCO^QE77KQi(@V<qFHS,%'I"=bf/Q>@lf/5"I/iQTn`T1\kWl/6F7:GLo0[I_*C,$^UG[-t5fi]n-Q;0s,B,:0KMmdA-9]
%jA#"QC,h+:f.-5I9eN`PFF51r\,;?I?@+<f[pAk#2q-MK.$KPt0`*W.GMd8'YFEK330MFZNa,SV%BfL22M'o&IK<d-6F-0f,X/B&
%?S&O30-kk!+UPm>/2O]7?d21i"D6%-(R;QKC1g>l:.Ep6%OJZeUMcXP27L+t&bEH=?r['tbW]K?-d6ii!@6?/#OJ>M'AdZ5o<n^4
%o.U=H5:4u"1O]sY^&?neDsYHM(O,<ECUY3qdHZt/'m@`[9X??d?+cTFgJ"_Ml][81H6d?3M,Ca1np'r;gP^bsVX\o=I`q1.*Q#:d
%O.),f8b/=ZB2BqA)/'pgUn9jkqc^[U?>1/[%m!CI>pdZcp+UESLB_[(UboNdp%JjR_qOot$iACV]@?FBIa9^m%p=*P`?Nk=B_<f'
%N\*XnZJR-/kBj_iaX9de/K0FE%Sm+g?\/;0+\]ijm6]]G,h-Aa%M56+O0%i[ZArVBK3g2tq]cu][P4SWj5R^Y,C;O"V)ED`N\%t/
%["l*eX@>0g\rqYiL``j<k9QDOCD>Wg)T\26F%7sH>EB6Ar"4lDQ7Ju^YffZqb04(dKG*2rCK\Pm-cNf0ce.sTIn8=rAf6fIO<Am;
%o_p/uUW/R.PK`o!XSA]RX%Pl'<9/'H[Ems0BM\OhK'3iPq;oihGj!"\G/C=SN]+Wl:@X]?<HFe*W^jRS/\mnPndNu(.Hd<VD^+bd
%>Y']$aHKJ!B'UQhN<8?N`Ooss\1m@P!Y'&<)PsZ4cD4m>-PC@EdMPe:g1t&24bi1]l;J1q(I/:hq]^sd%^.qSG;%P4kbuL7A.QWG
%HjI9:4C1Y-L2Jo\i8D]%PkIICCgR0q<WkeNZ>^Rue0GqV0MY+6qgk7U\hic^B/qMs`^4*P5<'$roV5!nb640"RP/_X[&aaC;p7]&
%Ug<#Gm.6+i*<9Zk$`J"]&MuM(fA_fQY"FQi?ujB#Y_AgZ_&X<53+1bjdT\RloB!*=j;Ts6_u!BDHu>.^llLT!rB]?`ETan/S6%qn
%XiT`@OLNiK,`aMZT+0)YXd1=F\29F9AqXaHnmg`"!N;t2Zh0&VhR6A^Xh6Aj;Ps<s]@V#f3Mdiq[IK\(6S4mFRDf'h7EPoFj2OP*
%$f-8DD8NE"rUG`bNQ8IL)JXcBaWe\eMXajeGSJJ3"mK1+))`,N*>Joh[#P2tgIi@k07=&UfqTmrmg\;6[`mFh@mtNr(VfhE=]\29
%",S>Vf)%2nHK=l&!:Y535BNmVPjT>`.XL!b\TpQc<I"-?iVX9#m\=;/gU9d)!Q)f#X6,9kQhOqkBo:!r1>$@eMN:9X8gLhT)`+c\
%I69%@:2alb,]?^<-0$qNVpcX.0Zdf3k]^jN3j2jGE_TZeaPo=N@0bF+7s.gcZH%cM\_ZbcX##3\;S&\`D-9m*[<kWTfMZKr>8imk
%bEr#eQm@\-hSUqteGfkMFLSYcD0O,L?Ghn\*#e3bYX,*<]u73hSBQbShp>>VImi*r#2f):!A(27[Vt:$c\PG<dR;TY(2DE^Z-\e:
%*PN,pMb[IeB++Kuec5:C&,^opOoMK.]ArnFs7nVRAH*2gfhVS)n,K*:HEUdXG<)MqLBVo39b_>MopL=,Ms.06@Hc>VgksHjrKq<%
%!>I<_TaTsXD&8u2XMPI5aJ=hM3dp[!L9KWW[i.0"W78[j$S$!dH)==4>!S?oIa)V+>55rI;_hMa1"Rrh>&/`R64M^MElkm0#C"^2
%7Z*6^:lZX_YG.IHA$j,Q\b"M<^<L;UC3^S!^A5n_J_OU1@CL<T$8c\b,VA+5Wle4$,.C4!-4E!LZQC@`ImOagi7gB@qCK@eF%Ff_
%K_<$Sb-a8_KWTHH]='JS5.B?Cnc*B1^"9>Y5n^QH,[3/sj$9%$fqB+mO4qf%Y<8*.9Y<-BF]R:RgXm\N$/!GsY@\`#?G8&22+&<4
%PjAkf9&bZMb2T&o)W'j.5(%ZBb,;keIMEo8q%h3@*J'GL)3AHY_Dj[<G#"do>p^9+>Fk)8PZ\9#^*d6+NQuZ/kZJK4ABP=MHKRXa
%FkN'TEbK?EZiSpe3DsZ`^GO.3d&8YDTrZsD]K_DC4[4<G!^f$N<"sD!.rNV4'gE7*4nOOu8>4#bPq9A*Y11M_b">GI3@2ejeqk5S
%(c=]!%TaPhm<bc7F6QT`?t=(ST%>E/c_,+>[$[/m7VC=fP;%\.62,ef$Ebq_^pWkAl)euNfa-8`d.:IAE>`?[m]a((KK1*sEobA7
%()g]/m@M?<<%KrH^%d"0eY(6["$L#FMo$70V4;OE*2tUUfHf@cN-)PC`63Gb680P<j]]T0ZL*_BHD+PbV-H)%i?YF0.c=mq$i9Yh
%nA4<0XRMBAQl]GIYi*Dm`j*6hlCl*\c([gibM;Xraag!2"%0@P`E`--CMU/N$*T^`q51^Q,KH<YlOs2''o>A/&VkggbT':^U^gbt
%j@F`?B+$CU[i>Zsdl<a_."c6@UjZ(#'Gqa0KR(ZH7cnT&2$npC*i$GRTXQYlR,W+Q1M/0p_BoXT-gGLXHsO#MWNg8X\5Y"=4>'D2
%]'p(AP2GObNRJMj5_l19oAalG1J2<rkVlYaD7udn0b:uJ5P.h>i'&D:Q(/r4`-cUd^;edm*;A];VR@pR4/6TB`m;'6a4RV!$`>eq
%B6Nu/PKS,LcJXX=V\ug+dC@.i*$IN0,s1TSSLrUu5FQ/1c"$fd$H<fCR$M;aR9W[,E/?7/::Q00G,<-gR7r27k]7OPKUP\TJafe-
%3HNrl3ugZ6bVDU:Epd1XAJG0fGni^<g59M3Mqf-RNAI<l2*],QS"q29O(TLSnM(4BkkU[GI!k_hD54`CMNM13>?Of.MtgN-&bFu/
%g"Bu!h!@kAU?G6!kh4$S*?Ra>Brd3-?)8XDI$K\<9F7+0\L\c]XX`_f-I;;Ng<^U5Mp,ugDUL@f]8C0imp->n(_?iZRqk"j_L,Zi
%P3/F,^_Tbok'ko>VaPj0p0>?!.,Ju8UmPA/V[FsD.Rj@Yj,pj/,W37W:'tEAm-./;EN7QLe9S]"kF-=`qIjJ+3423_Aq[=Nh4KM@
%]'?[sO$Ls.hIgOZPBTI\C/2"qns32LQ&us!AY5G+H+YrB^6Lem2@$"fF/b?bkJ!JoIc)u8CV'XGnjG_q^":^ucn^,FW]&%'<fZjT
%a=`ublccl?;^:gil)N6Qh_O-QpM<8&a/`#MdU#gRE;.J6Y:97=H^e&ZL,%(<;P$@oh0BiM'd4-u@c<(u>]a"%bajRGqQe?Z"WI>9
%n/fQjd$;!"V_T+,FNW3]!+"hX=?)@HbITZJBcCC+bS4<C8MHXc&jV10*iQ?YbH\E+9ndP+G-m5S7bld:oen.BhR6LjY89+^bL?7N
%e-9,8ilX=-'"Y)(\W(&KGHogg)c_UUO37+]pj)*Z.JVH1n/[CL]](=LWS]c"]PIpO(AFqKpi61UPVLU8gSIVD77.Zs&'jD)mt&X]
%d2DP*'pje5>7Q)c"J\p:C\1ut/DDh(Nn*hsp88gW<ANd*NS]Y)eQ+BG=6_'S<qF\*NchDd.J[V?X'm#k2:Hrp0[En4=e5U\qL_i-
%;l!9'HKiuF'3t4dn_-]DKF!N2[9(O.:.:;Y\9E#iU^_.?i>hM!f%j)U9aAQrLhO!1J-.",+9HdE.a;0jWD]]./DTCl_3IGCIr@,&
%O9s(5Ar+a`$AGa[6<^I7%!9L8qK%GgDuS;.^BSVP3r*bXT9eC8CZKa(l#66=Joi`Dn></t)!ZaO?kibe8!]TYOkr1e&#nD79nob)
%a'+TR-/_H9pa]nr`HM,F?clC@I[#P'O(`ks_V:BBN?s>kqpQ?bHd7tSHBIocI(.7s<hY7WEFpKkbY3Ue(LHjBChp)_Yf'RF@:LA$
%QA_)U5BV)8PMNK,N5Y^$Ps>>]<Ns]6Vn:s^0lQ(&_^.pock=\Fd3M%W'd19&B2XuD2pRaFCIq0h<UCZ>E(l@)d:^OI?>K6VQS/TM
%GZ`"/5dDG61/!WK?m5DI9fCH!B_F.L,ljZ6D)1@sS.E*k)K`o:.Q*Pb+J-?+DHNAAaI(7f;!alqi_ILp6u*ND5:/mG'@%GN9(L2.
%!Y\+VqRnM0XPqfGEu%'j3_fFT>HeD/f(Q"057Z_ZE6a'>WWh4Z[c-WC`:&dCf/\,DdF'52EZkV98`@)/%S1mC=J^cK>2CB\19r_!
%n$WWVI$%"B?j;RsUU_Y3D(]Ci:=sb:nJq)G'*#dPZBYrY,ikp]_=YIrU[A]0_f+Y#/SL8_V+kbp5FNh9.3Pq&Zu#<'o78JfXtS"M
%m@u/R!o?LGWZm0HjM",T1ji_6A\C.fR(XTneO#Xna%m=DF&.)4YB:2C9*ddMpu?ph\Wi#`R`3^o5%@:Ln_E_5U[k^.XRdSH?qP<C
%4\dY3i0G'qh(&.09Z)9@qq4mFXRUh1=Pm*>T<h(9o#L@o2%aHP=9tA3erSO=`t`'Y8g5_?D=Z6kJBAO6-.%2Dq7YD&6.fpA3<5+]
%[P/n<1'fa02Dkt3>UPWd??nr&@pW'[O_cIEPL)/-mb3POLM/b9'uq&lAN!.Q'^2*icNd@;jW9dT:'4gG(&>Xl-GsY1H@(SScT3pp
%K5fc;"LY@X30A&VJ(tYF6^hFf>9d[?CW@.ACSb1,")sqH3N%8ro:u>(Qj*Mjs7a`^\^S:qRE9kqMkb^p=[W%l&BUn7q1lNsHfk=q
%d,eRA^C'9Zl>a+4g1+Tar'9M0Qm>*6X8Uq_SY8Q\3PM<<aRo+0MG9)h=KSi5"UHi4e_Ed=9g*$@L@Q4/8TtRRMgXET5IaDr_OXp,
%dG/]r,0eknT>4'k_sq'ESDpBQ<f'CN8WVbITDmni^DDsK\AKM&7_@-'K:QddXElVF54KOJ5[3j)h.Igp);`KKig8$b8ob'9J`kqG
%c+8b,g+;,<:QCn3G"uLmJ+Z[/b+0nK_s6!S+8ss/o3Q^4S(("G+=E(9N3VQD"+CONd\XEjSV7([OFPFAFmrs&P,_,>lgKPh7^S1`
%o8?H\kiJ(1?ttLRkB8gXFZXE8a5,UdA1u[8.>lt1cinV^<Lg#QYPd?(Pm<Qb<3VGugqW)M^"))"^YF</6#H_WA:KQKSFthbLi2GD
%8AOfPNp[mt?#F1Qp@#^-H=R85%4bq$&.Mr<Gl5Cjfq6RK6;UoHn4$4*%MA#(mBf@Web[%+'*2PE,r5Q#.U8>T+%/ZpKfLsB+UpQ:
%N-'$[8iR&f>,nQ-\qW'YiW3b*O!Q"%D9Q)sbkE=W.^^PtFF):*B<LU-%DH@aqI*EhH$QW<2A+bl<>C1eGc=,nbc[aAft^c[)2FBq
%*BF&J^B6?g9&g3N])gkaJ92ih,6-Z9XOYk.+\b8?^YH\VeZ+tRB/WU?CRrulN?<Ao<.4>=51,kLb[dha3IS6rPb;D%G14jequ2K]
%G73HuQcA)!&j`WKi$S5(eDJ8\<^k+?lMWCGC;.7ucHq>hoU*2lRV,>tp:^_:E1?R\C?>Uu;<?ek)0MubPV=k>\1hH)7*eZM/F1hA
%L8r!MMXfjfP8h`$gq:a_1/;R`9&b<*>CWu$@<$r;%+fUY-_B?^ZBrS)Fm!Pqa!,DL`NgppL(C,/(^EC$c5DD2gf2UV"o'9=j-UK/
%*[48rnrph)96$1S%ZWun1V/<-AmJ+"ZjCSLq(Y:Q\.iWtdG(sDdPtZYdg12sXj">cOT98Vp:%+@5Wk5s3A"j\Z>gMBio\Y*P2b#L
%K?LDklg=1V8G?X'V]3:Z]."o%GB=O_B.b6JkKqYF7eo1n/./Hq'"NC!Z*,fHOQQ+7SBrrsT.kr+eb4R<o<dE=0f4Dj7>>)hD0djI
%mS+n`_oD<6#SU#)QcHq`.ce3-OZX?L?7dj/k'7g@)"'gl=e^oQc>+c'WT@rQoWX"ZQ05O-Hl4aNMg^Qho%"i1jGgFG<uk;J>)uWd
%]pKtH,;WLTDj_eHl'&ndY(QB8dNI=Q=BO^0_^Z<o;;<(";>2M?,A>J+j$s`9hB#"g::=5(=Bhu@]2S@=`&:hM\jpBUTO.3A@Za80
%4MXGF/8oIT9>GbpTN1o`dgbS"C^LI.&$8@FjLUm`MO!p%H5+@iaih"#0ZpRJZS=d?<P3n!%u'q%VMp3f/1EGYh"S1C>&tP4qBuoO
%jp3hYW'd(Z-9[c/VVRKWFtW;HH6^Pb/fuj6Ul?8Q;f0&A[ubOarnss_DbH'SDDXQpOhG7WRZTm';am.in;#a,m%I0\on;CZq?R/M
%CL?X_QYiH9clnb/SAGqlfPCIcr`e3lo/Lo6=okIZeN=[,$BArJ^OGUJIQ.*Ia;XeKdV#^5'3p:a^_@E$*Jq;uPH+f7pZ%OrC`Do-
%<8B!RmR<u<k"*jPdf#R6W0_6"V\=W`IjJufGs*S2pk_7%Y7\2]7h*5tLG,X_WPegABHRP^<C!e23fL8u18?CGTEEd[m"gUHJ`mLF
%W7\?P%cN\<(YElG(JsNr9gZ1<3!$u&bc\@?X!/0UTN\D?VFTbLpUsIm@FXLDYuMbj0K/!96+d#=mL:&mUV2P7\&URg(maB<=;A,P
%3?Puf,"gkLd";#)=/;)p(=-RqqF-"MQ6j(&!c6D-%qEkncX,jSXsf_@iV?@JBK)tS#=M*^:H>6O)"c"9jpq6dR@q>`4E#,jBf0P6
%J_ao*c0<''P;\5nPt5-f@,fM?fPE%OD"VR4HiJ(g666H:ebO(@$2mL[\nsB$\.<`7@-a<pf*Kb>_=">=\+;o\r8l"0a'FQA&<DG[
%>PI]29q%:uZ2"G=-@gY)(%0gY;IB1oX\(rbPq]c+\Sl9.;7V?O20\A/.SIi=@J*30hi_Q)KN4JEgN4-i$#7bKXDd*5m7DN1oH,\p
%H2f%1h-gA*F7cfu&>k70OuB?f6":[QW=X27VqVj'81b9sEsb^eF#T3&2X'#R#A[*VeeZ,KGDL;u=Hle3#>iV0CJY.ZBLOKVgArmh
%qd9'd.BFbh6m(#R!_Y$aIR"`$\tk1cV(#VZXT2O]Ps.2o\kiq@5OVBRMrU"q_c;'O$ss$`_/-ZND?Q1]Um)^/fLu's<)D"':0%X4
%DbkjR=*u"8aT_un)!Us?UK,/M;ek.V<]IBA-4X[/Fn%m+i3@gb1];#A(:=RL5fQ[+$FS!S4G*-FeK%*)BedM,Th<rZV[UgF_n"o)
%"=GuPYpK11$Pj'c^[UE5rVl]UY/Mff+1dRtRs%#\&Yjl!+JX#8)#njsXR7IXqM6f0r=14?Pu5i>s!-O!#ji[QcF)8t]&Y)Y'83FQ
%9*d_?f3'Fqc8%1M3q:hJ^>_(Wl2;GJ1u;FM\E>bW\I*@MphO),&he_T-S3`iDU:u-_$CjU4u]E].'-6Ce\BE&KB*;40W9H7IJ1(`
%?/k\IP@/C;=p0XBY#dq#MYS.d,I+Yb+U=+NJ#C)6]U1uc4%e(s-cRKtAE9k`039*'4lW@^%)`mLBe,+5O_KIlP,L#[l-Le]a5fD>
%K)<8]ChRZ@(4GEQRI'#B7H(\g#Q\bg)"C(\)X-,s1>OWDlX=[hiHR]L9QP`N["Zlj]EMdT?o$O&<#@q).DG?)lau]EI9D4"?G_O%
%.\^ge4!2pbDjkFsVCaVF?gD,i'J$E]9raQc>rn6%;'*?AJCG%h_.0ZqLVJ:+^]_;'jA8/arB73eYt%6q9+QVDKUkBaQIu;<#-^s<
%q+K6ZjE$>aNq^L9%qDng7O-%5*13[X']@71?58VOjou!6eq]DuL_C!6k"`[.Xbn)KjW,D,*t$\ZKEM.O'KqBFnKS#p1Eo&IjOR0e
%0R:#QDUVJdmi^l$?Pcip[X-$$DrPD!L55Gu.$sa*L:`s/BCsBAbn-5iBD4:VST@\45\.abpY"^*lgK/&CD:ZONr-AQl]O?CV._+f
%B%rV!_Hpt9rl+1$Q7.>c)1>H,r"FBP7b4nMdE&Kdb;0^9L-YKQ9T6!?Bn,SY:>%I$-$0l8FdH^7^&W:]5Eq*p\'fAjYT.(EYu!R9
%P'9Kp*3`t3HfZosQ9!m>k1eVfb[-*9fqADdI&jjdCDBi:fmYfrMP;pE5R#[@nd4T8"$]VmdTbXQC3k'!o6u0gT0Tm!Lm-:!\Q[6W
%:M@Hq+@I?"Wpi=S1mD#@0:\I-lho4^KRn@6):\=bKcHdX=L%TU[jnpbmkd2"]q(U?_L&_kR1<--?&4*/&^r](#XLltoSk?I;VJQ%
%iOB-p=8/WdO:o1`3[`Tf5@'#YH'DTnO#X/D;5[f.lNc"IPcX[ICL@sn8&r#3[7;_VHd0\%essmVVEj'3eYUF>IpX3FCFRba-und$
%r<S@!NE.SP#a:>KBq+\r(]5)l88^9=Q[#'Z%p,4l5)DY6GIa<H9=7[W^7NPLFcQ5*1akk-`oTCq?/5)QdNiVFa!$if6#nG^,/!A[
%;;oa?&]AW`#+T(c'u@C)bg^%q\3O@r=f_<qb/toJOK97kM*>OFi3jOk^6kfhGnmLK20]n5hYe2Ummc#b2Q]f>c1:*>d=1X5J$TQ#
%Setm88sIM%q'nU$9F\9]:;8^lCB[N)LUKSL;Lrt`W5hnqe]Hrq-HZsq#4U6thVmp`bTWG#W@P'uWhLBQdu'YOK!r=%4"J-T+>`?Q
%HQ*NMq&n##baGOuMAEU:VY$fbhHL<j0B(m"/f`40%AJEgSEn67noE9;R2+oKoSu2.#fTa>pTUp/f&572A\HdX"F$U<gResSY6$'Y
%[Wt-uiMuB#]:CR),gLD(Y<Bl\T)@7kTL.$+-LR3&<G?R$f<k:2m4AYnJ@kK^Y,:t<3=q)+*k.cSn_ZGgWQ2,7YRG%%#4Jo^pt<<i
%P8%X#%*W]E<@:r"2mt9eWnk;8%hnlFm@eMk28V;uI0308b>.UMa)u`%O!.tP9P[M1r9N\TO:ajcEbE):)Lu"m!UD5Rr:`D<X`1Ug
%#J7OX!s)7/W!3sTP.cReSg!0_+J0r6MrG<Pe;qB4GCu*E.,6g'F9BUBJ%W+*dRX&Sc"ZX.2647T%l"K@9W#`:]'pA>s,aaO8@Hr=
%W]%JP@(AV6:/Hpn5ml=61Y>c_OG<9)=M+o7\8uriBCi!3^[tBQpiYJDT5OKI%J5(08\#K=N^J9@#"cir+UN6<,_(0b[K7YVJ5%@<
%D8GRUN&J'4Mh-8[$?KEIkLcl*B,H01]`9.Tk-dgp&/e5Cg1Fk@OFnB*Q)?MDQgQ.`_CD6rQT^(U@]FH^?Gi>00W]Ak[(Bm:_mOXY
%RXMJo%[DhG]Xg13DBWB0%51Jta7-g@<c3<p;oNtqEW).gRqT6(fCfNg+*6l6[[e-un`>,^VrL`KdZF@]L]!eAPtn_O`t?MlnPV:>
%q')qfK]P[E\4Ggb(qaUAJ2\!;_?"Mijn%7jk];$=OjU*]ejasHjr;UG8S1S-E)/-'c\Hj-/;jk]D-I1Xg3W_^^!9ZX9:]DT=[d9'
%IP)oPL"Vn0VMr(!Y/(Xlp$661408n4Q7#T>hA0J8:s^)ZQ>+(J#>38t*SrW4q.cf;G*%8"A5s(tDMe,YfTiE\KU1g#G)ODB'soHD
%hmORQAhRN:ii^t1*b[;TT@,^O1\5-6Zd%"lVESaZ0()hYY/8H/TmDEfQ)GbK8fK7(+>P]$]qN3o6<2SP(52<-RqX?`Kk8r;=Ffeq
%abR_&H/o'3Aph=FXLcQdfpj:PV_],hltt<80W"-MdH0jV?];?`D,(r31^)cXW!>7pU*GL#1f_EhD*F`M1siS2V3u)`hj1Z=(JC78
%ReL;OZY-gp=mC9LAGu1`H6+0%;CpOjfH(\'FFc,OiE$\l@F%BK[HpkCE^j!K[8Y>!%jgr#llrR>O23]=FVc>*IQP6a,Cg^4.,\H9
%M0j`"^c?%3BOs["O/A[k(2R_b=3E<9$P0tcRAQp1anWu_YHodTNk0,EW77I,)3<$Nkdee&aD3B6?CD+EjMq6t+AcA)T?F!3j"n=d
%$D;3PqPDUbo+!QFO)6%%]^KL*$SMg9[atQcXL$IRGj$QYlR6<&f(X-AOf9ojbA70Nd:KQ`9L,OP@M"MlUZ4ZBAgiMK>LrUegXC2d
%([j57Z6;HC\Kp@u1\[<[SQjmaq`pCSQa>Jlo@YtMelZZ3Gm%?P>B2dfJ-u0T#"L>\8g;4aGsG*h/m@_u<'HU!)FC7;HXusdE\ZH1
%F8>Xf\=,Qcj+j?EHDKiNj2SQ%)n%/$Ib.0Z262BG]1]AN7E_G%?4'0(4"tX'%Gcpfq\(HuH97!Ci&SDS\BYS#B:>6j:E5m8;U4TQ
%\IB=bn0BP/7KO<eOC40u!jU.=3D)A>k;b1K4hNF8NBA8/QfRoi7PRB>)C*Io3l!Z(ELN*N@b*4PZ:VD8\kZ7(`)Fkrn>3pErOI4f
%4#)gOYYL7].jHb/Bc,QM`+Ju0kI/l]LT5%pZ/c[T(Rgj*R.#<f%e)F?r,haJ<O]2c2TgatB&TlB1QqZ1idg2sqrA%\r2^%NdlD(/
%A>pnZIoMUjL!%GPYBG+&@-1H5GZ;I@>FqboZ"eksMc@PI-_Y<a@]rmG1dTaaM[/pV@QXoM8&hW_7R#U!_A%(l$6ehq=WVX\X"tTS
%^@)eq6`1uJAIGRt+Sj2%)8MgF]=)3O53^h^8MiM%m:0pr,lI4VH@0a\m/i7g&a,,r\A[2G>=dS6d+;H4UDf].e'2(/g['gH^8!ae
%DoemsX=h\87#-!'!bBfpLSjbPf'0X173)]SEq7=/3WY#/*13/EXn,=E7h"(WqH`MNk7kq#\]`OTSA#jLV?(%6SYe<aT8IE)5=ko/
%f<aML\ar[\_k>US,Fb=8G]LTL#nX/jrbr1&;tAp1Z:<TJ`U>m/f:MtornKiT@'>\rdBPohhH;D0Sb$ak8(pGOFQ*^4Cd%C;q!hk)
%T$&pSYYVc&+:;2GW2bYNIjYeBMdGpp\bk8q.HW4?>%/S>YP\]E**q10dX*1Xlk=K$.;>_8S/RUlmkZH67LuO$I!\0TA?Eql=$an;
%qSPos;`@S:h,77\:8oi_R0!+^UZ-VX:PIiaB!=rkG8en<mlU%2Bk,Sep/kBKpS`fMk%qclfQ(Lr>YRJZa4PImq5;Zkg^dqKbbbB$
%c>fBAcfl=b17!3#\nB/F:`55IU&6q+-=uhJ7a=l[?l2@Y7NA;G>hZ%YeM8q;1E&'$s'jf#(Lb0j#aM;eg#oF[*(<TA3Ak4fP+A.(
%!"(I&#@4V-an=ao%P\c#M78p1K68<>.GSZri%Nt3Ft+$`X<W%e@N5)3H'k@)iF/[pk'&=pOiQuG!\eoC1uu,l8tl18]q^0+W;@.^
%8^S^n_`9<XX+ssa'p,:_['W9AM?p\B+b._Z.mId\YW?<Hc_<Et,'PWl8GZBLnFWrJ$]00%b+aETb'+UhI=SZRoD8YSn.g6R:Fa>W
%<s=H$]>Nsp3VW?#BK[Lpc+V*ds-Vs=cE&U6dBRQ;[]PU-Xjp#B^0NV"g1O@!W<*W[OZcWAh^Y$)[`Lf9F\8_G/E%_J7P_-Pl$+MK
%4F2KL$":Z7#'=c.H%3b3"OPnsCc!s"8I[/ej4F.,`M:Uq_K%aJV5-PJHKB+@,o(s/K@RoiZ1VRhYp8o>DeecSC\@QnCX@,`8,MdD
%IsUn)GY;H1QcUmhr9.AMMM:IOk!k5m<D16p?Hd2$2*JUM"78gsYYI0HN^gR$"&!bWSUPE3l*<P,93T^2:0V&=*9R08AHj*2D,biq
%-,h^kHDEBFlC'NCg]LR+(/Dq/V4#MM9N-oe=Nm`T<@iDgbI'!e/jh0*(FNe8?s[Bo^!/,BRm>]P=a7g*4's)kLSt.Ila\h4U/$7M
%f5ZQfAPNL&0fPcNQT[fTPcM3gRBLIa7]]<E-RslRhALCGcI*Yo[*W7I$gJo*)F3uGZc"]3VBp][CFU$&AkGZ!lW]=6f,,0@<;*oS
%d\Dps&^b/&bf'CS=eubj/6rO6R6TsK9:6&M>l8&j8):6u-5eaq!0G&(GNPYL%63!_Xd/'S7uDG`-b;IN96o)5VREV7O4uXoKVG62
%'T`A%o7=r\c@0;lQYT@r4LX_MN\%ZQs3i\L26#@QYq>E\rZE[Q<q)uZe@/&Zp$4l`(N1@M#ptPE]6ler;m$_jP]jm!M^o=K!gQ^m
%"=CR;pMjE)C42:9e)'(IPK4'EjQ/TZg&Yo_f&b&QnYLp#EFu^W<%!SV4LUVlNls;l-J`/T<3/Bt9d*oh;X3C,nE1Bb86W,G9sr4+
%[mg(i;:Nb(#gn5`ogYLRT4./b"2C.=T^`sZmjh(CqOa#6Rf0Rp>5P[O>m(^fDf]^GRq9P()Wdq"Ph%aQlgZLIV_IEcgEn4BGSF2X
%eRPn59PNcXj$#32GIic[9EYl-8@cheWV:9[hOR.LBR;<+mEL5DF9D-MkNN-W-9`CP\ZggiR9.H"_$>DVXQ6i$)a?^;n3Hq#Esn"E
%R^FH1I^Lb1Bk=?ZB'WGQ%lt0dPXi>JcJp=Z3Lts4CJ,(_*c&d:f&BY^Ni2VS8&fpO%27DcrQ)W4Wro07JW2fXUOB#[RcTcYs/2:@
%prR^%ni(DmkE?h[WBH37hob;u@;bA9=T@5I]`+74cm3J%9m"4WrN49q@K7+KH#%!G?>US(BJhBqM#?B@/B+i1cQ)=Q'3MP>>d98"
%G\JZh&Fad7'pJh)3SR4FO.sC](dC_WPt=tD4567`Heja#l.mFA!(b<[KpK.Y]Z2p#BrD`#?i\7R*N<u-8Lf<(mUgGSB0T:NbZ*Sb
%`n4FV429nN<:("lp8cN3^!3]W1"RCL!Kc[oM%Ih"cWU!qgkE(he6(='j-*/%'^\m4IX@]Vj;8R;AVIKJ*JnaepIe`:*5k"'/>5X`
%V8CQjrUnW?r-ZgCnl%MDaah?H(GDeQ8:F40nYk,+C=^'6,;7m41]nZh<Ge<ra<3'-D3(G[5]?6b3pP5f[L(8!,Eh#k?id.Pe5R1K
%.MWXeSsetFDg?De%*h^f[Ih18oj:-WK&@!T2o$R=pVfUKQJnFH80EP#;8_p9CfZ"Sk2=JN'CP$nc2agoAHLT\m(dJJ[;E(]Kdqcr
%K4t_mTd<g\VT*LQ7sd_%[9`/L-mXKQ0eYWm-O&Xg\n"WE16T)k)]Nk+5pk0Lrg6cTMKh.Y6JjtVleam5*YaIlm=lNZ>cQ!-OF60/
%Wi>c&@:m(JA]H4]95N?D>6T@NaK.dpX0Kfr<ZFYE9F-jLQ.!V0\ZEKIk/"%+_&0fF3IXg,!@kl$FDeSTQpOX=/!V0ApstP?ZN#=+
%Fpi)r>"UJ2KI&EX@g),"l55ljT7J[LFUZ[*[e@:po,>tie@>=\AZ<V(&FXqh7c&tImF6baN@sH/-p,i3H[Dp()0t*d#RMGCB8t1P
%".rAA-?>,4VAoF1o&Hb'g-3VTI(ouQ3o0GO*D$Po)k*)TR,<qr?4a`aL/4RP+i%a,U*]:&,9oTA8TM+(q`<:SCIWM^hs`0(,I#%*
%HYEjK#;N9m`%bbFH!C6k90_UDrD`nAg-Q\`=Y:oMcVG&T"t9'TKjh!3L:GUl3[)Ao8C'hMmVAlu+8j<L(j4YQ2O5SbI$&0Mg+qd0
%9o=UO4H,-M)fYc+"pul5k\H;Yn]NM)I"1="<p=_7/Ut>A3Mdn_6fYu>3..!-2@"ruK+$lFo<IQf_6ocN^$abg48fsC##EEB.&SmX
%oKR)#'Fj[kq`s.FJXp#?E,gWORaGK]FQXU#3#s9Kb2%>9Fg0]:pPr5M453WFk24?X9f$;jnK7>RY$&f?SAHTAo?B+?K(+uU^BA[f
%BDLX&?YloQran@GJ4Ba@V^)Dkm?)76SlO4uX]al6j]?G;!Nd.?m6c%l;eZ2+h6e<:dngCcLE8Bd[fL)PrSf8l?D@f5'<oSq_Y]Ul
%F8?T-NdVqW$h`d^o_YlN?4MFG"37>/GEXr@Z%Q`'K"7BQ3-\$[pngKY%t@YJ&Q%W`2DaY*oqCD%\e"ciRenY32BR^]GZe6H@bp0G
%`AHal39L1F$pUoI?S-,@!OBYea]^26li(@PAK2dcrP^OA?>5&c4`pYuH+J?OZMH@+*#PS7>]CL9@6pQ!PJ\JNM?ptg23R');^Un^
%k/>m.T;-.ipScTPemr3/<M+Oo/LSqURd20:^6_&h".OQ6]GK>g=210RaYEFu[\>``AT`*RK;suM:k&+RT?DgB?kUVS7ilSGn<8T6
%]`ubXFX(Ir0C%J_f.GSNX<CYJk/;nEW;:iT5%Lsbf6NeZU)m4Wobfc,&$#ifJPHEXXidm#`i.$IHU\As(OQVC9l8Vt0\=nQ2At\e
%XaheK1T\&OQ*;;#5&9`Qh-,079Kuh.c77"iY36UM]<9m./\;?gp6`6J!ZP@i[nhC%[e=m:&VoF2Y<sQFljr+-H1$N*'dP]?b1X,I
%b?L7Y3VN3CAJUM&,U@mH:!o%Z8t"VSV,rMJ+#QOJHr[u]XB+jEXj,<M2VM-@I.D_rG'j$8="nE=Ubll@16KAp[N:[VcV4%I^15nJ
%D_hNrX7'5LK;H)/EuOf?GeX-V6i)c.R*RnuI@QH,:9XoDpRIa\la90g7em3k6dD/]T>K=5br*$>pWRd-2`g,0gBVe9jpdC=n)p='
%aa3s[Vl@2-Bb?X_'g_R[62VR_c4SBOTO]K':7)*E9poJVHY1j,&4!qe7sr6e4QDU!!D<M2!,tq]HB&DNQ;^\M!@V@JHh>C;0q^XE
%8>INC`?K7TG%Z&`SsCg5/9:l0%]26^BU:??"04YB[U0li#[N7jEqouqhiNQ7,6SiR9fOo^il3+c(T[#Sj*"-d&-09Go:5gn@S&PJ
%!$AVUDS:R]Zu[a(B!,r=ppRb,Br%<O]\6Q8c/7V7-9*.1[lohr-YCKJ]1p<P6UYHM))YMI/Kj<+<E%_2q#>]kj2RI.hEgT!f"t6S
%)8KB4LFtMK-_m^)=TATKc71p..KnmV<j`/XDqQan4\WNl"B2j(K[*pSYO5BUEn%%hF<]GU.1/XiNG`CJL`#P0Zj:hE'$b2FatHhF
%3D)cL]?.,ADlV!K6F#\(!GW_"7'tZ>J9OJ38F'XiX1F,-53lOu]QZ-c?!K7-2,QqgTHjnR$X8ps)cN$.a^JFPgdcK"(q'g6a`M1c
%`1iui,PaNZO1Eub9H(u>Nk?Nm4K1%Ia\gIXbGPP%,-mt.9<O-a1aapE;sejs(Xnb0/e4,-Q6%;B*rD'm+t^+'j'<+:12Q)A7ed_t
%S+ClOCLIlc"6tAA#?=6\*[OIVgr,U<QHOWB#pN"WJ@oa?Skg'3TIIT\&Ws,/kH+$D&<2iKAdA+5JBp1Z_Kp`Lh.Q(^U,H:^RMc;O
%-=EOsmM-*McU[9&&g*+DAD3iJP%O0%C#bbnFo1u&s69#KUu6_oT>C-\$=.DjM>X:IgZO(bm@cZ;cikO(&7a:&!BuQl1lVeH`?')\
%/ofe$_>kpu3tGSFdppDoqa4t68UVil%d@8#QJnpP/S>T'$Hl=1j^`TW$H+4g9!U*)c^.,#8$&@bLIrJdnM14:F3I+u.RrVq,b775
%mDIL)_DT5?3>5rd`+RRdbiolim]>2W'd(m`Cep4DKmLRNd7,(s$UVhaqIFDq@F1XuPX>t(j-dG*Y2u;aaoe>oi,'GcGB,W]@P,t]
%<gCAV<(+`-c]qP3)EE)*c>J@3`g"%dX*(BcOk,?&JfU+tKTG_$A'[toaOeR53_`tpG*u:3=1!iAp$8M+laN2%hb'q.*JXBFQEDET
%G_M70kB)#8X`(BJ+Uoh!^E@<38Mor+D68/@79WX-q$ILlj/:@W'j2?(`_l8Hl;,nQ)5n<2^)?`+YhE`-2bF:EDJ`10ZP9#r#<;qg
%X*\GIY"./pZ6&`Q*,0/G*_0t4!d!fFhP)C[jdC]cD.F[I/MX?TB%q+&gI-LD/Y\(`8Nr4lN!eb^iBSS;Q[i^ck(#u)ZKhquQh'r=
%eJ0FaT(*eDoau$R7WkmqCNGtD"2Ii'L6=JUQQ.sg'YAkj?4@1dht1]@EEWVoT8o1Xh_eji=%/0F-Zj30"]Ii*5-C]%[[B_gF0(df
%r*Jnrc)@h^85":Ye1/-)U28S:1rR3^D2-##ODIQU#4C.;W^C%tgj.2_qiRnR8<:[0=8*X15>?XuG9PX$>8eX@?^Pf2D,+V*\!URp
%.-Z#?mm=R:ofe]$k0PKHD2P3)4&uEeZd3_-h3(:T1;c#tX6lbL0N!YQmSABc0I)>BUJd>t!F?gPZ]QQm[d,C"c,@*RNCf7cbp*W\
%1AtDfn1fU!;BbF1Bt(\l!5eh-J>_WmL#lke/WS8-l4#_![*Mj#e=(t;1uk5aA6U5E1IEm1%QaXoI5Q:_&g:>_6#Q0=`$U(Lh]74h
%cH9M$esQgtTf)DhiW.gV,)!6?qCO"\/"g&b5dd^"g!?FR<+TbG3oc/[eepKfPN']N7$Hs/Xs&dsbB^4LCnbfU\MM$B"h$cNcsZ4M
%U2;h5h6#/VH>[ZPR#HXSS!;EIG:=a_bOt;lVToVc-I<2Vq5/`?XO!iaVKP&]CCC=-_b*dGW=[Kr4f5M831DrV[ZZWj4F5RAEj9&T
%5GQs'\ec?4W[TJ@<qJ,<7Ytc,SBTaBqtW+!^)Zu-<Pd4+.nXKVc2p2\QjbgLkaSHnTkLGe0GH_e3Q]Rm;306VnS73?.<CQ!J^ZOK
%\r>K"olGtk=74+c(.qXb<lgt$UC-t`QtJ&m/%2DAk\L-&@#M'!:YbB*Ou>RQN]I3_0rsBP'B?T3c6LUA&o-rAkWfUC^>#9$d"n;9
%eOT77_!4Q%RUS@lq;u`#T+W1Fk+:^S^g>O::b)3CBif>`pWrd9bPD&^15dhYg%A#Dpd^aQT0:HXEXo_s)sC.97f]idaQ<2a*9^tX
%i7m0)/UPl,a)>BZ"[TtuRQ-$A3j"),WkmG`8ldb[_WD*2]TJa_S]`d&[Een8Dc'gI_;np5ZTq?1&aT3rI1\9P8?Xj(?C-F&H>U>&
%D+!GTX\85tg\WXXB&&_dYK1OJ\9Sm]<Nn6WU7>'\<ZEOWOE+9&KcW#72O$O.,k7fr#uu1GfM15d9)"&_S7$N$8l]d_oUPhtn*._?
%rVYKpC:WFhX_GEF.!()$di@4%])WI=*O.R.XMkIpfUM)8R:7L`+ur_8m&A(f)RA:`3H(U>O#r+7;C62+?AerW2(\OAEFJ#`0\P,&
%0j/6m?qmVR=gYI.:_dSMOim'/jNaO*?:H/aY:LYOMW/&.,]6l]6B..ZDpfc7.P*IkQa`F2`#8j6Zdj^KpX-1m4Dk)GX%L'+,kjlC
%0WLmKi_skf$ruq[pCI8@48SS\?;f]RJO"d"Z"nGEI&YS>;&!u(%Z:uCd(lG@[a2JW4-p_0@R^_jrQ@`q)(c-m!RmV#%?`V:aAg5`
%fOp(t!^\>6p5<`0%),6^F_%,46_2fArRNK5>UCZ1=C%/?U[,aD1:=rVcJpsRK,mhJ>52%Gm:9tb#CV/AnDQ),00;@p`#BYO0Q>NH
%9=`A>I9T?-kFsZ?B6nc_<m(Z?co),TD%Cs['kSIuT>[9ec4^g2<Gi[_Sb/nMliM/QO=Wu\A+^Asr+nT#]!H77M+b>2\psTE<&-nB
%0oIQ]JEYa2c'_jGRc[p!Lpt&W(fE(uAiGug8"G9`;D"iL)0VV0>qaNsI!]m%l%L+_769[thtbL?]78t"of\0S`OOYp\a_l9CCX':
%/6YjKkUTH+9_H&E9p*3gU"X>O9hWegI(:"bioJ%A#iK/Q7u0C5:4EUX;cq,34]p`LI%_FiScLT"?"W+MdYQ^<^j;t+,WC%BLf^c&
%oX7etjBCl34<1cK60q,4:^Q,bPP6<0g:>Ium?O:-b1+G]C:`;ZBA'!67n4_P2I%)A`TprjB3-!j?Ef;E8$j[9f.c^eo[U0,j*)qp
%]@B*[SH=ftU`''"Z)lbs"8oU!O`n?KT3d_&V!QQ0G5(jdrn&F#^$i*P$J93RkA8ZD<]=(XKV]1JmmXjR#7irTISCVgG><EKJ)r#k
%kS!5POX\Kd:K:UX)@[s!bT:;`l?6\=E\K&K%8#2lod#@NCNRCE1Xm/"B/%NCQ7QVghO(_q]i`2=oKDhW)1f]o8aO@8AR:!lFpC_%
%-4@0"*iNC^SY.ujeI-F0_r?B%#YqU1qh/eTi`-TB>I:CoDh?2N2[Bh[?[<HXnjSW%RBsR&G0Z?p<6.ha`hMV'KUQH?iQC6;Kh$p;
%TF35n4JJ"m&rs13S-XC%NBS=cT:]tBFX%%)4SGBB',G\rdeR!*N`95q9d;s]#qa3#kjHT2942tp8pNMh:&n6(\!g(hHr)8n?%WM;
%4i?9MFfB";bqqfOZ"F?(3t_)HbP+cGkD.Pi`j@]ZX340f,]%g&J$sGsZ7Q>nT-f>tgO(QOBYbQ&clFL%O&6fU-d<dFPG-39O6B-O
%Y:-G*#AE0q)'S9KXs0fBBsZ)4I,H0m*?AY845P,8-kq4Veus5=L11dqm)nSCLNonfDWe>)C^S4u]5+l$=YG7q#eB9M@@,["jEll2
%EWW[pb7q;W3Yj;T?#O6q979%%9SP:0Au\q!#*6bt_MPnb4(Qe5ck%(<NS4!?1`9^S?:ls.D/ki2/fC.CNfdY4^NRl*-rW:.e<o+m
%TnJOmR1*Y5YD!r^#jnK5CLWOiTgA3Nj^dXH?LF5iB:V_Y"d@/o>jD=d9)Q0+b4Vj#ieq2,A%j)+;0uH2k.PRNjUZ^TmRr@;X+QG2
%k'NI*_j:MjT[1s%.c-#XQ$3Ff`EogCrAQZ20c3[@+BqkoklF(lFi$p)_idMk*GDs5'`'to\2C^-.q5kAjJ[O?g`LlEY^N-*2Ot=e
%?8EAWj`Si*#r_E4'I<(VGP-BUL4OO=[2qNuli`FL+`+N'Fu_V1:bI:egMYn);fh&j(MlZ*DV5`m);[]nfY0J'E8[KnFdq0k[H5G+
%Ic=4SOWs4W9f"&G;icN"]^bo0%`sA_%J=(AYh*`PEM#'@`]B;*ng]MVd#hj.R/3gG?m^2\o-di@%hnG54d5.GWN"A7qQWQubc0VS
%>R`scAM&:G\U#IhJ,7VWTD6\Y7/Nn*7gY,f%\"UZWDFdV8>njdWG<)?ar->bCWbba(^o,n9i$%4,<),N:Y!XY>Ob`Ahs@%?]Zk'u
%V4ps*>jt>-`)855Fm19!!HTr:<V6c=EN3]c8q,HNE=g:3o*@;6;F_`)O`0mt\7qqZBf=LeV1F<_9J.jk!(-+p>A8q#S3kQ=jP*&C
%`oq%>Led5X<*IdA#[K07kPP!o;CKpKI&_:kD1JAfgLR0F.)r398XJd3?ZN2&hb_u_%BtT^neL`>HHPQ:9It[;=?#O\3TT`_.$NDu
%-Z,YVFoQV$2f2CU\=qc<1Pa7SGe9:uYHDrW1S_g6%AmggLPHBs6bZO<c;a2l_CjsNcC@Vgd/AZ4hF'Z!&YJ+i8UsSt5'p#iXGf)q
%N]O-mbMS71YQZFN,rC\-H%$f-T3LuW[-YiO;+m:F&.iT5N$#0_lJnT;CshIOB"DY/s0NSr7'TJAT.#t-Ck;uhE[eP?2.IJ#\141C
%=55-pa?_5VlAqI3%^MZk,1#QF8`"F9oC/'%g>R#+ZiAGeTid`TmVF1;P]@^&W3aN\H22oM]m.r0j_5-X!`3p#s4(V!Y*dpZoJ].U
%J/].2GeRm50VkE&@qAX\C^BR?k=$'I:eHd51on/_T2HAR8Kp1S#q,^T?A;IIp^WX"n+QbBCV&j[Q*MY2,ZM\Z23["=X8Au,A%$46
%jpdO\04T^,D=2/e,Y-MYcH^f74]b]N8=$I`bd30K[I+@IfAn!+.jCr>Al!Qk:(tF52Ac"r^hmUPOjLO<7iSju,k01/VMpQ':S9d&
%LXjFdmFMSN-M>[DQhrKXESa,eAQ?G7`E+qJ3!7;<0dsRImKS05N]l9:J\ok_oQ02kilVR,[dpQl!"4/_O"Fdm[^<bE\tu,94_eej
%S?hG1bUGJn4_Df8_?cWb5ddm>0j3Ns<Csgbl$$,._Xj;rDY5h#4$I\aa+t8K4XiHQ^RIXDiZ#8>EZrN[D!Boed>$L)1M`W4`;=A#
%Yn#>bM<fR]r#s`c-59b'8+c\)keOShLu0c9V3]M3hII>ggpM#i%Ha,MUK_^SGra0D(@bBqM\4Np\tap&$<lOD+TcE_OW+dVc-;P$
%bofNc(iY4\l,]19H<VmUN'g^IGBGZ[kEsXnMCtA_ZYZ)UPc6*L5m]BON]c04$Ku[I^0'ifA6K<P%n(40B.p:6a-BfLdm^OeZn5G!
%VAD-8c><oAQ`T(,H0^5a0G)2f*mu'FRC)"0=!YWcopdu$hD<8rWq'Z;Kc[9pD!p-.^a]9:/L:1R/#3NY`a"mH0<aP^7;qBJXl84u
%W?+f`2L&QNF)5?,-ioADZ@>@S)2e,E*]`oX4Q4oP8:,S5?1-,*KYud\*6=aAdji43CYXRkrOH/:ULTR#0P@#ADB\0a@raV)e+=7(
%SGtgU4kWEbjk:4'RnMN$Qm.1G*CcWa58G$+TE&tD-/&OaN/?;YbPU3:5P:`M1djI>?=T2X^.ffC<bU()XK>;t!#m3$g)_jrC_JTt
%Gp"Pk>2k_n^riG9(uMuA^l1V="&juY[5<=fIk,R_&qGq975X(_'=%^pOeLX5/3@c$f57#CNIk>;FJ]og+%1Vp/o!qIRYl`\&V,pe
%(nsR>gB^XfiF_9kNXV(=FJm=:Ee_riIbM\A]F"=/k(=g,B27B"[<G$/]oAb58GA(t?B,@P+H-S4*>B4g5ONOuU[@BJq=#0kb*Aan
%bo'^[QjtBqo9*n]_'a!Sm3@Fi:QoK?4;Qn4Df[C:hH=#K4OQlOa";hj[2R)C)>eWiU]^66g\F<ndgfBq)kmf#c"Ta6KnH\2,R-:\
%8oqBNaK&_sgT!PV9ct,mEelU;M.16X;D'oS`&2&],3h6-#.9kIBJXQ(m'1te;-!3t=qhVDN+)YZh#-O]C]5;:>8qbVJ[`umju^&O
%=q[V!Fr<eaY"5eb.OiXZqK'?C53gJt>"L>j.[31#;.^1JE/sp,gTj4E(Bk?E[<C+sk&7FB:9Y`KOi!o*AmeV>A&@>:#C<Md=`.mS
%gf]u;-f=(=CA*E3jX\YTbHt>/>ap.^2&"Kn=XWTSV?)p-iB(8GJn(2b#Or?aFi^te,]#Bj<gZrHn;)/pT\mH/9gPn+X_1Ml12WM<
%3mYG6knUqiX!:=F5P]/s*`Ejo%'X8X'$LWRik?%EEWbTnkm5S@a?oDtWK-0aW3#h/>20k:d>H]D_Tltbo;t'*3P;KR2RdMR^#ka;
%Cqog5Een0<fUUcD<:cm0rf^;mk"<Aa:mGoEea*@*o_hrLE@r5LkJ2NGOG&jGo&/ACetV'p^T)PXj)ah$?^h"9]94rq?otZMZg)Or
%V^%Nhc*$IC2IWq<QK.[XNGRT2ShhlQN(jWc,;^mG(,nYAq9+O#_$,S+@ua-QoZh2\q;/JQV4b0!>E4W?SZL'i&d5*'05f@j%"M^-
%GV\0;1k;[OC\VtBfe$N5hm-C1!.s"WrTW$HF'1_GdWr@S;&hOfG*^6(#MW\PiQTbR=Y8AcK]<&82bmmJEk&8Dcfu'&X3Co";EW@^
%(26?uXXbm43N2K=b!*PqT=8VI5(ite6u)>TB?H8SYsIfL/M=eX'unlh)`A:Y-DO&5gp:'e0\W*^=PDL2QUe<@Bj0850+Uu@k0uSa
%,XV*\1'N9)^W(QKCWW4O[^A_3RqK="VGXoqqOf:I\n-!4T,s.Zg,XSo/W#^c76BsRD9lTRYh_$Q?2`6)qtcr>B!mm16Y&_g%,r\h
%O\P>1VoCQ++\)7N`-/,D,h\9fAY%V5f8Mb!+L,\&JJmQ;)3ml&4Ks1@Dt2M/S`fcpo/tm]`&+L+a=Xn9-qU*&I<;olA?<Ou\*H$\
%O%0RpM6<m&;)(,c6M&`0'6VPE:VISCP2/u7Md+RbhR:+d,-9m;OfF@GRKEl[?bJj&BkPIOamZ6EE+B1KW*G.X\dL2:*-_C&+*hcp
%:2qSsZBIf9f;\H6nqoWDc1cR#Y;*e(ET#QCoC/\?^2aRl9>a*S%=9EU78PX6Xg`RoD>rBt^A=GG+VMm]<FY:eg_3Ys^$Vqf;c;!i
%^O0;o3QccQV44qn4-%@-D3[A(O)u^ei6K]m5u"g`I<+"59J>Ho*#.Qs@pbC`3%,X<Edf!NEc0D<rTqANF581(TDq=a`TaOWhMV-!
%Vf\:`Z144]qY]Sfmbu@dn>Up5r6)hQderpdc`SYG.ssO4G":WV1cJ&bO#bX4=_8eH;ATAE@F*(IB!'13iIl(IZq)UPD$^WMiS/Jn
%%l&].gmn0WilmHM$\guk.$TfX"d<UajXR7!5e"30D(qm\,2;HfUmtY//%35hEomb%\DDOoOWCdr7:7]O:o")XT\)Vk3r/*\[;X#e
%K:o"j>eIXuXqtt@V'?Fi&QUA$E"CFj9YRY93V@3+'5's![V#=an<<s7c"J[&9Fe;W?Z+t9O5feGP7BA,DI4n/]LKRdbUG0R#tRbT
%':2,6G#g(p$%QU*a_9=bnm4W_`qT&>_DdFu0jpQ$cB4q-7\?JrT@B8*'=Oa18\JNfo>DM@%0\EhkN@(mVO+)b.4F$IcISE0BVYiU
%<*)VLp/]([Q;983d7VpLV1eQRoKV]*?e9b*'00WIY&r1M1^Sd,04S2$;Fd@Z\+ZJ%j+H8M36*:jhhmC))EeD^T_]04&h\"0918s.
%XUi%rCs-3$nj^'f%LjB`X5e%Q0PM)km$,T/).+2?!hU&hDO.9Z-jJ8\.Pt_:E`Em[qR3M%$5U?ue@!+=@Bq__WQU"s2Q0U%/J'r>
%*bnlV)f+^T;L)^T`h@0Qj9QNVDs_K3D(Dj$PYg=jXtBaV<<WYOf"Y`I/q^)e(rV]KLG-'<_5,aua.3IVW1X%>9(>2)X4<*_D>/TX
%ZaYkA`/dGd^6Y]XiEL*(=F(*W,#=*BQY)d"+8?"i!n'0R9&<9@T0Aeq@1:"`-impDcV9#?e`uW^=c`?2]bk5R\<>Zaq1kiKR/@T$
%3BF&r7e)stfo%k0f(0W"r3@,GJhmO<g7u9eY#Q?G_Mt`u6`!HeD<S68KKm><nr0dpdZsWRgUtNVlSEHPC&++tHN_P^#>,W.QSFMp
%3hQ_[O:(K8@/XJ.CQj)CD)ME3!-K4RaV9NW9j`g;4l\\'WU1l%5\MjQ@F16,]jNLb2^lB3)0CA:>oNM*NFl>/]K8T7'QG5#$*Ya*
%.pmkIs86s(@B>?,/t%p:IoH`+;Dtf78P2oK#[:/@m!B2#W_=;[aD6ip0uJg:N3%:4oGO=bZ0ls9pLe5GR>,_pke\W&FGNB=:Csi6
%6'+^4OC@$(I#.Fpp15k6fo<s#?V*rdI8(&t=qE_N]!@;nXMu0]l4UeZP+g\PoplA;:-rGaa&ZP?Ys[4_K%Xs:Wch7)K.bu@)`<k5
%C%BS":3'VaDbD'[9Y^pKQ/ObmH8MI0+<GS0G1c/&lMdk^#PP*eA$ei[C%5mIrR'>D\gjHODoZoIZgG@Aafd=^#urPD.3DD,SAQ91
%N:YnW4WeC#p.Q;H_V4:f&L,<cI'5.)XFc%`7BrCEc'l*Cf=n8!1M>?/%TZ#II>4mnC5MTqr*Z8O'<*phfsW1Nc?."f%/]*T!`-Sc
%j<a!r1!<G,]H:5T0D!mc\&Hier/f;&a#opr;O"H&M5bAQ_^r7NRqs/`*r61\0p@W1:,i2&_M$4*fB:qU:&:NQhMseu61JbmFpJO'
%RVsb#-(CrjHBL.7osqPX$N/BJemEcB@7S)IYT1j0T5C:5AZEf2!<^_'*S^NPT$?Wt8YW&O(S;tKN5aU8)e`rKKXom=O0ctSEo.[)
%d`MnC@Suo8mF)q.F:2F'$*P8o>b>_h]fM\qG*LkYo4i`#K>52RS?9ekR"qEem[I75n\o1B?*q)4>6tm8F^f0$\>1Ks7[O=3`ULQ,
%lDW_Q%PobY&Mhs*%?S;L'j8;Mo@S(Y-9;C!TN=KZ-erCq&M%[Y<7.%='GQukeW0[Ce:1nQ4i&l"jU)>C.QB2'Di6H#)$YY?'CG54
%>\g=$DUR:=[K.pJ'Yu[7*X&dj&JJZ82$O4EJA'/>#Y&623jEII6.(6!=ES80p9([.QiuUWkHg6=/*Ym>dDKOsM0YaY1)\c.6RHn(
%`Ep@SNjfKPI2;3dHnIV6@\WWAKDiHI8m;KrH7<5&q,o?U4LWJ`Gmn;*hP%IT1NeXdY;&*>M!@3qgZtU1YkUC7dV.;,d]dT9Y[&=.
%ZQ`h%2A#GsO(J]Oeb6Q)Qn@X[[YJR]d*"c_>M.P/TE/,bI#B:pfd(hhUhAT-CuG&An4.T[D&X5$XSZ%o4DH-&,)`SrP3Vk]m&.uc
%!AP(Q\9MaW#fG<:(BldN/Itb[c<5e%bJW7u9%>qeAJX$SIKEI[TaZ>rPE\:9RLe>ooDABR!meq3/g:._;?f?L2g_=<lUN@OY4t)k
%jeQ1PRePO#H2FmB4tD,sqX.8]=<a8RC7ea@KU-%chBmB,K/5bl(QK6n)mS4]5nSBl1l'bQM;Pt[4ntN$[c_VmCIXM!Q\qf\(Yk,i
%<'QVCf&F]<ra*:9Xd]$daf'P<r/`/,j=7j5:EJB]^*^?4MiX3[4=4^Y8+WNY;Aqsp*L+YEe-eFc:U3uu/Qt!sWk3VFrBamBc>0Q-
%1Y&Js"F6_C1o-JE$FF=R)3cEd$loV^gERFRh+)O([7+1so6k`QE5%'u`)g,1Y%Pj?E`:/G4:B]V;SU#ahR>6V@BTASFdIZ=RDSJj
%g*KnGa633ODi,IE#R'8V!.XqAg`1luo>Mm.)>,&bQr],`2gp0!+@4,pp:A"fA_LdX1YV7%onY5&7f3=br0.cA6$YU@4Qp6^l(^_m
%CK73Wg$:FYR.I"EeZdXr?*>F5.I,0+U1Dt&iL%;@VXDH,K<tK+A[K$K70V;sB0lqOlRCsPC+mb2X?8^1^#+97&e9/$&?D&Qqe1u5
%_DV9-o4UI6Q0FIJr-!A2/8/3R@.#P8g'u)#8[W6^hP\NKjBZjpm#lY]8%&%k5"g!`XX&VX;+hQBn#(Uk:Xp!0C0E4@&BL5:K$_0!
%'W"e(m/_79h3i%1-b9tS0s+A],TjR]3&&+S'=o\-+YtDTA2i]Jpum2('nLVU63)1121^fhDR/#550A7;4W%>?YN/K;AjT_Sq,dF0
%"a4\.>_Q[CV<hX_Xj!anZKf?C8Z+Y'eBiQ3Uc6eq5Wi1L3Nq..+07Y#"uQOp@SV%P^%2qJp_qQBg4C0hh2\6G'*(pQ.orRn7le5_
%[+F?[2a?u(FW)=CZHGN.iSjb'97eT=6;r:'euiJCq:Y&nKVW4<[tE4GPA+U3+Ts]_r'f>@+b!Q?0s+@ldMUC$lO5H;Td+$&H(Y04
%jP@'`n-')n/b7J,/_`n<Ach4PIPgr$A".Sn&-LsZ;(9WR#b*VA+#_O+SmGWdJC)-ROG`rQZou0h\Vk-1J#*J\,>C4p4H`O+IXHCT
%rK<u/OS`suBso+US%VTC+3NDjOH(%H`"'Ctns[i:l2;g.aRbj"BKkRU=\?F3F4A`A"`X%3b@H8i$8E?6C'Qo,.E(2CIPgr$<#ald
%p<6LDY"5TtS@WCj'Cn9UGjMZt7A7>fVDu=uAL&WF\lP(ieRZibh.!:_DnY:kqY9u;pJ!eeT<8c_$\*PAraqjt9lbYiGCiU9$hk1`
%U6`+[OE6lDj;O1PgS57JQ9O9:13^Dpki$rr.X%*:TbD.0Q!>"LKhj,u3lR:H1&IZSh5D&bD[rt/%$K5-"X,?Zof!,R\>T5bg$;S;
%<p21j/c/T2g1EM(!$pcc:lm&6>5$XeqsE!Wb]u3l\,qmZ4u[h\GS\+:qLbh<,HRqpTs3Ec=QRr+9^fp\=j!A;EYNl2U,t96+&>2Z
%nV.`sWi.!ZQ-$[`#m7o;BBVamH;,K_I\`3.-J`;5IO:b"`Ihe'*niqSad]X!P4$.eoQT*jdcZ59V_fAHD\kQ&/<\`+Waq;NZB#Ob
%[pRT?S?rVhgT%CFd2^Ec3=-F=+Qe&#-06fP`)9^TAp=-q3m6Sbi9?e:k)(fA'fF2e[2T]F2*)QG%b6t4[2?oi@&0p^^,F=0UY08e
%OMJ06oc6VN)7`qF(B@T/QWWpLpbC?[.TZAp[Ihdj;aN:SQ$L<?+*"R2%;*hMQZ?C-cju3+G@/ijiMU7HZsjUGBFPPUWt)kh5^n/-
%)d<[59Kk&:'@q</]1l'[ai12_+4Cs%7J^'I[/2;%>4t\^76&r"(5m5YMY.jqTBf^Cs,#E)"h$&&#j+S48r@_6Mu9Gq/j6Y<<lprM
%:d2;3.N&+XoKBog#sBgi/BTYmgPZJO1EEc`Z.ttDhf$7Wn;P[+&b>eYF)u$Cc>$[fO4HJ\B+YbrrjrP/V1*?+.im&<b1,JmGpBbR
%Nd=P:C8,[bNn>Y!UMQR.gc6"F%nRDIV,LsKH;>X-\^QC<^ar1!)RXN5]j]84pSOP@)W#FRm1803n_@o+iSVeJTf*pcTR+bmIE@V"
%PT9TKO7,#7e:3p@fqf%^9+&#kUSe9B%p5)=FZpP;Y,i+@7PCO-=]_'ID4"LH@<:KX3C;9q??p\Qe6L1#Plc*Bj])bdh%U1)NrJ,?
%+QX.W)@Oht:mM]BaQH&9?oV0;T>@B^5mko`iR23CqEZSPY@+Pd6CdsYldPkNAFLpankmk0Ta&i:@i7G-kIn*#$.-,YT1nOW#,fu'
%cq;>5s"C>t(8o&aT1HpZ9C2b&^d6JYf4h?mdIC8$P"9QqhCtQt$(?6%*SC++luf:<^eT..R-uc3B:Q5-57!'9+(ma1_Q!([c\b%/
%ebfJ@D*@(OD<Y4)B<)fq2'o,\C7P0;o4b"@P7I&<dMlbhUS=2:X-^fuo.'Yklmk&c]BV0.E77eb_t@u!ANDWU.M3fQ>9U5$1Qm2c
%.gT/7'`b&"BNL#D%=mN-U1'MdjF*=VHDV&3Kn9Mrb%gY(!3Zt1lnqC+/&8!*^u\a76JSPNi@n#O7e)*VJ6[u-s2-Mfs2u"9=jf.;
%&&THS6#AZ^Z8Lo1>7?i#Jm+*E=m=[O-D3h'3/DIPnkAA66TLC8@,Xu`'OA%#nr`7:'iLlnL'Bl&71b<.+YGPt9UN\_m9sm$369__
%*9Fg$QbEd)0%qe5GT"Y[7)dYU-\'&!=O4Z2W%=MAU=K\*W9B-cR"?Y8)#i24kDMSmEaMSd>FU:FlCmNKB*cA1fc3Ia-Nt-p0FT=.
%5!"dX6XlNS:*Qh7Tbp+A.HP:t<lu&S0.^!LM8Qpi6@5eme+Q+:@he\C]]X8&6;rn#H[Dg^?i;Vrcc95A;";Z^9Q6;L]1m's92mRA
%q:Q/FPdVaUEh@TH]bM".-3n8.@NS,8L]17Z=;9.\/GO;WfL^?;Ngsj.hZ-It/qQl6a=mt_?7L24P';,?"&he\hrn9I`M0EEZIiq2
%qd$rD@K!pZ&pQ2SGIC+3WMCuC"Y=D\H)RNl-G:fHS1_lgq$)A)\iMDU\Y7UG^_k\okIX'%CYk(/i^48Kb6o"@ltPrcmf4ZI?-iJn
%q=-VC2S"mS1^7[6MfYb(%'>]'hjQd)<[)pR%fWD\<[>mTQ[Pu/1O+?j0kYW^>_#au+_.YjLQn"DliQ_$<Vi7/o="4B9Bfd1MJ?//
%>T[^"f!)`#lU0n;95X6&MU[f-&W0<P)*A)rG2S$</-O=Q$frK!i%4>g$FRh5F,TI/#-m57*[_@6P"4NnoZ@;-q^?H=8"\e>;$&rM
%$k!,/T$fSB)S@YU#YZKI$e\DHi,u=MZ%C;p;BT&So(1rl2:7pW1I`Q8(JCmeQ'EW]K%=0nN$Vd=Yf7=$GUKsIot`@qJ'O4:QY^8E
%3WQ]E@U)_o)7AcZ2ZuRUaH&nTTsfSV84HDm=;J($^jfakEaMN8c*AT+M/*l4-XC+a"$7lU.H'N:@2a`!1*bCm=<oE]P>F])VnH!+
%i.L-u)tTuq`JfL\:QiL*^8H!Y;B4_Z5[u83'+_Rr0c6dbCd%q/$.C@1QQ`Ja'h_m4\rIZp_)*N''s8W!2psD>qt5[MM>!YeLP4d!
%hPTt`[fjd[[4<DEG`L\:m0CE(\c4"!%&a]p)&\KlRYWRD=j!0JTFq96]o_s8*`?K_9G9pM[?k]f$ard,#:PQf#KXB36H$5OPDQ1"
%B>2L.#SV*Dml/gi\4/2qbF]=?cFeO]+7;eCJ(CU;:4I3cLa;(^fCKe`Ct@&A]+5K5$lf>ki$d7=pcnkO<P;REX1P4RJ"Qc9MP+n=
%LnUc"jab=g9V^#Y\foZWQ!+eY+/(XNMgJ"+#_C)m&SIIid"=HSCQ=d7EB.biKuoK#q)n!-f'(!dUr=ktN(hhcn$Em4rB&4"jm_SI
%'1/I'QMOI*htVGgjQYH_@EfiV8Jd.gN`b^Oa5_+!T29-@pWp:`-,@Q[32#PuW0&t[,nN[@JSU.,)Peg-!]P:D?6*['l]5hGXHCG*
%<<d2ap2MDcO/4XJ.ZA=A:Hg]n[R>0Nc5:o']9IgY$\phRX1h>\NZRIkO<JJUiYQt]>HnP3KgPC.ja.a3,SY_-BD]lE`PN1KQ<#tP
%L;>$d!EZ)f+\tGo3KD1C5G#LG2oionnb'a\mnM%/>Lt+gbl0"$[F]2j%'d67ZqS4F3`&rYI`;Q7_uS?+\NVP:r[iPD@9SkP)`KJf
%#(Is"%W.\Pdd@AGI)/R<LP(S+_Od$NB7='45;1Dk"L)r6!!EQZe`;T4q;4"IFiYRj-t4>cSFaGaB-0,WB[<J88&nN':3Mld/>q.9
%g]Bbm?D`cBSj4>K]nk252udG/qi$"J/hiZn@4MBq2`Yb(V2_hBH708[mr]P$d>P+rMfSO@&#O]RRcg5#a[$&YFZ:TJY9A<TS$%s8
%M3.sT4l1^O/\*Bq"R/rX>BC)c?k_9QiN\/6N+0JAjn?4kX([Sd<<EZ]"\*!0S%Mh#d1nDT_a=pJ6QeXkOf_.j"oGN'ViiDs_kP[A
%NO+cOT$Y[(r99dPb/mr.^B7`hfCu&a!>@V.9;o[U07RRBi!ct/K_-L3_4WWi3a603=g\A6pToMK0\go:<#PB!ra:qNeB5c>^R[1^
%hN#+.P#Tr>1S`Vid?2n;(:j!/2/DM$\1!%.B:Wq1JE5_p3Kl]?.?+/A6?QI]'j*=-flAH8=cL\W_`U[QgDJ%F]rhSBL\EN)*tu1P
%=s+^4pF=daF//]m>_"2M#TI+moS7Y]?Wn/T=QNKa,d:t4iXm;)!Y'oa_1\B1E1gYW?5FB1ZZcal&cA'sbJc$GjAJrC$stWDe@1N[
%RHF.praEskU)$+hC[jMes+"S6nkeQ'a[H*.\d.#-_uX\<NhU\2"tZM#bie0Hq>7"^J,65:&BAD*\nX()D\(B5`++3Wgk[I9\SiS4
%rW^6(8"5Y23<_k&WT&KH')S"%pbhlr,.E68n&NoLM3<L&@R?9Z+t6p7MNk%"?VBNWSq<aVJh4Yt=6Diq([B>Ghbg$VI#)!uhKtm=
%;Hq9B]bN9Cd]Eo:F#%;/N-rk@IE]Fa`pr55=c4@^N3Y#]JIkb^0*lZ3$qOV0e=($);Icab.`]1Q#meq+-#LKN:pcqU"]4fmoKuX&
%1DJ#H:d!SkB?B3$=FlK=S4B81!I=^D`%is5<s6&&T`ON=,8&Ae\O8$*N#6Y6[<-!5(:EmU4!'fC5ob/IeIe3/W;e%+P3IN[8d9MW
%2jQdGHn`j;V9&]djQ2m^:b\=Ib_n%K<+;_A2e;Hk9g$o<Y*5B7"IXU)pBXFc1]S=0h$?<,omH\*VZah6g,G3H#SGDUWn-4G#@DtX
%qND:[&;eic(j2Oa*L+lb-9nPr`+jY6SdT8`63c4U3b9J5PX&'.b^3.*:!P@4D^Ng[c1/u3%4nfF,T9bXZMr+2Bkmn>nUbCC2FqRF
%L'7!,Z8"<<7kaE*FgM`0ghp9iP!nl]ln-"H1QAhMXMWG;OO)Ol9nY^Icn^4m+]YQV5?jFE?q.MARRD=4"A94,e7_U4Xq,''B_Y8_
%hM^]bnViSALB2IoC`-)TT4sCh#[^Ka*"Rodl72CQfYW^^nsYu`Gjpp[):,/Ll]$-WS!)4X[>GMrQ5Mc&"eQmFr-P/nNOT')P,f+O
%N5&8UDmKmI4V22Ec.'N`"R/mI?g7sfof+f@Q<W/H7j)*\pn../LR,`rq2lQ13F6<S0'4)BT6&#Bd.(9GOK[HB*o5S(*cBl8N;ER]
%G(m&<)aX,._>iK.(_Z<MmB6..V4Z2e"bW9[RM5u.7^[qe31nCiijSm$qqdg)mX2E6BbR`@h!(V=X`e@6be3]"G\0m,IituZM!6fK
%3C'giW`[-a$'Q,47Hb`,1[LER4ffn0X_=bO!7fN"4#PITG@_-oOCLY5S#Ni7cjJfaP/7:Jcs!)1,"5$D;.WYC7YlRc#:kW+,FJCr
%^fFGDLbhRPXjt^>N*NGS<qIm"")0<L=BO0*)LNH9/4\G0H*&:09F^"r[7`qh,EXuinU."(U$#'CTa7G-F=P<>lLZ&[I9aO6Ym%Bf
%V]kR0H%3>pUI3uk(BsC'gt>^HV'95mWiK9)X#05t'(*Hf,1"VJ:>HaFe0Cc,!#G_s`3fH\2^U1dl4=7lmG]\`BVf4`cU5uPXT4@.
%DsgukVuPmNd>]W9)dG\9K65a.W()ci_Cc)?eXW^i.iFsQ?j\Se>Gn`\9]@F;ea7/-,dq%?cFG^Hj:^_dV$K:1#d$-tV:RCuj4PtT
%?6%u&G)B8<Et,>YkU0(oc\D(qk@^TGJk&$#3flk;cIRdtP"@pS;Cu!BPYI/=V?mM%Q7Z4^=@>.]/endb12*]/S!%Y\*5P[18oq#)
%0\JmD(9FFhe_+WhTkTCaoMMSfa'V4DJl^>mAPLk(S(-aHPb-^Ci2hnO&N^`AR6FN",Y[!UbDIFDNea>s%Ukt3n1[<eaeFcr;FjPo
%bcQ6jFAhJlWLhe_\LG@oLMITf`NgGaDr37sm+QZN73!q5j0a[&9dBVF`9o(WfXAB9V4sfg<gD"tf4_9CX[OZJ]Q/0ZALjTR\J%Y6
%TKkEW3+R&X*Q1"a@O5i"CuN\A>qgf>c6h)Nqc.!0O>og"@7cdA:f!-Njbs;khG$b"M_7T0S8,R4h*gnSVIm&W!csT`$<Y'^8VuG1
%ARY,)OaA:(gW>;!OgC6:II#D@[8YtG'9PQh9))PV)bh@BdWQE]%7D]kjM"$%3#l]G6gZ/QCoq\.#Ba)&,\kdpe5NH5.RLPgShSX3
%lh'-19^"HIdG0kK]BH>R">prG"[Pg4&m1$@F;$%2'R$/I/.Uu#*_(?m9<8rK_;rkE42DsJg/^o=+B(e#MCp>DE_8i4q`(k6'=[YU
%YVX^B0Rn32Tcl>6`FujAHSa\B>UTqn_.c8L<Up8TXj&b[id+#J1T=t;$,pLT<.q-krU7lg)-e)@DIL`UX_&#Z<-6Qnp'eap-oD$2
%74+^qraf7;h.k^M;e(q'Nb(R3*ab)Okh+H3.8lHZ+k;TV20PS)Yp:>"SX;'l,(t$RMocBG8BZO,!0B^XXYnI`bh$X_ghe@%as7iK
%*I4rT.RqQ>0.b_Q4oc"K$[f:kTDekG1oM`V)7A#G^d#LucX=M<BphR_jHc;X!TbjFbr.(H7&aluB`XZmf[UI<@,Ij.*lrL9j;e>N
%7AM+pYRQdJL+oTU)Q(NGN<H__o/iBt&_W(172+=NR`q!r@9&A6$+S@tOc!s@C812D%g@j,07bVss%+n9F.G53T2SLM:*9=f.66`D
%]]@um,/h"!Gc?**@W?un5cdP#QdE5q?<_&(]Rr94?jWAMSeDpS7/!4M_nLJIT"0nu\`#SDI-AjldM"It<1H4a@.$Bg)M@.a#p.@-
%NG1d+`V*=$1l)qhe!Vm[X:u"0#X'$l-]H7Z+imD`A"j:h+=fe<l%K%ag]OY=S^@Ka9QdiU?6!3$=f"l4*LJX<KuI\lm@JnTk>bDG
%a[2458Ynr=;F1/r;doom8fjit2$$Js&VTprBPa_WQ4DD%<qBGF7R+D]7q"_f-1F'<g*\6Sh&c"?S$IP04t8ZS^H+JZCt\g@^OC8'
%j4X>,X24f3QS3hEHhHRXE`LsMml-a/m;H>i_h36tj_X73s*^4m\'(iFYd/IAoC)Whr7F[qri=B,p4"\\\:-BYIP:&3R)R[`2ntSU
%YHE(6jKW'@)*d5&\D5lC=+0o7G1lmQXP`br__VP#psQEQp+o2[s$,C)]_q03igV)DqJ^NQE3^JOL=PFe^=1pna*t'RSpinN42[_X
%!RG>]EuF0]0&f==Iq>0VFRXWLN)`!<Z5[D&TglFcKC8E4l,nI@X,GT9EisVaTt2ZDY'feXe@%;)cb:ta]K=@S-`a:(N:_L($qEPV
%f>EAdJ%H]OLBlEArSoTt=0)3m^DVJR0?pZO_aCsp_sH@ErXW+Md!3@RdE,0K*$5"eeB)g@~>
%AI9_PrivateDataEnd
